//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// read_csr                       O    65
// read_csr_port2                 O    65
// read_scr                       O   152
// mav_read_csr                   O    65
// mav_csr_write                  O   129
// mav_scr_write                  O   151
// read_frm                       O     3 reg
// read_fflags                    O     5 reg
// mv_update_fcsr_fflags          O     5
// mv_update_mstatus_fs           O    64
// read_misa                      O    28 const
// read_mstatus                   O    64 reg
// read_sstatus                   O    64
// read_ustatus                   O    64
// read_satp                      O    64 reg
// csr_trap_actions               O   281
// RDY_csr_trap_actions           O     1 const
// csr_ret_actions                O   227
// RDY_csr_ret_actions            O     1 const
// read_csr_minstret              O    64 reg
// read_csr_mcycle                O    64 reg
// read_csr_mtime                 O    64 reg
// access_permitted_1             O     2
// access_permitted_2             O     2
// access_permitted_scr           O     2
// csr_counter_read_fault         O     1
// csr_mip_read                   O    64
// interrupt_pending              O     7
// wfi_resume                     O     1
// nmi_pending                    O     1 reg
// RDY_debug                      O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// read_csr_csr_addr              I    12
// read_csr_port2_csr_addr        I    12
// read_scr_scr_addr              I     5
// mav_read_csr_csr_addr          I    12
// mav_csr_write_csr_addr         I    12
// mav_csr_write_word             I    64
// mav_scr_write_scr_addr         I     5
// mav_scr_write_cap              I   151
// mv_update_fcsr_fflags_flags    I     5
// ma_update_fcsr_fflags_flags    I     5
// mv_update_mstatus_fs_fs        I     2
// ma_update_mstatus_fs_fs        I     2
// csr_trap_actions_from_priv     I     2
// csr_trap_actions_pcc           I   161
// csr_trap_actions_nmi           I     1
// csr_trap_actions_interrupt     I     1
// csr_trap_actions_cheri_exc_code  I     5
// csr_trap_actions_cheri_exc_reg  I     6
// csr_trap_actions_exc_code      I     6
// csr_trap_actions_xtval         I    64
// csr_ret_actions_from_priv      I     2
// send_performance_events_evts   I  7360
// access_permitted_1_priv        I     2
// access_permitted_1_csr_addr    I    12
// access_permitted_1_read_not_write  I     1
// access_permitted_2_priv        I     2
// access_permitted_2_csr_addr    I    12
// access_permitted_2_read_not_write  I     1
// access_permitted_scr_priv      I     2
// access_permitted_scr_scr_addr  I     5
// access_permitted_scr_read_not_write  I     1 unused
// csr_counter_read_fault_priv    I     2
// csr_counter_read_fault_csr_addr  I    12
// m_external_interrupt_req_set_not_clear  I     1
// s_external_interrupt_req_set_not_clear  I     1
// timer_interrupt_req_set_not_clear  I     1
// software_interrupt_req_set_not_clear  I     1
// interrupt_pending_cur_priv     I     2
// nmi_req_set_not_clear          I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_ma_update_fcsr_fflags       I     1
// EN_ma_update_mstatus_fs        I     1
// EN_csr_minstret_incr           I     1
// EN_m_external_interrupt_req    I     1
// EN_s_external_interrupt_req    I     1
// EN_timer_interrupt_req         I     1
// EN_software_interrupt_req      I     1
// EN_nmi_req                     I     1
// EN_debug                       I     1 unused
// EN_mav_read_csr                I     1 unused
// EN_mav_csr_write               I     1
// EN_mav_scr_write               I     1
// EN_csr_trap_actions            I     1
// EN_csr_ret_actions             I     1
//
// Combinational paths from inputs to outputs:
//   read_csr_csr_addr -> read_csr
//   read_csr_port2_csr_addr -> read_csr_port2
//   read_scr_scr_addr -> read_scr
//   mv_update_fcsr_fflags_flags -> mv_update_fcsr_fflags
//   mv_update_mstatus_fs_fs -> mv_update_mstatus_fs
//   (access_permitted_1_priv,
//    access_permitted_1_csr_addr,
//    access_permitted_1_read_not_write) -> access_permitted_1
//   (access_permitted_2_priv,
//    access_permitted_2_csr_addr,
//    access_permitted_2_read_not_write) -> access_permitted_2
//   (access_permitted_scr_priv,
//    access_permitted_scr_scr_addr) -> access_permitted_scr
//   (csr_counter_read_fault_priv,
//    csr_counter_read_fault_csr_addr) -> csr_counter_read_fault
//   interrupt_pending_cur_priv -> interrupt_pending
//   mav_read_csr_csr_addr -> mav_read_csr
//   (mav_csr_write_csr_addr,
//    mav_csr_write_word,
//    EN_mav_csr_write) -> mav_csr_write
//   (mav_scr_write_scr_addr, mav_scr_write_cap) -> mav_scr_write
//   (csr_trap_actions_from_priv,
//    csr_trap_actions_nmi,
//    csr_trap_actions_interrupt,
//    csr_trap_actions_exc_code) -> csr_trap_actions
//   csr_ret_actions_from_priv -> csr_ret_actions
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCSR_RegFile(CLK,
		     RST_N,

		     EN_server_reset_request_put,
		     RDY_server_reset_request_put,

		     EN_server_reset_response_get,
		     RDY_server_reset_response_get,

		     read_csr_csr_addr,
		     read_csr,

		     read_csr_port2_csr_addr,
		     read_csr_port2,

		     read_scr_scr_addr,
		     read_scr,

		     mav_read_csr_csr_addr,
		     EN_mav_read_csr,
		     mav_read_csr,

		     mav_csr_write_csr_addr,
		     mav_csr_write_word,
		     EN_mav_csr_write,
		     mav_csr_write,

		     mav_scr_write_scr_addr,
		     mav_scr_write_cap,
		     EN_mav_scr_write,
		     mav_scr_write,

		     read_frm,

		     read_fflags,

		     mv_update_fcsr_fflags_flags,
		     mv_update_fcsr_fflags,

		     ma_update_fcsr_fflags_flags,
		     EN_ma_update_fcsr_fflags,

		     mv_update_mstatus_fs_fs,
		     mv_update_mstatus_fs,

		     ma_update_mstatus_fs_fs,
		     EN_ma_update_mstatus_fs,

		     read_misa,

		     read_mstatus,

		     read_sstatus,

		     read_ustatus,

		     read_satp,

		     csr_trap_actions_from_priv,
		     csr_trap_actions_pcc,
		     csr_trap_actions_nmi,
		     csr_trap_actions_interrupt,
		     csr_trap_actions_cheri_exc_code,
		     csr_trap_actions_cheri_exc_reg,
		     csr_trap_actions_exc_code,
		     csr_trap_actions_xtval,
		     EN_csr_trap_actions,
		     csr_trap_actions,
		     RDY_csr_trap_actions,

		     csr_ret_actions_from_priv,
		     EN_csr_ret_actions,
		     csr_ret_actions,
		     RDY_csr_ret_actions,

		     read_csr_minstret,

		     EN_csr_minstret_incr,

		     read_csr_mcycle,

		     read_csr_mtime,

		     send_performance_events_evts,

		     access_permitted_1_priv,
		     access_permitted_1_csr_addr,
		     access_permitted_1_read_not_write,
		     access_permitted_1,

		     access_permitted_2_priv,
		     access_permitted_2_csr_addr,
		     access_permitted_2_read_not_write,
		     access_permitted_2,

		     access_permitted_scr_priv,
		     access_permitted_scr_scr_addr,
		     access_permitted_scr_read_not_write,
		     access_permitted_scr,

		     csr_counter_read_fault_priv,
		     csr_counter_read_fault_csr_addr,
		     csr_counter_read_fault,

		     csr_mip_read,

		     m_external_interrupt_req_set_not_clear,
		     EN_m_external_interrupt_req,

		     s_external_interrupt_req_set_not_clear,
		     EN_s_external_interrupt_req,

		     timer_interrupt_req_set_not_clear,
		     EN_timer_interrupt_req,

		     software_interrupt_req_set_not_clear,
		     EN_software_interrupt_req,

		     interrupt_pending_cur_priv,
		     interrupt_pending,

		     wfi_resume,

		     nmi_req_set_not_clear,
		     EN_nmi_req,

		     nmi_pending,

		     EN_debug,
		     RDY_debug);
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // value method read_csr
  input  [11 : 0] read_csr_csr_addr;
  output [64 : 0] read_csr;

  // value method read_csr_port2
  input  [11 : 0] read_csr_port2_csr_addr;
  output [64 : 0] read_csr_port2;

  // value method read_scr
  input  [4 : 0] read_scr_scr_addr;
  output [151 : 0] read_scr;

  // actionvalue method mav_read_csr
  input  [11 : 0] mav_read_csr_csr_addr;
  input  EN_mav_read_csr;
  output [64 : 0] mav_read_csr;

  // actionvalue method mav_csr_write
  input  [11 : 0] mav_csr_write_csr_addr;
  input  [63 : 0] mav_csr_write_word;
  input  EN_mav_csr_write;
  output [128 : 0] mav_csr_write;

  // actionvalue method mav_scr_write
  input  [4 : 0] mav_scr_write_scr_addr;
  input  [150 : 0] mav_scr_write_cap;
  input  EN_mav_scr_write;
  output [150 : 0] mav_scr_write;

  // value method read_frm
  output [2 : 0] read_frm;

  // value method read_fflags
  output [4 : 0] read_fflags;

  // value method mv_update_fcsr_fflags
  input  [4 : 0] mv_update_fcsr_fflags_flags;
  output [4 : 0] mv_update_fcsr_fflags;

  // action method ma_update_fcsr_fflags
  input  [4 : 0] ma_update_fcsr_fflags_flags;
  input  EN_ma_update_fcsr_fflags;

  // value method mv_update_mstatus_fs
  input  [1 : 0] mv_update_mstatus_fs_fs;
  output [63 : 0] mv_update_mstatus_fs;

  // action method ma_update_mstatus_fs
  input  [1 : 0] ma_update_mstatus_fs_fs;
  input  EN_ma_update_mstatus_fs;

  // value method read_misa
  output [27 : 0] read_misa;

  // value method read_mstatus
  output [63 : 0] read_mstatus;

  // value method read_sstatus
  output [63 : 0] read_sstatus;

  // value method read_ustatus
  output [63 : 0] read_ustatus;

  // value method read_satp
  output [63 : 0] read_satp;

  // actionvalue method csr_trap_actions
  input  [1 : 0] csr_trap_actions_from_priv;
  input  [160 : 0] csr_trap_actions_pcc;
  input  csr_trap_actions_nmi;
  input  csr_trap_actions_interrupt;
  input  [4 : 0] csr_trap_actions_cheri_exc_code;
  input  [5 : 0] csr_trap_actions_cheri_exc_reg;
  input  [5 : 0] csr_trap_actions_exc_code;
  input  [63 : 0] csr_trap_actions_xtval;
  input  EN_csr_trap_actions;
  output [280 : 0] csr_trap_actions;
  output RDY_csr_trap_actions;

  // actionvalue method csr_ret_actions
  input  [1 : 0] csr_ret_actions_from_priv;
  input  EN_csr_ret_actions;
  output [226 : 0] csr_ret_actions;
  output RDY_csr_ret_actions;

  // value method read_csr_minstret
  output [63 : 0] read_csr_minstret;

  // action method csr_minstret_incr
  input  EN_csr_minstret_incr;

  // value method read_csr_mcycle
  output [63 : 0] read_csr_mcycle;

  // value method read_csr_mtime
  output [63 : 0] read_csr_mtime;

  // action method send_performance_events
  input  [7359 : 0] send_performance_events_evts;

  // value method access_permitted_1
  input  [1 : 0] access_permitted_1_priv;
  input  [11 : 0] access_permitted_1_csr_addr;
  input  access_permitted_1_read_not_write;
  output [1 : 0] access_permitted_1;

  // value method access_permitted_2
  input  [1 : 0] access_permitted_2_priv;
  input  [11 : 0] access_permitted_2_csr_addr;
  input  access_permitted_2_read_not_write;
  output [1 : 0] access_permitted_2;

  // value method access_permitted_scr
  input  [1 : 0] access_permitted_scr_priv;
  input  [4 : 0] access_permitted_scr_scr_addr;
  input  access_permitted_scr_read_not_write;
  output [1 : 0] access_permitted_scr;

  // value method csr_counter_read_fault
  input  [1 : 0] csr_counter_read_fault_priv;
  input  [11 : 0] csr_counter_read_fault_csr_addr;
  output csr_counter_read_fault;

  // value method csr_mip_read
  output [63 : 0] csr_mip_read;

  // action method m_external_interrupt_req
  input  m_external_interrupt_req_set_not_clear;
  input  EN_m_external_interrupt_req;

  // action method s_external_interrupt_req
  input  s_external_interrupt_req_set_not_clear;
  input  EN_s_external_interrupt_req;

  // action method timer_interrupt_req
  input  timer_interrupt_req_set_not_clear;
  input  EN_timer_interrupt_req;

  // action method software_interrupt_req
  input  software_interrupt_req_set_not_clear;
  input  EN_software_interrupt_req;

  // value method interrupt_pending
  input  [1 : 0] interrupt_pending_cur_priv;
  output [6 : 0] interrupt_pending;

  // value method wfi_resume
  output wfi_resume;

  // action method nmi_req
  input  nmi_req_set_not_clear;
  input  EN_nmi_req;

  // value method nmi_pending
  output nmi_pending;

  // action method debug
  input  EN_debug;
  output RDY_debug;

  // signals for module outputs
  wire [280 : 0] csr_trap_actions;
  wire [226 : 0] csr_ret_actions;
  wire [151 : 0] read_scr;
  wire [150 : 0] mav_scr_write;
  wire [128 : 0] mav_csr_write;
  wire [64 : 0] mav_read_csr, read_csr, read_csr_port2;
  wire [63 : 0] csr_mip_read,
		mv_update_mstatus_fs,
		read_csr_mcycle,
		read_csr_minstret,
		read_csr_mtime,
		read_mstatus,
		read_satp,
		read_sstatus,
		read_ustatus;
  wire [27 : 0] read_misa;
  wire [6 : 0] interrupt_pending;
  wire [4 : 0] mv_update_fcsr_fflags, read_fflags;
  wire [2 : 0] read_frm;
  wire [1 : 0] access_permitted_1, access_permitted_2, access_permitted_scr;
  wire RDY_csr_ret_actions,
       RDY_csr_trap_actions,
       RDY_debug,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       csr_counter_read_fault,
       nmi_pending,
       wfi_resume;

  // inlined wires
  wire [1 : 0] w_ctr_inhib_ir_cy$wget;
  wire rw_mcycle$whas;

  // register cfg_verbosity
  reg [3 : 0] cfg_verbosity;
  wire [3 : 0] cfg_verbosity$D_IN;
  wire cfg_verbosity$EN;

  // register csr_mstatus_rg_mstatus
  reg [63 : 0] csr_mstatus_rg_mstatus;
  reg [63 : 0] csr_mstatus_rg_mstatus$D_IN;
  wire csr_mstatus_rg_mstatus$EN;

  // register rg_ctr_inhib_ir_cy
  reg [1 : 0] rg_ctr_inhib_ir_cy;
  wire [1 : 0] rg_ctr_inhib_ir_cy$D_IN;
  wire rg_ctr_inhib_ir_cy$EN;

  // register rg_dcsr
  reg [31 : 0] rg_dcsr;
  wire [31 : 0] rg_dcsr$D_IN;
  wire rg_dcsr$EN;

  // register rg_dpcc
  reg [160 : 0] rg_dpcc;
  wire [160 : 0] rg_dpcc$D_IN;
  wire rg_dpcc$EN;

  // register rg_dscratch0
  reg [63 : 0] rg_dscratch0;
  wire [63 : 0] rg_dscratch0$D_IN;
  wire rg_dscratch0$EN;

  // register rg_dscratch1
  reg [63 : 0] rg_dscratch1;
  wire [63 : 0] rg_dscratch1$D_IN;
  wire rg_dscratch1$EN;

  // register rg_fflags
  reg [4 : 0] rg_fflags;
  reg [4 : 0] rg_fflags$D_IN;
  wire rg_fflags$EN;

  // register rg_frm
  reg [2 : 0] rg_frm;
  wire [2 : 0] rg_frm$D_IN;
  wire rg_frm$EN;

  // register rg_mcause
  reg [6 : 0] rg_mcause;
  reg [6 : 0] rg_mcause$D_IN;
  wire rg_mcause$EN;

  // register rg_mccsr
  reg [10 : 0] rg_mccsr;
  wire [10 : 0] rg_mccsr$D_IN;
  wire rg_mccsr$EN;

  // register rg_mcounteren
  reg [31 : 0] rg_mcounteren;
  wire [31 : 0] rg_mcounteren$D_IN;
  wire rg_mcounteren$EN;

  // register rg_mcycle
  reg [63 : 0] rg_mcycle;
  wire [63 : 0] rg_mcycle$D_IN;
  wire rg_mcycle$EN;

  // register rg_medeleg
  reg [28 : 0] rg_medeleg;
  wire [28 : 0] rg_medeleg$D_IN;
  wire rg_medeleg$EN;

  // register rg_mepcc
  reg [150 : 0] rg_mepcc;
  reg [150 : 0] rg_mepcc$D_IN;
  wire rg_mepcc$EN;

  // register rg_mideleg
  reg [11 : 0] rg_mideleg;
  wire [11 : 0] rg_mideleg$D_IN;
  wire rg_mideleg$EN;

  // register rg_minstret
  reg [63 : 0] rg_minstret;
  wire [63 : 0] rg_minstret$D_IN;
  wire rg_minstret$EN;

  // register rg_mscratch
  reg [63 : 0] rg_mscratch;
  wire [63 : 0] rg_mscratch$D_IN;
  wire rg_mscratch$EN;

  // register rg_mscratchc
  reg [150 : 0] rg_mscratchc;
  wire [150 : 0] rg_mscratchc$D_IN;
  wire rg_mscratchc$EN;

  // register rg_mtcc
  reg [150 : 0] rg_mtcc;
  reg [150 : 0] rg_mtcc$D_IN;
  wire rg_mtcc$EN;

  // register rg_mtdc
  reg [150 : 0] rg_mtdc;
  wire [150 : 0] rg_mtdc$D_IN;
  wire rg_mtdc$EN;

  // register rg_mtime
  reg [63 : 0] rg_mtime;
  wire [63 : 0] rg_mtime$D_IN;
  wire rg_mtime$EN;

  // register rg_mtval
  reg [63 : 0] rg_mtval;
  wire [63 : 0] rg_mtval$D_IN;
  wire rg_mtval$EN;

  // register rg_nmi
  reg rg_nmi;
  wire rg_nmi$D_IN, rg_nmi$EN;

  // register rg_nmi_vector
  reg [63 : 0] rg_nmi_vector;
  wire [63 : 0] rg_nmi_vector$D_IN;
  wire rg_nmi_vector$EN;

  // register rg_satp
  reg [63 : 0] rg_satp;
  wire [63 : 0] rg_satp$D_IN;
  wire rg_satp$EN;

  // register rg_scause
  reg [6 : 0] rg_scause;
  reg [6 : 0] rg_scause$D_IN;
  wire rg_scause$EN;

  // register rg_sccsr
  reg [10 : 0] rg_sccsr;
  wire [10 : 0] rg_sccsr$D_IN;
  wire rg_sccsr$EN;

  // register rg_sepcc
  reg [150 : 0] rg_sepcc;
  reg [150 : 0] rg_sepcc$D_IN;
  wire rg_sepcc$EN;

  // register rg_sscratch
  reg [63 : 0] rg_sscratch;
  wire [63 : 0] rg_sscratch$D_IN;
  wire rg_sscratch$EN;

  // register rg_sscratchc
  reg [150 : 0] rg_sscratchc;
  wire [150 : 0] rg_sscratchc$D_IN;
  wire rg_sscratchc$EN;

  // register rg_state
  reg rg_state;
  wire rg_state$D_IN, rg_state$EN;

  // register rg_stcc
  reg [150 : 0] rg_stcc;
  reg [150 : 0] rg_stcc$D_IN;
  wire rg_stcc$EN;

  // register rg_stdc
  reg [150 : 0] rg_stdc;
  wire [150 : 0] rg_stdc$D_IN;
  wire rg_stdc$EN;

  // register rg_stval
  reg [63 : 0] rg_stval;
  wire [63 : 0] rg_stval$D_IN;
  wire rg_stval$EN;

  // register rg_tdata1
  reg [63 : 0] rg_tdata1;
  wire [63 : 0] rg_tdata1$D_IN;
  wire rg_tdata1$EN;

  // register rg_tdata2
  reg [63 : 0] rg_tdata2;
  wire [63 : 0] rg_tdata2$D_IN;
  wire rg_tdata2$EN;

  // register rg_tdata3
  reg [63 : 0] rg_tdata3;
  wire [63 : 0] rg_tdata3$D_IN;
  wire rg_tdata3$EN;

  // register rg_tselect
  reg [63 : 0] rg_tselect;
  wire [63 : 0] rg_tselect$D_IN;
  wire rg_tselect$EN;

  // ports of submodule csr_mie
  wire [63 : 0] csr_mie$mav_sie_write,
		csr_mie$mav_sie_write_wordxl,
		csr_mie$mav_write,
		csr_mie$mav_write_wordxl,
		csr_mie$mv_read,
		csr_mie$mv_sie_read;
  wire [27 : 0] csr_mie$mav_sie_write_misa, csr_mie$mav_write_misa;
  wire csr_mie$EN_mav_sie_write, csr_mie$EN_mav_write, csr_mie$EN_reset;

  // ports of submodule csr_mip
  wire [63 : 0] csr_mip$mav_sip_write,
		csr_mip$mav_sip_write_wordxl,
		csr_mip$mav_write,
		csr_mip$mav_write_wordxl,
		csr_mip$mv_read,
		csr_mip$mv_sip_read;
  wire [27 : 0] csr_mip$mav_sip_write_misa, csr_mip$mav_write_misa;
  wire csr_mip$EN_m_external_interrupt_req,
       csr_mip$EN_mav_sip_write,
       csr_mip$EN_mav_write,
       csr_mip$EN_reset,
       csr_mip$EN_s_external_interrupt_req,
       csr_mip$EN_software_interrupt_req,
       csr_mip$EN_timer_interrupt_req,
       csr_mip$m_external_interrupt_req_req,
       csr_mip$s_external_interrupt_req_req,
       csr_mip$software_interrupt_req_req,
       csr_mip$timer_interrupt_req_req;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule perf_counters
  wire [7359 : 0] perf_counters$send_performance_events_evts;
  wire [63 : 0] perf_counters$read_counters_0__read,
		perf_counters$read_counters_10__read,
		perf_counters$read_counters_11__read,
		perf_counters$read_counters_12__read,
		perf_counters$read_counters_13__read,
		perf_counters$read_counters_14__read,
		perf_counters$read_counters_15__read,
		perf_counters$read_counters_16__read,
		perf_counters$read_counters_17__read,
		perf_counters$read_counters_18__read,
		perf_counters$read_counters_19__read,
		perf_counters$read_counters_1__read,
		perf_counters$read_counters_20__read,
		perf_counters$read_counters_21__read,
		perf_counters$read_counters_22__read,
		perf_counters$read_counters_23__read,
		perf_counters$read_counters_24__read,
		perf_counters$read_counters_25__read,
		perf_counters$read_counters_26__read,
		perf_counters$read_counters_27__read,
		perf_counters$read_counters_28__read,
		perf_counters$read_counters_2__read,
		perf_counters$read_counters_3__read,
		perf_counters$read_counters_4__read,
		perf_counters$read_counters_5__read,
		perf_counters$read_counters_6__read,
		perf_counters$read_counters_7__read,
		perf_counters$read_counters_8__read,
		perf_counters$read_counters_9__read,
		perf_counters$write_counter_val;
  wire [28 : 0] perf_counters$read_ctr_inhibit__read,
		perf_counters$write_ctr_inhibit_val;
  wire [6 : 0] perf_counters$read_ctr_sels_0__read,
	       perf_counters$read_ctr_sels_10__read,
	       perf_counters$read_ctr_sels_11__read,
	       perf_counters$read_ctr_sels_12__read,
	       perf_counters$read_ctr_sels_13__read,
	       perf_counters$read_ctr_sels_14__read,
	       perf_counters$read_ctr_sels_15__read,
	       perf_counters$read_ctr_sels_16__read,
	       perf_counters$read_ctr_sels_17__read,
	       perf_counters$read_ctr_sels_18__read,
	       perf_counters$read_ctr_sels_19__read,
	       perf_counters$read_ctr_sels_1__read,
	       perf_counters$read_ctr_sels_20__read,
	       perf_counters$read_ctr_sels_21__read,
	       perf_counters$read_ctr_sels_22__read,
	       perf_counters$read_ctr_sels_23__read,
	       perf_counters$read_ctr_sels_24__read,
	       perf_counters$read_ctr_sels_25__read,
	       perf_counters$read_ctr_sels_26__read,
	       perf_counters$read_ctr_sels_27__read,
	       perf_counters$read_ctr_sels_28__read,
	       perf_counters$read_ctr_sels_2__read,
	       perf_counters$read_ctr_sels_3__read,
	       perf_counters$read_ctr_sels_4__read,
	       perf_counters$read_ctr_sels_5__read,
	       perf_counters$read_ctr_sels_6__read,
	       perf_counters$read_ctr_sels_7__read,
	       perf_counters$read_ctr_sels_8__read,
	       perf_counters$read_ctr_sels_9__read,
	       perf_counters$write_ctr_sel_val;
  wire [4 : 0] perf_counters$write_counter_idx,
	       perf_counters$write_ctr_sel_idx;
  wire perf_counters$EN_write_counter,
       perf_counters$EN_write_ctr_inhibit,
       perf_counters$EN_write_ctr_sel;

  // ports of submodule soc_map
  wire [150 : 0] soc_map$m_mepcc_reset_value, soc_map$m_mtcc_reset_value;
  wire [63 : 0] soc_map$m_is_IO_addr_addr,
		soc_map$m_is_mem_addr_addr,
		soc_map$m_is_near_mem_IO_addr_addr,
		soc_map$m_nmivec_reset_value;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_mcycle_incr,
       CAN_FIRE_RL_rl_mtime_incr,
       CAN_FIRE_RL_rl_reset_start,
       CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx,
       CAN_FIRE_RL_rl_upd_minstret_csrrx,
       CAN_FIRE_RL_rl_upd_minstret_incr,
       CAN_FIRE_csr_minstret_incr,
       CAN_FIRE_csr_ret_actions,
       CAN_FIRE_csr_trap_actions,
       CAN_FIRE_debug,
       CAN_FIRE_m_external_interrupt_req,
       CAN_FIRE_ma_update_fcsr_fflags,
       CAN_FIRE_ma_update_mstatus_fs,
       CAN_FIRE_mav_csr_write,
       CAN_FIRE_mav_read_csr,
       CAN_FIRE_mav_scr_write,
       CAN_FIRE_nmi_req,
       CAN_FIRE_s_external_interrupt_req,
       CAN_FIRE_send_performance_events,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_software_interrupt_req,
       CAN_FIRE_timer_interrupt_req,
       WILL_FIRE_RL_rl_mcycle_incr,
       WILL_FIRE_RL_rl_mtime_incr,
       WILL_FIRE_RL_rl_reset_start,
       WILL_FIRE_RL_rl_upd_ctr_inhib_csrrx,
       WILL_FIRE_RL_rl_upd_minstret_csrrx,
       WILL_FIRE_RL_rl_upd_minstret_incr,
       WILL_FIRE_csr_minstret_incr,
       WILL_FIRE_csr_ret_actions,
       WILL_FIRE_csr_trap_actions,
       WILL_FIRE_debug,
       WILL_FIRE_m_external_interrupt_req,
       WILL_FIRE_ma_update_fcsr_fflags,
       WILL_FIRE_ma_update_mstatus_fs,
       WILL_FIRE_mav_csr_write,
       WILL_FIRE_mav_read_csr,
       WILL_FIRE_mav_scr_write,
       WILL_FIRE_nmi_req,
       WILL_FIRE_s_external_interrupt_req,
       WILL_FIRE_send_performance_events,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_software_interrupt_req,
       WILL_FIRE_timer_interrupt_req;

  // inputs to muxes for submodule ports
  reg [63 : 0] MUX_csr_mstatus_rg_mstatus$write_1__VAL_5;
  wire [150 : 0] MUX_rg_mepcc$write_1__VAL_2,
		 MUX_rg_mepcc$write_1__VAL_4,
		 MUX_rg_mtcc$write_1__VAL_2,
		 MUX_rg_mtcc$write_1__VAL_3,
		 MUX_rg_sepcc$write_1__VAL_4,
		 MUX_rg_stcc$write_1__VAL_3;
  wire [63 : 0] MUX_csr_mstatus_rg_mstatus$write_1__VAL_2,
		MUX_csr_mstatus_rg_mstatus$write_1__VAL_4,
		MUX_rg_minstret$write_1__VAL_1,
		MUX_rg_minstret$write_1__VAL_2,
		MUX_rg_mtval$write_1__VAL_1;
  wire [28 : 0] MUX_rg_medeleg$write_1__VAL_1;
  wire [6 : 0] MUX_rg_mcause$write_1__VAL_2, MUX_rg_mcause$write_1__VAL_3;
  wire [4 : 0] MUX_rg_fflags$write_1__VAL_3;
  wire [2 : 0] MUX_rg_frm$write_1__VAL_1;
  wire MUX_csr_mstatus_rg_mstatus$write_1__SEL_5,
       MUX_rg_fflags$write_1__SEL_2,
       MUX_rg_frm$write_1__SEL_1,
       MUX_rg_mcause$write_1__SEL_2,
       MUX_rg_mcause$write_1__SEL_3,
       MUX_rg_mcounteren$write_1__SEL_1,
       MUX_rg_medeleg$write_1__SEL_1,
       MUX_rg_mepcc$write_1__SEL_2,
       MUX_rg_mepcc$write_1__SEL_4,
       MUX_rg_mideleg$write_1__SEL_1,
       MUX_rg_mtcc$write_1__SEL_2,
       MUX_rg_mtcc$write_1__SEL_3,
       MUX_rg_satp$write_1__SEL_1,
       MUX_rg_scause$write_1__SEL_2,
       MUX_rg_scause$write_1__SEL_3,
       MUX_rg_sepcc$write_1__SEL_2,
       MUX_rg_sepcc$write_1__SEL_4,
       MUX_rg_stcc$write_1__SEL_2,
       MUX_rg_stcc$write_1__SEL_3,
       MUX_rg_stval$write_1__SEL_1,
       MUX_rg_tdata1$write_1__SEL_1,
       MUX_rw_minstret$wset_1__SEL_1;

  // remaining internal signals
  reg [150 : 0] IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588;
  reg [71 : 0] IF_mav_scr_write_scr_addr_EQ_13_329_OR_mav_scr_ETC___d1533;
  reg [63 : 0] IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744,
	       IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1490,
	       IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400,
	       IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559,
	       SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165,
	       SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169,
	       SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506,
	       SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510,
	       SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691,
	       SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695,
	       y_avValue_fst__h21773;
  reg [61 : 0] CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q1;
  reg [33 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9;
  reg [17 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7;
  reg [13 : 0] IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1497;
  reg [6 : 0] x__h10178, x__h12039, x__h7424;
  reg [3 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q4;
  reg [1 : 0] CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6,
	      mask__h16025,
	      mask__h16987,
	      mask__h19359,
	      mask__h20393,
	      mask__h23090,
	      mask__h35094;
  reg CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5,
      CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8,
      CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q3,
      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494,
      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612,
      IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1483;
  wire [150 : 0] IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2128;
  wire [149 : 0] IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2066;
  wire [85 : 0] IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2127;
  wire [65 : 0] IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2153;
  wire [64 : 0] IF_mav_scr_write_cap_BITS_33_TO_28_254_ULT_51__ETC___d1413,
		addTop__h27236,
		length__h27883,
		result__h27824,
		ret__h27238;
  wire [63 : 0] IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820,
		IF_NOT_mav_read_csr_csr_addr_ULT_0x323_97_98_A_ETC___d745,
		IF_NOT_mav_read_csr_csr_addr_ULT_0xB03_93_94_A_ETC___d746,
		IF_NOT_mav_read_csr_csr_addr_ULT_0xC03_89_90_A_ETC___d747,
		IF_NOT_read_csr_csr_addr_ULT_0x323_1_2_AND_rea_ETC___d401,
		IF_NOT_read_csr_csr_addr_ULT_0xB03_7_8_AND_rea_ETC___d402,
		IF_NOT_read_csr_csr_addr_ULT_0xC03_3_4_AND_rea_ETC___d403,
		IF_NOT_read_csr_port2_csr_addr_ULT_0x323_12_13_ETC___d560,
		IF_NOT_read_csr_port2_csr_addr_ULT_0xB03_08_09_ETC___d561,
		IF_NOT_read_csr_port2_csr_addr_ULT_0xC03_04_05_ETC___d562,
		IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089,
		SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281,
		SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347,
		SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317,
		SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278,
		SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250,
		_theResult_____2__h32772,
		_theResult___fst__h36158,
		_theResult___fst__h36359,
		a_capFat_address__h36924,
		addBase__h16065,
		addBase__h17027,
		addBase__h19399,
		addBase__h20433,
		addBase__h27120,
		addBase__h35148,
		addrLSB__h27976,
		addrLSB__h29874,
		addrLSB__h8760,
		addrLSB__h8965,
		addrLSB__h9284,
		addrLSB__h9512,
		cap_unpacked_capFat_address__h24396,
		cap_unpacked_capFat_address__h25485,
		csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082,
		csr_mstatus_rg_mstatus_11_AND_INV_1_SL_1_CONCA_ETC___d1812,
		exc_pc___1__h32871,
		exc_pc__h32770,
		mask__h31407,
		mask__h31424,
		mask__h36179,
		mask__h36196,
		mav_csr_write_word_BITS_14_TO_13_93_EQ_0x3_94__ETC___d827,
		mav_scr_write_cap_BITS_149_TO_100_312_AND_1125_ETC___d1317,
		new_csr__h23520,
		new_csr_value__h18599,
		new_csr_value__h19649,
		new_csr_value__h21354,
		new_offset__h24624,
		result_d_address__h35105,
		v__h12278,
		v__h14607,
		v__h17809,
		v__h17930,
		v__h19535,
		v__h20569,
		v__h21229,
		v__h31194,
		val__h31408,
		val__h31425,
		val__h36197,
		vector_offset__h32771,
		wordxl1__h13991,
		wordxl1__h17986,
		x1_avValue_address__h25709,
		x__h15900,
		x__h16868,
		x__h19240,
		x__h20274,
		x__h23591,
		x__h23593,
		x__h24231,
		x__h25345,
		x__h28068,
		x__h29885,
		x__h29887,
		x__h30006,
		x__h31406,
		x__h31419,
		x__h31436,
		x__h35018,
		x__h35151,
		x__h35993,
		x__h35994,
		x__h36178,
		x__h36191,
		x__h36208,
		x__h5495,
		x__h8771,
		x__h8773,
		x__h8902,
		x__h8976,
		x__h8978,
		x__h9104,
		x__h9295,
		x__h9297,
		x__h9423,
		x__h9523,
		x__h9525,
		x__h9651,
		x_address__h16045,
		x_address__h17007,
		x_address__h19379,
		x_address__h20413,
		y__h28067,
		y__h30005,
		y__h31420,
		y__h31437,
		y__h36192,
		y__h36209,
		y__h8901,
		y__h9103,
		y__h9422,
		y__h9650,
		y_avValue_fst__h21523,
		y_avValue_fst__h21528,
		y_avValue_fst__h21533,
		y_avValue_fst__h21789,
		y_avValue_fst__h32724,
		y_avValue_fst__h32742,
		y_avValue_new_csr_value__h21940,
		y_avValue_snd_snd_snd__h32833;
  wire [54 : 0] IF_IF_mav_scr_write_cap_BITS_33_TO_28_254_EQ_0_ETC___d1473;
  wire [52 : 0] IF_IF_csr_ret_actions_from_priv_EQ_0b11_069_TH_ETC___d2125;
  wire [50 : 0] mask__h27237;
  wire [49 : 0] highBitsfilter__h15303,
		highBitsfilter__h16287,
		highBitsfilter__h18643,
		highBitsfilter__h19693,
		highBitsfilter__h33755,
		highOffsetBits__h15304,
		highOffsetBits__h16288,
		highOffsetBits__h18644,
		highOffsetBits__h19694,
		highOffsetBits__h24651,
		highOffsetBits__h33756,
		mask__h27121,
		mav_scr_write_cap_BITS_149_TO_100_PLUS_SEXT_x8_ETC__q2,
		signBits__h19691,
		signBits__h24648,
		signBits__h33753,
		x__h19721,
		x__h24678,
		x__h33783;
  wire [31 : 0] x__h21300, x__h9708;
  wire [28 : 0] rg_mcounteren_BITS_31_TO_3__q10;
  wire [22 : 0] fixed_up_val_23__h14041,
		fixed_up_val_23__h14667,
		fixed_up_val_23__h18036,
		fixed_up_val_23__h28551,
		fixed_up_val_23__h29142,
		fixed_up_val_23__h31247,
		fixed_up_val_23__h36065;
  wire [17 : 0] a_capFat_otype__h36929, x1_avValue_otype__h25714, x__h36862;
  wire [15 : 0] base__h29872,
		offset__h23579,
		offset__h29873,
		offset__h8759,
		offset__h8964,
		offset__h9283,
		offset__h9511,
		x__h16116,
		x__h17078,
		x__h19450,
		x__h20484,
		x__h27171,
		x__h27296,
		x__h27888,
		x__h35209;
  wire [13 : 0] a_capFat_addrBits__h36925,
		cap_unpacked_capFat_addrBits__h24397,
		cap_unpacked_capFat_addrBits__h25486,
		newAddrBits__h16024,
		newAddrBits__h16986,
		newAddrBits__h19358,
		newAddrBits__h20392,
		newAddrBits__h24375,
		newAddrBits__h25464,
		newAddrBits__h35093,
		result_d_addrBits__h35106,
		toBoundsM1__h15314,
		toBoundsM1__h16298,
		toBoundsM1__h18654,
		toBoundsM1__h19704,
		toBoundsM1__h25854,
		toBoundsM1__h33766,
		toBounds__h15313,
		toBounds__h16297,
		toBounds__h18653,
		toBounds__h19703,
		toBounds__h25853,
		toBounds__h33765,
		x1_avValue_addrBits__h25710,
		x1_avValue_snd_fst_capFat_bounds_baseBits__h34454,
		x_addrBits__h16046,
		x_addrBits__h17008,
		x_addrBits__h19380,
		x_addrBits__h20414;
  wire [11 : 0] i__h51872,
		idx__h11619,
		idx__h11642,
		idx__h11665,
		idx__h5853,
		idx__h5876,
		idx__h5899,
		idx__h9758,
		idx__h9781,
		idx__h9804,
		x__h12232,
		x__h12301;
  wire [9 : 0] IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2147;
  wire [6 : 0] IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2655,
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2656,
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2657,
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2659,
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2660;
  wire [5 : 0] IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018,
	       exc_code__h33582,
	       ie_from_x__h36142,
	       ie_to_x__h31324,
	       pie_from_x__h36143,
	       pie_to_x__h31325;
  wire [3 : 0] IF_rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc__ETC___d2135,
	       IF_rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc__ETC___d2144,
	       x1_avValue_perms_soft__h28270;
  wire [2 : 0] repBound__h28108,
	       repBound__h8806,
	       repBound__h9011,
	       repBound__h9330,
	       repBound__h9558;
  wire [1 : 0] IF_csr_mstatus_rg_mstatus_11_BITS_12_TO_11_84__ETC___d786,
	       IF_rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_2_ETC___d336,
	       IF_rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_5_ETC___d267,
	       _0b0_CONCAT_mav_scr_write_cap_BITS_149_TO_100_3_ETC___d1405,
	       _theResult____h52085,
	       _theResult____h52297,
	       _theResult____h52509,
	       _theResult____h52721,
	       _theResult____h52933,
	       _theResult____h53145,
	       _theResult____h53357,
	       _theResult____h53569,
	       _theResult____h53781,
	       _theResult___fst__h31336,
	       a_capFat_reserved__h36928,
	       new_priv__h31189,
	       to_y__h36358,
	       x1_avValue_reserved__h25713,
	       x__h24632,
	       x__h28169,
	       x__h28188;
  wire IF_IF_csr_trap_actions_interrupt_AND_NOT_csr_t_ETC___d2035,
       IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85__ETC___d1302,
       IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85__ETC___d1338,
       IF_csr_trap_actions_interrupt_AND_NOT_csr_trap_ETC___d2043,
       IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d1035,
       IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d863,
       IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d911,
       IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d985,
       NOT_access_permitted_1_csr_addr_ULT_0xC03_154__ETC___d2257,
       NOT_access_permitted_2_csr_addr_ULT_0xC03_287__ETC___d2390,
       NOT_cfg_verbosity_read__181_ULE_1_182___d1183,
       NOT_csr_mip_mv_read__53_BIT_0_588_589_OR_NOT_c_ETC___d2601,
       NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2497,
       NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2542,
       NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2587,
       NOT_csr_mip_mv_read__53_BIT_1_543_544_OR_NOT_c_ETC___d2556,
       NOT_csr_mip_mv_read__53_BIT_3_498_499_OR_NOT_c_ETC___d2511,
       NOT_csr_mip_mv_read__53_BIT_5_558_559_OR_NOT_c_ETC___d2571,
       NOT_csr_mip_mv_read__53_BIT_7_513_514_OR_NOT_c_ETC___d2526,
       NOT_csr_mip_mv_read__53_BIT_8_573_574_OR_NOT_c_ETC___d2586,
       NOT_csr_mip_mv_read__53_BIT_9_528_529_OR_NOT_c_ETC___d2541,
       NOT_csr_trap_actions_nmi_844_AND_csr_trap_acti_ETC___d1959,
       NOT_mav_scr_write_cap_BITS_33_TO_28_254_ULT_50_ETC___d1305,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1376,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1378,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1419,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1421,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1422,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1424,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1425,
       NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1426,
       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1309,
       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1343,
       a_capFat_flags__h36927,
       access_permitted_1_csr_addr_ULE_0xC1F___d2156,
       access_permitted_1_csr_addr_ULT_0xC03_154_OR_N_ETC___d2283,
       access_permitted_1_csr_addr_ULT_0xC03___d2154,
       access_permitted_2_csr_addr_ULE_0xC1F___d2289,
       access_permitted_2_csr_addr_ULT_0xC03_287_OR_N_ETC___d2414,
       access_permitted_2_csr_addr_ULT_0xC03___d2287,
       b__h31423,
       b__h36195,
       csr_counter_read_fault_csr_addr_EQ_0xC00_447_A_ETC___d2471,
       csr_mip_mv_read__53_BIT_0_588_AND_csr_mie_mv_r_ETC___d2620,
       csr_mip_mv_read__53_BIT_1_543_AND_csr_mie_mv_r_ETC___d2635,
       csr_mip_mv_read__53_BIT_3_498_AND_csr_mie_mv_r_ETC___d2650,
       csr_mip_mv_read__53_BIT_4_603_AND_csr_mie_mv_r_ETC___d2615,
       csr_mip_mv_read__53_BIT_5_558_AND_csr_mie_mv_r_ETC___d2630,
       csr_mip_mv_read__53_BIT_7_513_AND_csr_mie_mv_r_ETC___d2645,
       csr_mip_mv_read__53_BIT_8_573_AND_csr_mie_mv_r_ETC___d2625,
       csr_mip_mv_read__53_BIT_9_528_AND_csr_mie_mv_r_ETC___d2640,
       csr_trap_actions_interrupt_AND_NOT_csr_trap_ac_ETC___d1857,
       csr_trap_actions_nmi_OR_NOT_csr_trap_actions_i_ETC___d2010,
       deleg_bit___1__h31345,
       deleg_bit___1__h31360,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2481,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2507,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2522,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2537,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2552,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2567,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2582,
       interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2597,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2479,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2505,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2520,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2535,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2550,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2565,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2580,
       interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2595,
       mav_csr_write_csr_addr_ULE_0x33F___d758,
       mav_csr_write_csr_addr_ULE_0xB1F___d750,
       mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d1179,
       mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d779,
       mav_csr_write_csr_addr_ULT_0x323___d756,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1014,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1018,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1021,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1064,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1067,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1070,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1073,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1076,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1079,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1085,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1088,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1093,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1096,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1252,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d770,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d832,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d838,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d841,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d892,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d895,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d940,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d945,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d948,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d951,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d954,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d964,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d968,
       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d971,
       mav_csr_write_csr_addr_ULT_0xB03___d748,
       mav_scr_write_cap_BITS_13_TO_11_262_ULT_mav_sc_ETC___d1264,
       mav_scr_write_cap_BITS_27_TO_25_386_ULT_mav_sc_ETC___d1387,
       mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266,
       rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_24_B_ETC___d329,
       rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc_24__ETC___d2130,
       rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331,
       rg_mtcc_94_BITS_13_TO_11_97_ULT_rg_mtcc_94_BIT_ETC___d299,
       rg_mtcc_94_BITS_85_TO_83_00_ULT_rg_mtcc_94_BIT_ETC___d301,
       rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_55_B_ETC___d260,
       rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc_55__ETC___d2139,
       rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262,
       rg_stcc_27_BITS_13_TO_11_30_ULT_rg_stcc_27_BIT_ETC___d232,
       rg_stcc_27_BITS_85_TO_83_33_ULT_rg_stcc_27_BIT_ETC___d234,
       sd__h18035,
       sd__h28550,
       sd__h29141,
       sd__h31246,
       sd__h36064,
       x1_avValue_flags__h25712;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = f_reset_rsps$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = f_reset_rsps$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = rg_state && f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     rg_state && f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // value method read_csr
  assign read_csr =
	     { read_csr_csr_addr >= 12'hC03 && read_csr_csr_addr <= 12'hC1F ||
	       read_csr_csr_addr >= 12'hB03 && read_csr_csr_addr <= 12'hB1F ||
	       read_csr_csr_addr >= 12'h323 && read_csr_csr_addr <= 12'h33F ||
	       read_csr_csr_addr == 12'h001 ||
	       read_csr_csr_addr == 12'h002 ||
	       read_csr_csr_addr == 12'h003 ||
	       read_csr_csr_addr == 12'hC00 ||
	       read_csr_csr_addr == 12'hC01 ||
	       read_csr_csr_addr == 12'hC02 ||
	       read_csr_csr_addr == 12'h100 ||
	       read_csr_csr_addr == 12'h102 ||
	       read_csr_csr_addr == 12'h103 ||
	       read_csr_csr_addr == 12'h104 ||
	       read_csr_csr_addr == 12'h105 ||
	       read_csr_csr_addr == 12'h106 ||
	       read_csr_csr_addr == 12'h140 ||
	       read_csr_csr_addr == 12'h141 ||
	       read_csr_csr_addr == 12'h142 ||
	       read_csr_csr_addr == 12'h143 ||
	       read_csr_csr_addr == 12'h144 ||
	       read_csr_csr_addr == 12'h9C0 ||
	       read_csr_csr_addr == 12'h180 ||
	       read_csr_csr_addr == 12'h302 ||
	       read_csr_csr_addr == 12'h303 ||
	       read_csr_csr_addr == 12'hF11 ||
	       read_csr_csr_addr == 12'hF12 ||
	       read_csr_csr_addr == 12'hF13 ||
	       read_csr_csr_addr == 12'hF14 ||
	       read_csr_csr_addr == 12'h300 ||
	       read_csr_csr_addr == 12'h301 ||
	       read_csr_csr_addr == 12'h304 ||
	       read_csr_csr_addr == 12'h305 ||
	       read_csr_csr_addr == 12'h306 ||
	       read_csr_csr_addr == 12'h340 ||
	       read_csr_csr_addr == 12'h341 ||
	       read_csr_csr_addr == 12'h342 ||
	       read_csr_csr_addr == 12'h343 ||
	       read_csr_csr_addr == 12'h344 ||
	       read_csr_csr_addr == 12'hBC0 ||
	       read_csr_csr_addr == 12'hB00 ||
	       read_csr_csr_addr == 12'hB02 ||
	       read_csr_csr_addr == 12'h320 ||
	       read_csr_csr_addr == 12'h7A0 ||
	       read_csr_csr_addr == 12'h7A1 ||
	       read_csr_csr_addr == 12'h7A2 ||
	       read_csr_csr_addr == 12'h7A3,
	       IF_NOT_read_csr_csr_addr_ULT_0xC03_3_4_AND_rea_ETC___d403 } ;

  // value method read_csr_port2
  assign read_csr_port2 =
	     { read_csr_port2_csr_addr >= 12'hC03 &&
	       read_csr_port2_csr_addr <= 12'hC1F ||
	       read_csr_port2_csr_addr >= 12'hB03 &&
	       read_csr_port2_csr_addr <= 12'hB1F ||
	       read_csr_port2_csr_addr >= 12'h323 &&
	       read_csr_port2_csr_addr <= 12'h33F ||
	       read_csr_port2_csr_addr == 12'h001 ||
	       read_csr_port2_csr_addr == 12'h002 ||
	       read_csr_port2_csr_addr == 12'h003 ||
	       read_csr_port2_csr_addr == 12'hC00 ||
	       read_csr_port2_csr_addr == 12'hC01 ||
	       read_csr_port2_csr_addr == 12'hC02 ||
	       read_csr_port2_csr_addr == 12'h100 ||
	       read_csr_port2_csr_addr == 12'h102 ||
	       read_csr_port2_csr_addr == 12'h103 ||
	       read_csr_port2_csr_addr == 12'h104 ||
	       read_csr_port2_csr_addr == 12'h105 ||
	       read_csr_port2_csr_addr == 12'h106 ||
	       read_csr_port2_csr_addr == 12'h140 ||
	       read_csr_port2_csr_addr == 12'h141 ||
	       read_csr_port2_csr_addr == 12'h142 ||
	       read_csr_port2_csr_addr == 12'h143 ||
	       read_csr_port2_csr_addr == 12'h144 ||
	       read_csr_port2_csr_addr == 12'h9C0 ||
	       read_csr_port2_csr_addr == 12'h180 ||
	       read_csr_port2_csr_addr == 12'h302 ||
	       read_csr_port2_csr_addr == 12'h303 ||
	       read_csr_port2_csr_addr == 12'hF11 ||
	       read_csr_port2_csr_addr == 12'hF12 ||
	       read_csr_port2_csr_addr == 12'hF13 ||
	       read_csr_port2_csr_addr == 12'hF14 ||
	       read_csr_port2_csr_addr == 12'h300 ||
	       read_csr_port2_csr_addr == 12'h301 ||
	       read_csr_port2_csr_addr == 12'h304 ||
	       read_csr_port2_csr_addr == 12'h305 ||
	       read_csr_port2_csr_addr == 12'h306 ||
	       read_csr_port2_csr_addr == 12'h340 ||
	       read_csr_port2_csr_addr == 12'h341 ||
	       read_csr_port2_csr_addr == 12'h342 ||
	       read_csr_port2_csr_addr == 12'h343 ||
	       read_csr_port2_csr_addr == 12'h344 ||
	       read_csr_port2_csr_addr == 12'hBC0 ||
	       read_csr_port2_csr_addr == 12'hB00 ||
	       read_csr_port2_csr_addr == 12'hB02 ||
	       read_csr_port2_csr_addr == 12'h320 ||
	       read_csr_port2_csr_addr == 12'h7A0 ||
	       read_csr_port2_csr_addr == 12'h7A1 ||
	       read_csr_port2_csr_addr == 12'h7A2 ||
	       read_csr_port2_csr_addr == 12'h7A3,
	       IF_NOT_read_csr_port2_csr_addr_ULT_0xC03_04_05_ETC___d562 } ;

  // value method read_scr
  assign read_scr =
	     { read_scr_scr_addr == 5'd12 || read_scr_scr_addr == 5'd13 ||
	       read_scr_scr_addr == 5'd14 ||
	       read_scr_scr_addr == 5'd15 ||
	       read_scr_scr_addr == 5'd28 ||
	       read_scr_scr_addr == 5'd29 ||
	       read_scr_scr_addr == 5'd30 ||
	       read_scr_scr_addr == 5'd31,
	       IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 } ;

  // actionvalue method mav_read_csr
  assign mav_read_csr =
	     { mav_read_csr_csr_addr >= 12'hC03 &&
	       mav_read_csr_csr_addr <= 12'hC1F ||
	       mav_read_csr_csr_addr >= 12'hB03 &&
	       mav_read_csr_csr_addr <= 12'hB1F ||
	       mav_read_csr_csr_addr >= 12'h323 &&
	       mav_read_csr_csr_addr <= 12'h33F ||
	       mav_read_csr_csr_addr == 12'h001 ||
	       mav_read_csr_csr_addr == 12'h002 ||
	       mav_read_csr_csr_addr == 12'h003 ||
	       mav_read_csr_csr_addr == 12'hC00 ||
	       mav_read_csr_csr_addr == 12'hC01 ||
	       mav_read_csr_csr_addr == 12'hC02 ||
	       mav_read_csr_csr_addr == 12'h100 ||
	       mav_read_csr_csr_addr == 12'h102 ||
	       mav_read_csr_csr_addr == 12'h103 ||
	       mav_read_csr_csr_addr == 12'h104 ||
	       mav_read_csr_csr_addr == 12'h105 ||
	       mav_read_csr_csr_addr == 12'h106 ||
	       mav_read_csr_csr_addr == 12'h140 ||
	       mav_read_csr_csr_addr == 12'h141 ||
	       mav_read_csr_csr_addr == 12'h142 ||
	       mav_read_csr_csr_addr == 12'h143 ||
	       mav_read_csr_csr_addr == 12'h144 ||
	       mav_read_csr_csr_addr == 12'h9C0 ||
	       mav_read_csr_csr_addr == 12'h180 ||
	       mav_read_csr_csr_addr == 12'h302 ||
	       mav_read_csr_csr_addr == 12'h303 ||
	       mav_read_csr_csr_addr == 12'hF11 ||
	       mav_read_csr_csr_addr == 12'hF12 ||
	       mav_read_csr_csr_addr == 12'hF13 ||
	       mav_read_csr_csr_addr == 12'hF14 ||
	       mav_read_csr_csr_addr == 12'h300 ||
	       mav_read_csr_csr_addr == 12'h301 ||
	       mav_read_csr_csr_addr == 12'h304 ||
	       mav_read_csr_csr_addr == 12'h305 ||
	       mav_read_csr_csr_addr == 12'h306 ||
	       mav_read_csr_csr_addr == 12'h340 ||
	       mav_read_csr_csr_addr == 12'h341 ||
	       mav_read_csr_csr_addr == 12'h342 ||
	       mav_read_csr_csr_addr == 12'h343 ||
	       mav_read_csr_csr_addr == 12'h344 ||
	       mav_read_csr_csr_addr == 12'hBC0 ||
	       mav_read_csr_csr_addr == 12'hB00 ||
	       mav_read_csr_csr_addr == 12'hB02 ||
	       mav_read_csr_csr_addr == 12'h320 ||
	       mav_read_csr_csr_addr == 12'h7A0 ||
	       mav_read_csr_csr_addr == 12'h7A1 ||
	       mav_read_csr_csr_addr == 12'h7A2 ||
	       mav_read_csr_csr_addr == 12'h7A3,
	       IF_NOT_mav_read_csr_csr_addr_ULT_0xC03_89_90_A_ETC___d747 } ;
  assign CAN_FIRE_mav_read_csr = 1'd1 ;
  assign WILL_FIRE_mav_read_csr = EN_mav_read_csr ;

  // actionvalue method mav_csr_write
  assign mav_csr_write =
	     { y_avValue_new_csr_value__h21940,
	       mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1252,
	       wordxl1__h13991 } ;
  assign CAN_FIRE_mav_csr_write = 1'd1 ;
  assign WILL_FIRE_mav_csr_write = EN_mav_csr_write ;

  // actionvalue method mav_scr_write
  assign mav_scr_write =
	     (mav_scr_write_scr_addr == 5'd12) ?
	       { x__h24632 == 2'd0 &&
		 SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1309 &&
		 mav_scr_write_cap[150],
		 x1_avValue_address__h25709,
		 x1_avValue_addrBits__h25710,
		 x1_avValue_perms_soft__h28270,
		 x__h24632 == 2'd0 && mav_scr_write_cap[67],
		 x__h24632 == 2'd0 && mav_scr_write_cap[66],
		 x__h24632 == 2'd0 && mav_scr_write_cap[65],
		 x__h24632 == 2'd0 && mav_scr_write_cap[64],
		 x__h24632 == 2'd0 && mav_scr_write_cap[63],
		 x__h24632 == 2'd0 && mav_scr_write_cap[62],
		 x__h24632 == 2'd0 && mav_scr_write_cap[61],
		 x__h24632 == 2'd0 && mav_scr_write_cap[60],
		 x__h24632 == 2'd0 && mav_scr_write_cap[59],
		 x__h24632 == 2'd0 && mav_scr_write_cap[58],
		 x__h24632 == 2'd0 && mav_scr_write_cap[57],
		 x__h24632 == 2'd0 && mav_scr_write_cap[56],
		 x1_avValue_flags__h25712,
		 IF_IF_mav_scr_write_cap_BITS_33_TO_28_254_EQ_0_ETC___d1473 } :
	       { IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1483,
		 IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1490,
		 IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1497,
		 IF_mav_scr_write_scr_addr_EQ_13_329_OR_mav_scr_ETC___d1533 } ;
  assign CAN_FIRE_mav_scr_write = 1'd1 ;
  assign WILL_FIRE_mav_scr_write = EN_mav_scr_write ;

  // value method read_frm
  assign read_frm = rg_frm ;

  // value method read_fflags
  assign read_fflags = rg_fflags ;

  // value method mv_update_fcsr_fflags
  assign mv_update_fcsr_fflags = rg_fflags | mv_update_fcsr_fflags_flags ;

  // action method ma_update_fcsr_fflags
  assign CAN_FIRE_ma_update_fcsr_fflags = 1'd1 ;
  assign WILL_FIRE_ma_update_fcsr_fflags = EN_ma_update_fcsr_fflags ;

  // value method mv_update_mstatus_fs
  assign mv_update_mstatus_fs =
	     { sd__h28550, 40'd5120, fixed_up_val_23__h28551 } ;

  // action method ma_update_mstatus_fs
  assign CAN_FIRE_ma_update_mstatus_fs = 1'd1 ;
  assign WILL_FIRE_ma_update_mstatus_fs = EN_ma_update_mstatus_fs ;

  // value method read_misa
  assign read_misa = 28'd143921453 ;

  // value method read_mstatus
  assign read_mstatus = csr_mstatus_rg_mstatus ;

  // value method read_sstatus
  assign read_sstatus =
	     { csr_mstatus_rg_mstatus[63],
	       29'd0,
	       csr_mstatus_rg_mstatus[33:32],
	       12'd0,
	       csr_mstatus_rg_mstatus[19:18],
	       1'd0,
	       csr_mstatus_rg_mstatus[16:13],
	       4'd0,
	       csr_mstatus_rg_mstatus[8],
	       2'd0,
	       csr_mstatus_rg_mstatus[5:4],
	       2'd0,
	       csr_mstatus_rg_mstatus[1:0] } ;

  // value method read_ustatus
  assign read_ustatus =
	     { 59'd0,
	       csr_mstatus_rg_mstatus[4],
	       3'd0,
	       csr_mstatus_rg_mstatus[0] } ;

  // value method read_satp
  assign read_satp = rg_satp ;

  // actionvalue method csr_trap_actions
  assign csr_trap_actions =
	     { IF_csr_trap_actions_interrupt_AND_NOT_csr_trap_ETC___d2043,
	       IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2066,
	       x__h35993,
	       x__h35994,
	       new_priv__h31189 } ;
  assign RDY_csr_trap_actions = 1'd1 ;
  assign CAN_FIRE_csr_trap_actions = 1'd1 ;
  assign WILL_FIRE_csr_trap_actions = EN_csr_trap_actions ;

  // actionvalue method csr_ret_actions
  assign csr_ret_actions =
	     { IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2128,
	       IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2147,
	       IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2153 } ;
  assign RDY_csr_ret_actions = 1'd1 ;
  assign CAN_FIRE_csr_ret_actions = 1'd1 ;
  assign WILL_FIRE_csr_ret_actions = EN_csr_ret_actions ;

  // value method read_csr_minstret
  assign read_csr_minstret = rg_minstret ;

  // action method csr_minstret_incr
  assign CAN_FIRE_csr_minstret_incr = 1'd1 ;
  assign WILL_FIRE_csr_minstret_incr = EN_csr_minstret_incr ;

  // value method read_csr_mcycle
  assign read_csr_mcycle = rg_mcycle ;

  // value method read_csr_mtime
  assign read_csr_mtime = rg_mtime ;

  // action method send_performance_events
  assign CAN_FIRE_send_performance_events = 1'd1 ;
  assign WILL_FIRE_send_performance_events = 1'd1 ;

  // value method access_permitted_1
  assign access_permitted_1 =
	     { NOT_access_permitted_1_csr_addr_ULT_0xC03_154__ETC___d2257 &&
	       (access_permitted_1_csr_addr != 12'h180 ||
		!csr_mstatus_rg_mstatus[20]) &&
	       (access_permitted_1_read_not_write ||
		access_permitted_1_csr_addr[11:10] != 2'b11),
	       access_permitted_1_csr_addr_ULT_0xC03_154_OR_N_ETC___d2283 &&
	       (access_permitted_1_csr_addr != 12'hC02 ||
		!access_permitted_1_read_not_write) } ;

  // value method access_permitted_2
  assign access_permitted_2 =
	     { NOT_access_permitted_2_csr_addr_ULT_0xC03_287__ETC___d2390 &&
	       (access_permitted_2_csr_addr != 12'h180 ||
		!csr_mstatus_rg_mstatus[20]) &&
	       (access_permitted_2_read_not_write ||
		access_permitted_2_csr_addr[11:10] != 2'b11),
	       access_permitted_2_csr_addr_ULT_0xC03_287_OR_N_ETC___d2414 &&
	       (access_permitted_2_csr_addr != 12'hC02 ||
		!access_permitted_2_read_not_write) } ;

  // value method access_permitted_scr
  assign access_permitted_scr =
	     { (access_permitted_scr_scr_addr == 5'd1 ||
		access_permitted_scr_scr_addr == 5'd12 ||
		access_permitted_scr_scr_addr == 5'd13 ||
		access_permitted_scr_scr_addr == 5'd15 ||
		access_permitted_scr_scr_addr == 5'd14 ||
		access_permitted_scr_scr_addr == 5'd28 ||
		access_permitted_scr_scr_addr == 5'd29 ||
		access_permitted_scr_scr_addr == 5'd31 ||
		access_permitted_scr_scr_addr == 5'd30) &&
	       access_permitted_scr_priv >=
	       access_permitted_scr_scr_addr[4:3] &&
	       access_permitted_scr_scr_addr != 5'd0,
	       access_permitted_scr_scr_addr != 5'd1 } ;

  // value method csr_counter_read_fault
  assign csr_counter_read_fault =
	     (csr_counter_read_fault_priv == 2'b01 ||
	      csr_counter_read_fault_priv == 2'b0) &&
	     csr_counter_read_fault_csr_addr_EQ_0xC00_447_A_ETC___d2471 ;

  // value method csr_mip_read
  assign csr_mip_read = csr_mip$mv_read ;

  // action method m_external_interrupt_req
  assign CAN_FIRE_m_external_interrupt_req = 1'd1 ;
  assign WILL_FIRE_m_external_interrupt_req = EN_m_external_interrupt_req ;

  // action method s_external_interrupt_req
  assign CAN_FIRE_s_external_interrupt_req = 1'd1 ;
  assign WILL_FIRE_s_external_interrupt_req = EN_s_external_interrupt_req ;

  // action method timer_interrupt_req
  assign CAN_FIRE_timer_interrupt_req = 1'd1 ;
  assign WILL_FIRE_timer_interrupt_req = EN_timer_interrupt_req ;

  // action method software_interrupt_req
  assign CAN_FIRE_software_interrupt_req = 1'd1 ;
  assign WILL_FIRE_software_interrupt_req = EN_software_interrupt_req ;

  // value method interrupt_pending
  assign interrupt_pending =
	     (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2587 &&
	      NOT_csr_mip_mv_read__53_BIT_0_588_589_OR_NOT_c_ETC___d2601) ?
	       { csr_mip_mv_read__53_BIT_4_603_AND_csr_mie_mv_r_ETC___d2615,
		 6'd4 } :
	       (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2587 ?
		  { csr_mip_mv_read__53_BIT_0_588_AND_csr_mie_mv_r_ETC___d2620,
		    6'd0 } :
		  IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2660) ;

  // value method wfi_resume
  assign wfi_resume = (csr_mip$mv_read & csr_mie$mv_read) != 64'd0 ;

  // action method nmi_req
  assign CAN_FIRE_nmi_req = 1'd1 ;
  assign WILL_FIRE_nmi_req = EN_nmi_req ;

  // value method nmi_pending
  assign nmi_pending = rg_nmi ;

  // action method debug
  assign RDY_debug = 1'd1 ;
  assign CAN_FIRE_debug = 1'd1 ;
  assign WILL_FIRE_debug = EN_debug ;

  // submodule csr_mie
  mkCSR_MIE csr_mie(.CLK(CLK),
		    .RST_N(RST_N),
		    .mav_sie_write_misa(csr_mie$mav_sie_write_misa),
		    .mav_sie_write_wordxl(csr_mie$mav_sie_write_wordxl),
		    .mav_write_misa(csr_mie$mav_write_misa),
		    .mav_write_wordxl(csr_mie$mav_write_wordxl),
		    .EN_reset(csr_mie$EN_reset),
		    .EN_mav_write(csr_mie$EN_mav_write),
		    .EN_mav_sie_write(csr_mie$EN_mav_sie_write),
		    .mv_read(csr_mie$mv_read),
		    .mav_write(csr_mie$mav_write),
		    .mv_sie_read(csr_mie$mv_sie_read),
		    .mav_sie_write(csr_mie$mav_sie_write));

  // submodule csr_mip
  mkCSR_MIP csr_mip(.CLK(CLK),
		    .RST_N(RST_N),
		    .m_external_interrupt_req_req(csr_mip$m_external_interrupt_req_req),
		    .mav_sip_write_misa(csr_mip$mav_sip_write_misa),
		    .mav_sip_write_wordxl(csr_mip$mav_sip_write_wordxl),
		    .mav_write_misa(csr_mip$mav_write_misa),
		    .mav_write_wordxl(csr_mip$mav_write_wordxl),
		    .s_external_interrupt_req_req(csr_mip$s_external_interrupt_req_req),
		    .software_interrupt_req_req(csr_mip$software_interrupt_req_req),
		    .timer_interrupt_req_req(csr_mip$timer_interrupt_req_req),
		    .EN_reset(csr_mip$EN_reset),
		    .EN_mav_write(csr_mip$EN_mav_write),
		    .EN_mav_sip_write(csr_mip$EN_mav_sip_write),
		    .EN_m_external_interrupt_req(csr_mip$EN_m_external_interrupt_req),
		    .EN_s_external_interrupt_req(csr_mip$EN_s_external_interrupt_req),
		    .EN_software_interrupt_req(csr_mip$EN_software_interrupt_req),
		    .EN_timer_interrupt_req(csr_mip$EN_timer_interrupt_req),
		    .mv_read(csr_mip$mv_read),
		    .mav_write(csr_mip$mav_write),
		    .mv_sip_read(csr_mip$mv_sip_read),
		    .mav_sip_write(csr_mip$mav_sip_write));

  // submodule f_reset_rsps
  FIFO20 #(.guarded(1'd1)) f_reset_rsps(.RST(RST_N),
					.CLK(CLK),
					.ENQ(f_reset_rsps$ENQ),
					.DEQ(f_reset_rsps$DEQ),
					.CLR(f_reset_rsps$CLR),
					.FULL_N(f_reset_rsps$FULL_N),
					.EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule perf_counters
  mkPerfCountersFlute perf_counters(.CLK(CLK),
				    .RST_N(RST_N),
				    .send_performance_events_evts(perf_counters$send_performance_events_evts),
				    .write_counter_idx(perf_counters$write_counter_idx),
				    .write_counter_val(perf_counters$write_counter_val),
				    .write_ctr_inhibit_val(perf_counters$write_ctr_inhibit_val),
				    .write_ctr_sel_idx(perf_counters$write_ctr_sel_idx),
				    .write_ctr_sel_val(perf_counters$write_ctr_sel_val),
				    .EN_write_counter(perf_counters$EN_write_counter),
				    .EN_write_ctr_sel(perf_counters$EN_write_ctr_sel),
				    .EN_write_ctr_inhibit(perf_counters$EN_write_ctr_inhibit),
				    .read_counters_0__read(perf_counters$read_counters_0__read),
				    .read_counters_1__read(perf_counters$read_counters_1__read),
				    .read_counters_2__read(perf_counters$read_counters_2__read),
				    .read_counters_3__read(perf_counters$read_counters_3__read),
				    .read_counters_4__read(perf_counters$read_counters_4__read),
				    .read_counters_5__read(perf_counters$read_counters_5__read),
				    .read_counters_6__read(perf_counters$read_counters_6__read),
				    .read_counters_7__read(perf_counters$read_counters_7__read),
				    .read_counters_8__read(perf_counters$read_counters_8__read),
				    .read_counters_9__read(perf_counters$read_counters_9__read),
				    .read_counters_10__read(perf_counters$read_counters_10__read),
				    .read_counters_11__read(perf_counters$read_counters_11__read),
				    .read_counters_12__read(perf_counters$read_counters_12__read),
				    .read_counters_13__read(perf_counters$read_counters_13__read),
				    .read_counters_14__read(perf_counters$read_counters_14__read),
				    .read_counters_15__read(perf_counters$read_counters_15__read),
				    .read_counters_16__read(perf_counters$read_counters_16__read),
				    .read_counters_17__read(perf_counters$read_counters_17__read),
				    .read_counters_18__read(perf_counters$read_counters_18__read),
				    .read_counters_19__read(perf_counters$read_counters_19__read),
				    .read_counters_20__read(perf_counters$read_counters_20__read),
				    .read_counters_21__read(perf_counters$read_counters_21__read),
				    .read_counters_22__read(perf_counters$read_counters_22__read),
				    .read_counters_23__read(perf_counters$read_counters_23__read),
				    .read_counters_24__read(perf_counters$read_counters_24__read),
				    .read_counters_25__read(perf_counters$read_counters_25__read),
				    .read_counters_26__read(perf_counters$read_counters_26__read),
				    .read_counters_27__read(perf_counters$read_counters_27__read),
				    .read_counters_28__read(perf_counters$read_counters_28__read),
				    .read_ctr_sels_0__read(perf_counters$read_ctr_sels_0__read),
				    .read_ctr_sels_1__read(perf_counters$read_ctr_sels_1__read),
				    .read_ctr_sels_2__read(perf_counters$read_ctr_sels_2__read),
				    .read_ctr_sels_3__read(perf_counters$read_ctr_sels_3__read),
				    .read_ctr_sels_4__read(perf_counters$read_ctr_sels_4__read),
				    .read_ctr_sels_5__read(perf_counters$read_ctr_sels_5__read),
				    .read_ctr_sels_6__read(perf_counters$read_ctr_sels_6__read),
				    .read_ctr_sels_7__read(perf_counters$read_ctr_sels_7__read),
				    .read_ctr_sels_8__read(perf_counters$read_ctr_sels_8__read),
				    .read_ctr_sels_9__read(perf_counters$read_ctr_sels_9__read),
				    .read_ctr_sels_10__read(perf_counters$read_ctr_sels_10__read),
				    .read_ctr_sels_11__read(perf_counters$read_ctr_sels_11__read),
				    .read_ctr_sels_12__read(perf_counters$read_ctr_sels_12__read),
				    .read_ctr_sels_13__read(perf_counters$read_ctr_sels_13__read),
				    .read_ctr_sels_14__read(perf_counters$read_ctr_sels_14__read),
				    .read_ctr_sels_15__read(perf_counters$read_ctr_sels_15__read),
				    .read_ctr_sels_16__read(perf_counters$read_ctr_sels_16__read),
				    .read_ctr_sels_17__read(perf_counters$read_ctr_sels_17__read),
				    .read_ctr_sels_18__read(perf_counters$read_ctr_sels_18__read),
				    .read_ctr_sels_19__read(perf_counters$read_ctr_sels_19__read),
				    .read_ctr_sels_20__read(perf_counters$read_ctr_sels_20__read),
				    .read_ctr_sels_21__read(perf_counters$read_ctr_sels_21__read),
				    .read_ctr_sels_22__read(perf_counters$read_ctr_sels_22__read),
				    .read_ctr_sels_23__read(perf_counters$read_ctr_sels_23__read),
				    .read_ctr_sels_24__read(perf_counters$read_ctr_sels_24__read),
				    .read_ctr_sels_25__read(perf_counters$read_ctr_sels_25__read),
				    .read_ctr_sels_26__read(perf_counters$read_ctr_sels_26__read),
				    .read_ctr_sels_27__read(perf_counters$read_ctr_sels_27__read),
				    .read_ctr_sels_28__read(perf_counters$read_ctr_sels_28__read),
				    .read_ctr_inhibit__read(perf_counters$read_ctr_inhibit__read),
				    .read_ctr_overflow__read());

  // submodule soc_map
  mkSoC_Map soc_map(.CLK(CLK),
		    .RST_N(RST_N),
		    .m_is_IO_addr_addr(soc_map$m_is_IO_addr_addr),
		    .m_is_mem_addr_addr(soc_map$m_is_mem_addr_addr),
		    .m_is_near_mem_IO_addr_addr(soc_map$m_is_near_mem_IO_addr_addr),
		    .m_near_mem_io_addr_range(),
		    .m_plic_addr_range(),
		    .m_uart0_addr_range(),
		    .m_other_peripherals_addr_range(),
		    .m_boot_rom_addr_range(),
		    .m_mem0_controller_addr_range(),
		    .m_tcm_addr_range(),
		    .m_is_mem_addr(),
		    .m_is_IO_addr(),
		    .m_is_near_mem_IO_addr(),
		    .m_pc_reset_value(),
		    .m_mtvec_reset_value(),
		    .m_nmivec_reset_value(soc_map$m_nmivec_reset_value),
		    .m_pcc_reset_value(),
		    .m_ddc_reset_value(),
		    .m_mtcc_reset_value(soc_map$m_mtcc_reset_value),
		    .m_mepcc_reset_value(soc_map$m_mepcc_reset_value));

  // rule RL_rl_reset_start
  assign CAN_FIRE_RL_rl_reset_start = !rg_state ;
  assign WILL_FIRE_RL_rl_reset_start =
	     CAN_FIRE_RL_rl_reset_start && !EN_mav_csr_write ;

  // rule RL_rl_mcycle_incr
  assign CAN_FIRE_RL_rl_mcycle_incr = 1'd1 ;
  assign WILL_FIRE_RL_rl_mcycle_incr = 1'd1 ;

  // rule RL_rl_mtime_incr
  assign CAN_FIRE_RL_rl_mtime_incr = 1'd1 ;
  assign WILL_FIRE_RL_rl_mtime_incr = 1'd1 ;

  // rule RL_rl_upd_minstret_csrrx
  assign CAN_FIRE_RL_rl_upd_minstret_csrrx =
	     MUX_rw_minstret$wset_1__SEL_1 || WILL_FIRE_RL_rl_reset_start ;
  assign WILL_FIRE_RL_rl_upd_minstret_csrrx =
	     CAN_FIRE_RL_rl_upd_minstret_csrrx ;

  // rule RL_rl_upd_minstret_incr
  assign CAN_FIRE_RL_rl_upd_minstret_incr =
	     !CAN_FIRE_RL_rl_upd_minstret_csrrx && EN_csr_minstret_incr &&
	     !rg_ctr_inhib_ir_cy[1] ;
  assign WILL_FIRE_RL_rl_upd_minstret_incr =
	     CAN_FIRE_RL_rl_upd_minstret_incr ;

  // rule RL_rl_upd_ctr_inhib_csrrx
  assign CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1079 ;
  assign WILL_FIRE_RL_rl_upd_ctr_inhib_csrrx =
	     CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx ;

  // inputs to muxes for submodule ports
  assign MUX_csr_mstatus_rg_mstatus$write_1__SEL_5 =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d779 ;
  assign MUX_rg_fflags$write_1__SEL_2 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d770 ;
  assign MUX_rg_frm$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d832 ;
  assign MUX_rg_mcause$write_1__SEL_2 =
	     EN_csr_trap_actions &&
	     (csr_trap_actions_nmi || new_priv__h31189 == 2'b11) ;
  assign MUX_rg_mcause$write_1__SEL_3 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1064 ;
  assign MUX_rg_mcounteren$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1014 ;
  assign MUX_rg_medeleg$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d954 ;
  assign MUX_rg_mepcc$write_1__SEL_2 =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd31 ;
  assign MUX_rg_mepcc$write_1__SEL_4 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1021 ;
  assign MUX_rg_mideleg$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d964 ;
  assign MUX_rg_mtcc$write_1__SEL_2 =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd28 &&
	     x__h24632 == 2'd0 ;
  assign MUX_rg_mtcc$write_1__SEL_3 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d971 ;
  assign MUX_rg_satp$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d951 ;
  assign MUX_rg_scause$write_1__SEL_2 =
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     new_priv__h31189 == 2'b01 ;
  assign MUX_rg_scause$write_1__SEL_3 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d940 ;
  assign MUX_rg_sepcc$write_1__SEL_2 =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd15 ;
  assign MUX_rg_sepcc$write_1__SEL_4 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d895 ;
  assign MUX_rg_stcc$write_1__SEL_2 =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd12 &&
	     x__h24632 == 2'd0 ;
  assign MUX_rg_stcc$write_1__SEL_3 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d841 ;
  assign MUX_rg_stval$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d945 ;
  assign MUX_rg_tdata1$write_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1088 ;
  assign MUX_rw_minstret$wset_1__SEL_1 =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1076 ;
  assign MUX_csr_mstatus_rg_mstatus$write_1__VAL_2 =
	     { sd__h36064, 40'd5120, fixed_up_val_23__h36065 } ;
  assign MUX_csr_mstatus_rg_mstatus$write_1__VAL_4 =
	     { sd__h29141, 40'd5120, fixed_up_val_23__h29142 } ;
  always@(mav_csr_write_csr_addr or
	  mav_csr_write_word_BITS_14_TO_13_93_EQ_0x3_94__ETC___d827 or
	  wordxl1__h13991)
  begin
    case (mav_csr_write_csr_addr)
      12'h001, 12'h002, 12'h003:
	  MUX_csr_mstatus_rg_mstatus$write_1__VAL_5 = wordxl1__h13991;
      default: MUX_csr_mstatus_rg_mstatus$write_1__VAL_5 =
		   mav_csr_write_word_BITS_14_TO_13_93_EQ_0x3_94__ETC___d827;
    endcase
  end
  assign MUX_rg_fflags$write_1__VAL_3 =
	     rg_fflags | ma_update_fcsr_fflags_flags ;
  assign MUX_rg_frm$write_1__VAL_1 =
	     (mav_csr_write_csr_addr == 12'h002) ?
	       mav_csr_write_word[2:0] :
	       mav_csr_write_word[7:5] ;
  assign MUX_rg_mcause$write_1__VAL_2 =
	     { !csr_trap_actions_nmi && csr_trap_actions_interrupt,
	       exc_code__h33582 } ;
  assign MUX_rg_mcause$write_1__VAL_3 =
	     { mav_csr_write_word[63], mav_csr_write_word[5:0] } ;
  assign MUX_rg_medeleg$write_1__VAL_1 =
	     { mav_csr_write_word[28:26],
	       10'd0,
	       mav_csr_write_word[15],
	       1'd0,
	       mav_csr_write_word[13:12],
	       2'd0,
	       mav_csr_write_word[9:0] } ;
  assign MUX_rg_mepcc$write_1__VAL_2 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1343 &&
	       mav_scr_write_cap[150],
	       cap_unpacked_capFat_address__h24396,
	       cap_unpacked_capFat_addrBits__h24397,
	       mav_scr_write_cap[71:0] } ;
  assign MUX_rg_mepcc$write_1__VAL_4 =
	     { (highOffsetBits__h19694 == 50'd0 &&
		IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d1035 ||
		rg_mepcc[33:28] >= 6'd50) &&
	       rg_mepcc[52:35] == 18'd262143 &&
	       rg_mepcc[150],
	       x_address__h20413,
	       x_addrBits__h20414,
	       rg_mepcc[71:0] } ;
  assign MUX_rg_minstret$write_1__VAL_1 =
	     MUX_rw_minstret$wset_1__SEL_1 ? mav_csr_write_word : 64'd0 ;
  assign MUX_rg_minstret$write_1__VAL_2 = rg_minstret + 64'd1 ;
  assign MUX_rg_mtcc$write_1__VAL_2 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1309 &&
	       mav_scr_write_cap[150],
	       cap_unpacked_capFat_address__h25485,
	       cap_unpacked_capFat_addrBits__h25486,
	       mav_scr_write_cap[71:0] } ;
  assign MUX_rg_mtcc$write_1__VAL_3 =
	     { (highOffsetBits__h18644 == 50'd0 &&
		IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d985 ||
		rg_mtcc[33:28] >= 6'd50) &&
	       rg_mtcc[52:35] == 18'd262143 &&
	       rg_mtcc[150],
	       x_address__h19379,
	       x_addrBits__h19380,
	       rg_mtcc[71:0] } ;
  assign MUX_rg_mtval$write_1__VAL_1 =
	     (csr_trap_actions_exc_code == 6'd28) ?
	       { 53'd0,
		 csr_trap_actions_cheri_exc_reg,
		 csr_trap_actions_cheri_exc_code } :
	       csr_trap_actions_xtval ;
  assign MUX_rg_sepcc$write_1__VAL_4 =
	     { (highOffsetBits__h16288 == 50'd0 &&
		IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d911 ||
		rg_sepcc[33:28] >= 6'd50) &&
	       rg_sepcc[52:35] == 18'd262143 &&
	       rg_sepcc[150],
	       x_address__h17007,
	       x_addrBits__h17008,
	       rg_sepcc[71:0] } ;
  assign MUX_rg_stcc$write_1__VAL_3 =
	     { (highOffsetBits__h15304 == 50'd0 &&
		IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d863 ||
		rg_stcc[33:28] >= 6'd50) &&
	       rg_stcc[52:35] == 18'd262143 &&
	       rg_stcc[150],
	       x_address__h16045,
	       x_addrBits__h16046,
	       rg_stcc[71:0] } ;

  // inlined wires
  assign rw_mcycle$whas =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1073 ;
  assign w_ctr_inhib_ir_cy$wget =
	     { mav_csr_write_word[2], mav_csr_write_word[0] } ;

  // register cfg_verbosity
  assign cfg_verbosity$D_IN = 4'h0 ;
  assign cfg_verbosity$EN = 1'b0 ;

  // register csr_mstatus_rg_mstatus
  always@(WILL_FIRE_RL_rl_reset_start or
	  EN_csr_ret_actions or
	  MUX_csr_mstatus_rg_mstatus$write_1__VAL_2 or
	  EN_csr_trap_actions or
	  v__h31194 or
	  EN_ma_update_mstatus_fs or
	  MUX_csr_mstatus_rg_mstatus$write_1__VAL_4 or
	  MUX_csr_mstatus_rg_mstatus$write_1__SEL_5 or
	  MUX_csr_mstatus_rg_mstatus$write_1__VAL_5)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start:
	csr_mstatus_rg_mstatus$D_IN = 64'h0000000A00002000;
    EN_csr_ret_actions:
	csr_mstatus_rg_mstatus$D_IN =
	    MUX_csr_mstatus_rg_mstatus$write_1__VAL_2;
    EN_csr_trap_actions: csr_mstatus_rg_mstatus$D_IN = v__h31194;
    EN_ma_update_mstatus_fs:
	csr_mstatus_rg_mstatus$D_IN =
	    MUX_csr_mstatus_rg_mstatus$write_1__VAL_4;
    MUX_csr_mstatus_rg_mstatus$write_1__SEL_5:
	csr_mstatus_rg_mstatus$D_IN =
	    MUX_csr_mstatus_rg_mstatus$write_1__VAL_5;
    default: csr_mstatus_rg_mstatus$D_IN =
		 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign csr_mstatus_rg_mstatus$EN =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d779 ||
	     EN_csr_trap_actions ||
	     EN_ma_update_mstatus_fs ||
	     EN_csr_ret_actions ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_ctr_inhib_ir_cy
  assign rg_ctr_inhib_ir_cy$D_IN = w_ctr_inhib_ir_cy$wget ;
  assign rg_ctr_inhib_ir_cy$EN = CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx ;

  // register rg_dcsr
  assign rg_dcsr$D_IN = 32'h0 ;
  assign rg_dcsr$EN = 1'b0 ;

  // register rg_dpcc
  assign rg_dpcc$D_IN = 161'h0 ;
  assign rg_dpcc$EN = 1'b0 ;

  // register rg_dscratch0
  assign rg_dscratch0$D_IN = 64'h0 ;
  assign rg_dscratch0$EN = 1'b0 ;

  // register rg_dscratch1
  assign rg_dscratch1$D_IN = 64'h0 ;
  assign rg_dscratch1$EN = 1'b0 ;

  // register rg_fflags
  always@(WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_fflags$write_1__SEL_2 or
	  mav_csr_write_word or
	  EN_ma_update_fcsr_fflags or MUX_rg_fflags$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_fflags$D_IN = 5'd0;
    MUX_rg_fflags$write_1__SEL_2: rg_fflags$D_IN = mav_csr_write_word[4:0];
    EN_ma_update_fcsr_fflags: rg_fflags$D_IN = MUX_rg_fflags$write_1__VAL_3;
    default: rg_fflags$D_IN = 5'b01010 /* unspecified value */ ;
  endcase
  assign rg_fflags$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d770 ||
	     EN_ma_update_fcsr_fflags ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_frm
  assign rg_frm$D_IN =
	     MUX_rg_frm$write_1__SEL_1 ? MUX_rg_frm$write_1__VAL_1 : 3'd0 ;
  assign rg_frm$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d832 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mcause
  always@(WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_mcause$write_1__SEL_2 or
	  MUX_rg_mcause$write_1__VAL_2 or
	  MUX_rg_mcause$write_1__SEL_3 or MUX_rg_mcause$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_mcause$D_IN = 7'd0;
    MUX_rg_mcause$write_1__SEL_2:
	rg_mcause$D_IN = MUX_rg_mcause$write_1__VAL_2;
    MUX_rg_mcause$write_1__SEL_3:
	rg_mcause$D_IN = MUX_rg_mcause$write_1__VAL_3;
    default: rg_mcause$D_IN = 7'b0101010 /* unspecified value */ ;
  endcase
  assign rg_mcause$EN =
	     EN_csr_trap_actions &&
	     (csr_trap_actions_nmi || new_priv__h31189 == 2'b11) ||
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1064 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mccsr
  assign rg_mccsr$D_IN =
	     { csr_trap_actions_cheri_exc_reg,
	       csr_trap_actions_cheri_exc_code } ;
  assign rg_mccsr$EN =
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     new_priv__h31189 == 2'b11 &&
	     csr_trap_actions_exc_code == 6'd28 ;

  // register rg_mcounteren
  assign rg_mcounteren$D_IN =
	     MUX_rg_mcounteren$write_1__SEL_1 ?
	       mav_csr_write_word[31:0] :
	       32'd0 ;
  assign rg_mcounteren$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1014 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mcycle
  assign rg_mcycle$D_IN = rw_mcycle$whas ? mav_csr_write_word : x__h5495 ;
  assign rg_mcycle$EN = rw_mcycle$whas || !rg_ctr_inhib_ir_cy[0] ;

  // register rg_medeleg
  assign rg_medeleg$D_IN =
	     MUX_rg_medeleg$write_1__SEL_1 ?
	       MUX_rg_medeleg$write_1__VAL_1 :
	       29'd0 ;
  assign rg_medeleg$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d954 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mepcc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_mepcc_reset_value or
	  MUX_rg_mepcc$write_1__SEL_2 or
	  MUX_rg_mepcc$write_1__VAL_2 or
	  MUX_rg_mcause$write_1__SEL_2 or
	  csr_trap_actions_pcc or
	  MUX_rg_mepcc$write_1__SEL_4 or MUX_rg_mepcc$write_1__VAL_4)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_mepcc$D_IN = soc_map$m_mepcc_reset_value;
    MUX_rg_mepcc$write_1__SEL_2: rg_mepcc$D_IN = MUX_rg_mepcc$write_1__VAL_2;
    MUX_rg_mcause$write_1__SEL_2:
	rg_mepcc$D_IN = csr_trap_actions_pcc[160:10];
    MUX_rg_mepcc$write_1__SEL_4: rg_mepcc$D_IN = MUX_rg_mepcc$write_1__VAL_4;
    default: rg_mepcc$D_IN =
		 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign rg_mepcc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd31 ||
	     EN_csr_trap_actions &&
	     (csr_trap_actions_nmi || new_priv__h31189 == 2'b11) ||
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1021 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mideleg
  assign rg_mideleg$D_IN =
	     MUX_rg_mideleg$write_1__SEL_1 ?
	       mav_csr_write_word[11:0] :
	       12'd0 ;
  assign rg_mideleg$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d964 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_minstret
  assign rg_minstret$D_IN =
	     WILL_FIRE_RL_rl_upd_minstret_csrrx ?
	       MUX_rg_minstret$write_1__VAL_1 :
	       MUX_rg_minstret$write_1__VAL_2 ;
  assign rg_minstret$EN =
	     WILL_FIRE_RL_rl_upd_minstret_csrrx ||
	     WILL_FIRE_RL_rl_upd_minstret_incr ;

  // register rg_mscratch
  assign rg_mscratch$D_IN = mav_csr_write_word ;
  assign rg_mscratch$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1018 ;

  // register rg_mscratchc
  assign rg_mscratchc$D_IN =
	     WILL_FIRE_RL_rl_reset_start ?
	       151'h0000000000000000000000001FFFFF44000000 :
	       mav_scr_write_cap ;
  assign rg_mscratchc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd30 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mtcc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_mtcc_reset_value or
	  MUX_rg_mtcc$write_1__SEL_2 or
	  MUX_rg_mtcc$write_1__VAL_2 or
	  MUX_rg_mtcc$write_1__SEL_3 or MUX_rg_mtcc$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_mtcc$D_IN = soc_map$m_mtcc_reset_value;
    MUX_rg_mtcc$write_1__SEL_2: rg_mtcc$D_IN = MUX_rg_mtcc$write_1__VAL_2;
    MUX_rg_mtcc$write_1__SEL_3: rg_mtcc$D_IN = MUX_rg_mtcc$write_1__VAL_3;
    default: rg_mtcc$D_IN =
		 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign rg_mtcc$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d971 ||
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd28 &&
	     x__h24632 == 2'd0 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mtdc
  assign rg_mtdc$D_IN =
	     WILL_FIRE_RL_rl_reset_start ?
	       151'h0000000000000000000000001FFFFF44000000 :
	       mav_scr_write_cap ;
  assign rg_mtdc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd29 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_mtime
  assign rg_mtime$D_IN = rg_mtime + 64'd1 ;
  assign rg_mtime$EN = 1'd1 ;

  // register rg_mtval
  assign rg_mtval$D_IN =
	     MUX_rg_mcause$write_1__SEL_2 ?
	       MUX_rg_mtval$write_1__VAL_1 :
	       mav_csr_write_word ;
  assign rg_mtval$EN =
	     EN_csr_trap_actions &&
	     (csr_trap_actions_nmi || new_priv__h31189 == 2'b11) ||
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1067 ;

  // register rg_nmi
  assign rg_nmi$D_IN = !WILL_FIRE_RL_rl_reset_start && nmi_req_set_not_clear ;
  assign rg_nmi$EN = EN_nmi_req || WILL_FIRE_RL_rl_reset_start ;

  // register rg_nmi_vector
  assign rg_nmi_vector$D_IN = soc_map$m_nmivec_reset_value ;
  assign rg_nmi_vector$EN = WILL_FIRE_RL_rl_reset_start ;

  // register rg_satp
  assign rg_satp$D_IN =
	     MUX_rg_satp$write_1__SEL_1 ? mav_csr_write_word : 64'd0 ;
  assign rg_satp$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d951 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_scause
  always@(WILL_FIRE_RL_rl_reset_start or
	  MUX_rg_scause$write_1__SEL_2 or
	  MUX_rg_mcause$write_1__VAL_2 or
	  MUX_rg_scause$write_1__SEL_3 or MUX_rg_mcause$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_scause$D_IN = 7'd0;
    MUX_rg_scause$write_1__SEL_2:
	rg_scause$D_IN = MUX_rg_mcause$write_1__VAL_2;
    MUX_rg_scause$write_1__SEL_3:
	rg_scause$D_IN = MUX_rg_mcause$write_1__VAL_3;
    default: rg_scause$D_IN = 7'b0101010 /* unspecified value */ ;
  endcase
  assign rg_scause$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d940 ||
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     new_priv__h31189 == 2'b01 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_sccsr
  assign rg_sccsr$D_IN =
	     { csr_trap_actions_cheri_exc_reg,
	       csr_trap_actions_cheri_exc_code } ;
  assign rg_sccsr$EN =
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     new_priv__h31189 == 2'b01 &&
	     csr_trap_actions_exc_code == 6'd28 ;

  // register rg_sepcc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_mepcc_reset_value or
	  MUX_rg_sepcc$write_1__SEL_2 or
	  MUX_rg_mepcc$write_1__VAL_2 or
	  MUX_rg_scause$write_1__SEL_2 or
	  csr_trap_actions_pcc or
	  MUX_rg_sepcc$write_1__SEL_4 or MUX_rg_sepcc$write_1__VAL_4)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_sepcc$D_IN = soc_map$m_mepcc_reset_value;
    MUX_rg_sepcc$write_1__SEL_2: rg_sepcc$D_IN = MUX_rg_mepcc$write_1__VAL_2;
    MUX_rg_scause$write_1__SEL_2:
	rg_sepcc$D_IN = csr_trap_actions_pcc[160:10];
    MUX_rg_sepcc$write_1__SEL_4: rg_sepcc$D_IN = MUX_rg_sepcc$write_1__VAL_4;
    default: rg_sepcc$D_IN =
		 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign rg_sepcc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd15 ||
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d895 ||
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     new_priv__h31189 == 2'b01 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_sscratch
  assign rg_sscratch$D_IN = mav_csr_write_word ;
  assign rg_sscratch$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d892 ;

  // register rg_sscratchc
  assign rg_sscratchc$D_IN =
	     WILL_FIRE_RL_rl_reset_start ?
	       151'h0000000000000000000000001FFFFF44000000 :
	       mav_scr_write_cap ;
  assign rg_sscratchc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd14 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_state
  assign rg_state$D_IN = !EN_server_reset_request_put ;
  assign rg_state$EN =
	     EN_server_reset_request_put || WILL_FIRE_RL_rl_reset_start ;

  // register rg_stcc
  always@(WILL_FIRE_RL_rl_reset_start or
	  soc_map$m_mtcc_reset_value or
	  MUX_rg_stcc$write_1__SEL_2 or
	  MUX_rg_mtcc$write_1__VAL_2 or
	  MUX_rg_stcc$write_1__SEL_3 or MUX_rg_stcc$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_start: rg_stcc$D_IN = soc_map$m_mtcc_reset_value;
    MUX_rg_stcc$write_1__SEL_2: rg_stcc$D_IN = MUX_rg_mtcc$write_1__VAL_2;
    MUX_rg_stcc$write_1__SEL_3: rg_stcc$D_IN = MUX_rg_stcc$write_1__VAL_3;
    default: rg_stcc$D_IN =
		 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign rg_stcc$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d841 ||
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd12 &&
	     x__h24632 == 2'd0 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_stdc
  assign rg_stdc$D_IN =
	     WILL_FIRE_RL_rl_reset_start ?
	       151'h0000000000000000000000001FFFFF44000000 :
	       mav_scr_write_cap ;
  assign rg_stdc$EN =
	     EN_mav_scr_write && mav_scr_write_scr_addr == 5'd13 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_stval
  assign rg_stval$D_IN =
	     MUX_rg_stval$write_1__SEL_1 ?
	       mav_csr_write_word :
	       MUX_rg_mtval$write_1__VAL_1 ;
  assign rg_stval$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d945 ||
	     EN_csr_trap_actions && !csr_trap_actions_nmi &&
	     new_priv__h31189 == 2'b01 ;

  // register rg_tdata1
  assign rg_tdata1$D_IN =
	     MUX_rg_tdata1$write_1__SEL_1 ? new_csr_value__h21354 : 64'd0 ;
  assign rg_tdata1$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1088 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // register rg_tdata2
  assign rg_tdata2$D_IN = mav_csr_write_word ;
  assign rg_tdata2$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1093 ;

  // register rg_tdata3
  assign rg_tdata3$D_IN = mav_csr_write_word ;
  assign rg_tdata3$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1096 ;

  // register rg_tselect
  assign rg_tselect$D_IN = 64'd0 ;
  assign rg_tselect$EN =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1085 ||
	     WILL_FIRE_RL_rl_reset_start ;

  // submodule csr_mie
  assign csr_mie$mav_sie_write_misa = 28'd143921453 ;
  assign csr_mie$mav_sie_write_wordxl = mav_csr_write_word ;
  assign csr_mie$mav_write_misa = 28'd143921453 ;
  assign csr_mie$mav_write_wordxl = mav_csr_write_word ;
  assign csr_mie$EN_reset = WILL_FIRE_RL_rl_reset_start ;
  assign csr_mie$EN_mav_write =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d968 ;
  assign csr_mie$EN_mav_sie_write =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d838 ;

  // submodule csr_mip
  assign csr_mip$m_external_interrupt_req_req =
	     m_external_interrupt_req_set_not_clear ;
  assign csr_mip$mav_sip_write_misa = 28'd143921453 ;
  assign csr_mip$mav_sip_write_wordxl = mav_csr_write_word ;
  assign csr_mip$mav_write_misa = 28'd143921453 ;
  assign csr_mip$mav_write_wordxl = mav_csr_write_word ;
  assign csr_mip$s_external_interrupt_req_req =
	     s_external_interrupt_req_set_not_clear ;
  assign csr_mip$software_interrupt_req_req =
	     software_interrupt_req_set_not_clear ;
  assign csr_mip$timer_interrupt_req_req = timer_interrupt_req_set_not_clear ;
  assign csr_mip$EN_reset = WILL_FIRE_RL_rl_reset_start ;
  assign csr_mip$EN_mav_write =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1070 ;
  assign csr_mip$EN_mav_sip_write =
	     EN_mav_csr_write &&
	     mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d948 ;
  assign csr_mip$EN_m_external_interrupt_req = EN_m_external_interrupt_req ;
  assign csr_mip$EN_s_external_interrupt_req = EN_s_external_interrupt_req ;
  assign csr_mip$EN_software_interrupt_req = EN_software_interrupt_req ;
  assign csr_mip$EN_timer_interrupt_req = EN_timer_interrupt_req ;

  // submodule f_reset_rsps
  assign f_reset_rsps$ENQ = EN_server_reset_request_put ;
  assign f_reset_rsps$DEQ = EN_server_reset_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule perf_counters
  assign perf_counters$send_performance_events_evts =
	     send_performance_events_evts ;
  assign perf_counters$write_counter_idx = x__h12232[4:0] ;
  assign perf_counters$write_counter_val = mav_csr_write_word ;
  assign perf_counters$write_ctr_inhibit_val = mav_csr_write_word[31:3] ;
  assign perf_counters$write_ctr_sel_idx = x__h12301[4:0] ;
  assign perf_counters$write_ctr_sel_val = mav_csr_write_word[6:0] ;
  assign perf_counters$EN_write_counter =
	     EN_mav_csr_write && !mav_csr_write_csr_addr_ULT_0xB03___d748 &&
	     mav_csr_write_csr_addr_ULE_0xB1F___d750 ;
  assign perf_counters$EN_write_ctr_sel =
	     EN_mav_csr_write &&
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     !mav_csr_write_csr_addr_ULT_0x323___d756 &&
	     mav_csr_write_csr_addr_ULE_0x33F___d758 ;
  assign perf_counters$EN_write_ctr_inhibit =
	     CAN_FIRE_RL_rl_upd_ctr_inhib_csrrx ;

  // submodule soc_map
  assign soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign soc_map$m_is_mem_addr_addr = 64'h0 ;
  assign soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // remaining internal signals
  assign IF_IF_csr_ret_actions_from_priv_EQ_0b11_069_TH_ETC___d2125 =
	     { a_capFat_otype__h36929,
	       (csr_ret_actions_from_priv == 2'b11) ?
		 rg_mepcc[34:0] :
		 rg_sepcc[34:0] } ;
  assign IF_IF_csr_trap_actions_interrupt_AND_NOT_csr_t_ETC___d2035 =
	     _theResult_____2__h32772[63] ?
	       x__h35018[13:0] >= toBounds__h33765 :
	       x__h35018[13:0] <= toBoundsM1__h33766 ;
  assign IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820 =
	     (new_priv__h31189 == 2'b11) ?
	       { csr_mstatus_rg_mstatus_11_AND_INV_1_SL_1_CONCA_ETC___d1812[63:13],
		 csr_trap_actions_from_priv,
		 csr_mstatus_rg_mstatus_11_AND_INV_1_SL_1_CONCA_ETC___d1812[10:0] } :
	       { csr_mstatus_rg_mstatus_11_AND_INV_1_SL_1_CONCA_ETC___d1812[63:9],
		 csr_trap_actions_from_priv[0],
		 csr_mstatus_rg_mstatus_11_AND_INV_1_SL_1_CONCA_ETC___d1812[7:0] } ;
  assign IF_IF_mav_scr_write_cap_BITS_33_TO_28_254_EQ_0_ETC___d1473 =
	     { x1_avValue_reserved__h25713,
	       x1_avValue_otype__h25714,
	       x__h24632 != 2'd0 || mav_scr_write_cap[34],
	       (x__h24632 == 2'd0) ?
		 mav_scr_write_cap[33:0] :
		 34'h344000000 } ;
  assign IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2655 =
	     NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2497 ?
	       { csr_mip_mv_read__53_BIT_3_498_AND_csr_mie_mv_r_ETC___d2650,
		 6'd3 } :
	       { interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2479 ||
		 interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2481 &&
		 IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612,
		 6'd11 } ;
  assign IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2656 =
	     (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2497 &&
	      NOT_csr_mip_mv_read__53_BIT_3_498_499_OR_NOT_c_ETC___d2511) ?
	       { csr_mip_mv_read__53_BIT_7_513_AND_csr_mie_mv_r_ETC___d2645,
		 6'd7 } :
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2655 ;
  assign IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2657 =
	     (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2497 &&
	      NOT_csr_mip_mv_read__53_BIT_3_498_499_OR_NOT_c_ETC___d2511 &&
	      NOT_csr_mip_mv_read__53_BIT_7_513_514_OR_NOT_c_ETC___d2526) ?
	       { csr_mip_mv_read__53_BIT_9_528_AND_csr_mie_mv_r_ETC___d2640,
		 6'd9 } :
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2656 ;
  assign IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2659 =
	     (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2542 &&
	      NOT_csr_mip_mv_read__53_BIT_1_543_544_OR_NOT_c_ETC___d2556) ?
	       { csr_mip_mv_read__53_BIT_5_558_AND_csr_mie_mv_r_ETC___d2630,
		 6'd5 } :
	       (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2542 ?
		  { csr_mip_mv_read__53_BIT_1_543_AND_csr_mie_mv_r_ETC___d2635,
		    6'd1 } :
		  IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2657) ;
  assign IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2660 =
	     (NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2542 &&
	      NOT_csr_mip_mv_read__53_BIT_1_543_544_OR_NOT_c_ETC___d2556 &&
	      NOT_csr_mip_mv_read__53_BIT_5_558_559_OR_NOT_c_ETC___d2571) ?
	       { csr_mip_mv_read__53_BIT_8_573_AND_csr_mie_mv_r_ETC___d2625,
		 6'd8 } :
	       IF_NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_N_ETC___d2659 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0x323_97_98_A_ETC___d745 =
	     (mav_read_csr_csr_addr >= 12'h323 &&
	      mav_read_csr_csr_addr <= 12'h33F) ?
	       ((idx__h11665 < 12'd29) ? { 57'd0, x__h12039 } : 64'd0) :
	       IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0xB03_93_94_A_ETC___d746 =
	     (mav_read_csr_csr_addr >= 12'hB03 &&
	      mav_read_csr_csr_addr <= 12'hB1F) ?
	       ((idx__h11642 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 :
		  64'd0) :
	       IF_NOT_mav_read_csr_csr_addr_ULT_0x323_97_98_A_ETC___d745 ;
  assign IF_NOT_mav_read_csr_csr_addr_ULT_0xC03_89_90_A_ETC___d747 =
	     (mav_read_csr_csr_addr >= 12'hC03 &&
	      mav_read_csr_csr_addr <= 12'hC1F) ?
	       ((idx__h11619 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 :
		  64'd0) :
	       IF_NOT_mav_read_csr_csr_addr_ULT_0xB03_93_94_A_ETC___d746 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0x323_1_2_AND_rea_ETC___d401 =
	     (read_csr_csr_addr >= 12'h323 && read_csr_csr_addr <= 12'h33F) ?
	       ((idx__h5899 < 12'd29) ? { 57'd0, x__h7424 } : 64'd0) :
	       IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0xB03_7_8_AND_rea_ETC___d402 =
	     (read_csr_csr_addr >= 12'hB03 && read_csr_csr_addr <= 12'hB1F) ?
	       ((idx__h5876 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 :
		  64'd0) :
	       IF_NOT_read_csr_csr_addr_ULT_0x323_1_2_AND_rea_ETC___d401 ;
  assign IF_NOT_read_csr_csr_addr_ULT_0xC03_3_4_AND_rea_ETC___d403 =
	     (read_csr_csr_addr >= 12'hC03 && read_csr_csr_addr <= 12'hC1F) ?
	       ((idx__h5853 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 :
		  64'd0) :
	       IF_NOT_read_csr_csr_addr_ULT_0xB03_7_8_AND_rea_ETC___d402 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0x323_12_13_ETC___d560 =
	     (read_csr_port2_csr_addr >= 12'h323 &&
	      read_csr_port2_csr_addr <= 12'h33F) ?
	       ((idx__h9804 < 12'd29) ? { 57'd0, x__h10178 } : 64'd0) :
	       IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0xB03_08_09_ETC___d561 =
	     (read_csr_port2_csr_addr >= 12'hB03 &&
	      read_csr_port2_csr_addr <= 12'hB1F) ?
	       ((idx__h9781 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 :
		  64'd0) :
	       IF_NOT_read_csr_port2_csr_addr_ULT_0x323_12_13_ETC___d560 ;
  assign IF_NOT_read_csr_port2_csr_addr_ULT_0xC03_04_05_ETC___d562 =
	     (read_csr_port2_csr_addr >= 12'hC03 &&
	      read_csr_port2_csr_addr <= 12'hC1F) ?
	       ((idx__h9758 < 12'd29) ?
		  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 :
		  64'd0) :
	       IF_NOT_read_csr_port2_csr_addr_ULT_0xB03_08_09_ETC___d561 ;
  assign IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85__ETC___d1302 =
	     SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[63] ?
	       x__h25345[13:0] >= toBounds__h25853 :
	       x__h25345[13:0] <= toBoundsM1__h25854 ;
  assign IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85__ETC___d1338 =
	     SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[63] ?
	       x__h24231[13:0] >= toBounds__h25853 :
	       x__h24231[13:0] <= toBoundsM1__h25854 ;
  assign IF_csr_mstatus_rg_mstatus_11_BITS_12_TO_11_84__ETC___d786 =
	     (csr_mstatus_rg_mstatus[12:11] == 2'b10) ?
	       2'b01 :
	       csr_mstatus_rg_mstatus[12:11] ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       _theResult___fst__h36158 :
	       _theResult___fst__h36359 ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2127 =
	     { a_capFat_addrBits__h36925,
	       (csr_ret_actions_from_priv == 2'b11) ?
		 rg_mepcc[71:56] :
		 rg_sepcc[71:56],
	       a_capFat_flags__h36927,
	       a_capFat_reserved__h36928,
	       IF_IF_csr_ret_actions_from_priv_EQ_0b11_069_TH_ETC___d2125 } ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2128 =
	     { (csr_ret_actions_from_priv == 2'b11) ?
		 rg_mepcc[150] :
		 rg_sepcc[150],
	       a_capFat_address__h36924,
	       IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2127 } ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2147 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       { repBound__h9558,
		 rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc_24__ETC___d2130,
		 rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_24_B_ETC___d329,
		 rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331,
		 IF_rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc__ETC___d2135 } :
	       { repBound__h9011,
		 rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc_55__ETC___d2139,
		 rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_55_B_ETC___d260,
		 rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262,
		 IF_rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc__ETC___d2144 } ;
  assign IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2153 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       { csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082[12:11],
		 _theResult___fst__h36158 } :
	       { to_y__h36358, _theResult___fst__h36359 } ;
  assign IF_csr_trap_actions_interrupt_AND_NOT_csr_trap_ETC___d2043 =
	     (highOffsetBits__h33756 == 50'd0 &&
	      IF_IF_csr_trap_actions_interrupt_AND_NOT_csr_t_ETC___d2035 ||
	      IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018 >=
	      6'd50) &&
	     ((new_priv__h31189 == 2'b11) ? rg_mtcc[150] : rg_stcc[150]) ;
  assign IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018 =
	     (new_priv__h31189 == 2'b11) ? rg_mtcc[33:28] : rg_stcc[33:28] ;
  assign IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2066 =
	     { result_d_address__h35105,
	       result_d_addrBits__h35106,
	       (new_priv__h31189 == 2'b11) ? rg_mtcc[71:0] : rg_stcc[71:0] } ;
  assign IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d1035 =
	     mav_csr_write_word[63] ?
	       x__h20274[13:0] >= toBounds__h19703 :
	       x__h20274[13:0] <= toBoundsM1__h19704 ;
  assign IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d863 =
	     mav_csr_write_word[63] ?
	       x__h15900[13:0] >= toBounds__h15313 :
	       x__h15900[13:0] <= toBoundsM1__h15314 ;
  assign IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d911 =
	     mav_csr_write_word[63] ?
	       x__h16868[13:0] >= toBounds__h16297 :
	       x__h16868[13:0] <= toBoundsM1__h16298 ;
  assign IF_mav_csr_write_word_BIT_63_43_THEN_NOT_mav_c_ETC___d985 =
	     mav_csr_write_word[63] ?
	       x__h19240[13:0] >= toBounds__h18653 :
	       x__h19240[13:0] <= toBoundsM1__h18654 ;
  assign IF_mav_scr_write_cap_BITS_33_TO_28_254_ULT_51__ETC___d1413 =
	     (mav_scr_write_cap[33:28] < 6'd51 &&
	      _0b0_CONCAT_mav_scr_write_cap_BITS_149_TO_100_3_ETC___d1405 >
	      2'd1) ?
	       result__h27824 :
	       ret__h27238 ;
  assign IF_rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_2_ETC___d336 =
	     (rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_24_B_ETC___d329 ==
	      rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331) ?
	       2'd0 :
	       ((rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_24_B_ETC___d329 &&
		 !rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331) ?
		  2'd1 :
		  2'd3) ;
  assign IF_rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc__ETC___d2135 =
	     { (rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc_24__ETC___d2130 ==
		rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331) ?
		 2'd0 :
		 ((rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc_24__ETC___d2130 &&
		   !rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331) ?
		    2'd1 :
		    2'd3),
	       IF_rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_2_ETC___d336 } ;
  assign IF_rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_5_ETC___d267 =
	     (rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_55_B_ETC___d260 ==
	      rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262) ?
	       2'd0 :
	       ((rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_55_B_ETC___d260 &&
		 !rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262) ?
		  2'd1 :
		  2'd3) ;
  assign IF_rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc__ETC___d2144 =
	     { (rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc_55__ETC___d2139 ==
		rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262) ?
		 2'd0 :
		 ((rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc_55__ETC___d2139 &&
		   !rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262) ?
		    2'd1 :
		    2'd3),
	       IF_rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_5_ETC___d267 } ;
  assign NOT_access_permitted_1_csr_addr_ULT_0xC03_154__ETC___d2257 =
	     (!access_permitted_1_csr_addr_ULT_0xC03___d2154 &&
	      access_permitted_1_csr_addr_ULE_0xC1F___d2156 ||
	      access_permitted_1_csr_addr >= 12'hB03 &&
	      access_permitted_1_csr_addr <= 12'hB1F ||
	      access_permitted_1_csr_addr >= 12'h323 &&
	      access_permitted_1_csr_addr <= 12'h33F ||
	      access_permitted_1_csr_addr == 12'h001 ||
	      access_permitted_1_csr_addr == 12'h002 ||
	      access_permitted_1_csr_addr == 12'h003 ||
	      access_permitted_1_csr_addr == 12'hC00 ||
	      access_permitted_1_csr_addr == 12'hC01 ||
	      access_permitted_1_csr_addr == 12'hC02 ||
	      access_permitted_1_csr_addr == 12'h100 ||
	      access_permitted_1_csr_addr == 12'h102 ||
	      access_permitted_1_csr_addr == 12'h103 ||
	      access_permitted_1_csr_addr == 12'h104 ||
	      access_permitted_1_csr_addr == 12'h105 ||
	      access_permitted_1_csr_addr == 12'h106 ||
	      access_permitted_1_csr_addr == 12'h140 ||
	      access_permitted_1_csr_addr == 12'h141 ||
	      access_permitted_1_csr_addr == 12'h142 ||
	      access_permitted_1_csr_addr == 12'h143 ||
	      access_permitted_1_csr_addr == 12'h144 ||
	      access_permitted_1_csr_addr == 12'h180 ||
	      access_permitted_1_csr_addr == 12'h302 ||
	      access_permitted_1_csr_addr == 12'h303 ||
	      access_permitted_1_csr_addr == 12'h9C0 ||
	      access_permitted_1_csr_addr == 12'hF11 ||
	      access_permitted_1_csr_addr == 12'hF12 ||
	      access_permitted_1_csr_addr == 12'hF13 ||
	      access_permitted_1_csr_addr == 12'hF14 ||
	      access_permitted_1_csr_addr == 12'h300 ||
	      access_permitted_1_csr_addr == 12'h301 ||
	      access_permitted_1_csr_addr == 12'h304 ||
	      access_permitted_1_csr_addr == 12'h305 ||
	      access_permitted_1_csr_addr == 12'h306 ||
	      access_permitted_1_csr_addr == 12'h340 ||
	      access_permitted_1_csr_addr == 12'h341 ||
	      access_permitted_1_csr_addr == 12'h342 ||
	      access_permitted_1_csr_addr == 12'h343 ||
	      access_permitted_1_csr_addr == 12'h344 ||
	      access_permitted_1_csr_addr == 12'hBC0 ||
	      access_permitted_1_csr_addr == 12'hB00 ||
	      access_permitted_1_csr_addr == 12'hB02 ||
	      access_permitted_1_csr_addr == 12'h320 ||
	      access_permitted_1_csr_addr == 12'h7A0 ||
	      access_permitted_1_csr_addr == 12'h7A1 ||
	      access_permitted_1_csr_addr == 12'h7A2 ||
	      access_permitted_1_csr_addr == 12'h7A3) &&
	     access_permitted_1_priv >= access_permitted_1_csr_addr[9:8] ;
  assign NOT_access_permitted_2_csr_addr_ULT_0xC03_287__ETC___d2390 =
	     (!access_permitted_2_csr_addr_ULT_0xC03___d2287 &&
	      access_permitted_2_csr_addr_ULE_0xC1F___d2289 ||
	      access_permitted_2_csr_addr >= 12'hB03 &&
	      access_permitted_2_csr_addr <= 12'hB1F ||
	      access_permitted_2_csr_addr >= 12'h323 &&
	      access_permitted_2_csr_addr <= 12'h33F ||
	      access_permitted_2_csr_addr == 12'h001 ||
	      access_permitted_2_csr_addr == 12'h002 ||
	      access_permitted_2_csr_addr == 12'h003 ||
	      access_permitted_2_csr_addr == 12'hC00 ||
	      access_permitted_2_csr_addr == 12'hC01 ||
	      access_permitted_2_csr_addr == 12'hC02 ||
	      access_permitted_2_csr_addr == 12'h100 ||
	      access_permitted_2_csr_addr == 12'h102 ||
	      access_permitted_2_csr_addr == 12'h103 ||
	      access_permitted_2_csr_addr == 12'h104 ||
	      access_permitted_2_csr_addr == 12'h105 ||
	      access_permitted_2_csr_addr == 12'h106 ||
	      access_permitted_2_csr_addr == 12'h140 ||
	      access_permitted_2_csr_addr == 12'h141 ||
	      access_permitted_2_csr_addr == 12'h142 ||
	      access_permitted_2_csr_addr == 12'h143 ||
	      access_permitted_2_csr_addr == 12'h144 ||
	      access_permitted_2_csr_addr == 12'h180 ||
	      access_permitted_2_csr_addr == 12'h302 ||
	      access_permitted_2_csr_addr == 12'h303 ||
	      access_permitted_2_csr_addr == 12'h9C0 ||
	      access_permitted_2_csr_addr == 12'hF11 ||
	      access_permitted_2_csr_addr == 12'hF12 ||
	      access_permitted_2_csr_addr == 12'hF13 ||
	      access_permitted_2_csr_addr == 12'hF14 ||
	      access_permitted_2_csr_addr == 12'h300 ||
	      access_permitted_2_csr_addr == 12'h301 ||
	      access_permitted_2_csr_addr == 12'h304 ||
	      access_permitted_2_csr_addr == 12'h305 ||
	      access_permitted_2_csr_addr == 12'h306 ||
	      access_permitted_2_csr_addr == 12'h340 ||
	      access_permitted_2_csr_addr == 12'h341 ||
	      access_permitted_2_csr_addr == 12'h342 ||
	      access_permitted_2_csr_addr == 12'h343 ||
	      access_permitted_2_csr_addr == 12'h344 ||
	      access_permitted_2_csr_addr == 12'hBC0 ||
	      access_permitted_2_csr_addr == 12'hB00 ||
	      access_permitted_2_csr_addr == 12'hB02 ||
	      access_permitted_2_csr_addr == 12'h320 ||
	      access_permitted_2_csr_addr == 12'h7A0 ||
	      access_permitted_2_csr_addr == 12'h7A1 ||
	      access_permitted_2_csr_addr == 12'h7A2 ||
	      access_permitted_2_csr_addr == 12'h7A3) &&
	     access_permitted_2_priv >= access_permitted_2_csr_addr[9:8] ;
  assign NOT_cfg_verbosity_read__181_ULE_1_182___d1183 =
	     cfg_verbosity > 4'd1 ;
  assign NOT_csr_mip_mv_read__53_BIT_0_588_589_OR_NOT_c_ETC___d2601 =
	     !csr_mip$mv_read[0] || !csr_mie$mv_read[0] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2595 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2597 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2497 =
	     !csr_mip$mv_read[11] || !csr_mie$mv_read[11] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2479 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2481 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2542 =
	     NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2497 &&
	     NOT_csr_mip_mv_read__53_BIT_3_498_499_OR_NOT_c_ETC___d2511 &&
	     NOT_csr_mip_mv_read__53_BIT_7_513_514_OR_NOT_c_ETC___d2526 &&
	     NOT_csr_mip_mv_read__53_BIT_9_528_529_OR_NOT_c_ETC___d2541 ;
  assign NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2587 =
	     NOT_csr_mip_mv_read__53_BIT_11_472_473_OR_NOT__ETC___d2542 &&
	     NOT_csr_mip_mv_read__53_BIT_1_543_544_OR_NOT_c_ETC___d2556 &&
	     NOT_csr_mip_mv_read__53_BIT_5_558_559_OR_NOT_c_ETC___d2571 &&
	     NOT_csr_mip_mv_read__53_BIT_8_573_574_OR_NOT_c_ETC___d2586 ;
  assign NOT_csr_mip_mv_read__53_BIT_1_543_544_OR_NOT_c_ETC___d2556 =
	     !csr_mip$mv_read[1] || !csr_mie$mv_read[1] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2550 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2552 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_3_498_499_OR_NOT_c_ETC___d2511 =
	     !csr_mip$mv_read[3] || !csr_mie$mv_read[3] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2505 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2507 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_5_558_559_OR_NOT_c_ETC___d2571 =
	     !csr_mip$mv_read[5] || !csr_mie$mv_read[5] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2565 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2567 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_7_513_514_OR_NOT_c_ETC___d2526 =
	     !csr_mip$mv_read[7] || !csr_mie$mv_read[7] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2520 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2522 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_8_573_574_OR_NOT_c_ETC___d2586 =
	     !csr_mip$mv_read[8] || !csr_mie$mv_read[8] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2580 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2582 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_mip_mv_read__53_BIT_9_528_529_OR_NOT_c_ETC___d2541 =
	     !csr_mip$mv_read[9] || !csr_mie$mv_read[9] ||
	     !interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2535 &&
	     (!interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2537 ||
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494) ;
  assign NOT_csr_trap_actions_nmi_844_AND_csr_trap_acti_ETC___d1959 =
	     !csr_trap_actions_nmi && csr_trap_actions_interrupt &&
	     exc_code__h33582 != 6'd0 &&
	     exc_code__h33582 != 6'd1 &&
	     exc_code__h33582 != 6'd2 &&
	     exc_code__h33582 != 6'd3 &&
	     exc_code__h33582 != 6'd4 &&
	     exc_code__h33582 != 6'd5 &&
	     exc_code__h33582 != 6'd6 &&
	     exc_code__h33582 != 6'd7 &&
	     exc_code__h33582 != 6'd8 &&
	     exc_code__h33582 != 6'd9 &&
	     exc_code__h33582 != 6'd10 &&
	     exc_code__h33582 != 6'd11 ;
  assign NOT_mav_scr_write_cap_BITS_33_TO_28_254_ULT_50_ETC___d1305 =
	     mav_scr_write_cap[33:28] >= 6'd50 ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1376 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     mav_scr_write_cap[34] ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1378 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     !mav_scr_write_cap[34] ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1419 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     mav_scr_write_cap_BITS_27_TO_25_386_ULT_mav_sc_ETC___d1387 ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1421 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     !mav_scr_write_cap_BITS_27_TO_25_386_ULT_mav_sc_ETC___d1387 ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1422 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     mav_scr_write_cap_BITS_13_TO_11_262_ULT_mav_sc_ETC___d1264 ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1424 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     !mav_scr_write_cap_BITS_13_TO_11_262_ULT_mav_sc_ETC___d1264 ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1425 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266 ;
  assign NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1426 =
	     mav_scr_write_scr_addr != 5'd12 &&
	     mav_scr_write_scr_addr != 5'd13 &&
	     mav_scr_write_scr_addr != 5'd15 &&
	     mav_scr_write_scr_addr != 5'd14 &&
	     mav_scr_write_scr_addr != 5'd28 &&
	     mav_scr_write_scr_addr != 5'd29 &&
	     mav_scr_write_scr_addr != 5'd31 &&
	     mav_scr_write_scr_addr != 5'd30 &&
	     NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	     !mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266 ;
  assign SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281 =
	     x__h23591 | addrLSB__h27976 ;
  assign SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1309 =
	     (highOffsetBits__h24651 == 50'd0 &&
	      IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85__ETC___d1302 ||
	      NOT_mav_scr_write_cap_BITS_33_TO_28_254_ULT_50_ETC___d1305) &&
	     mav_scr_write_cap[52:35] == 18'd262143 ;
  assign SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1343 =
	     (highOffsetBits__h24651 == 50'd0 &&
	      IF_SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85__ETC___d1338 ||
	      NOT_mav_scr_write_cap_BITS_33_TO_28_254_ULT_50_ETC___d1305) &&
	     (mav_scr_write_cap[52:35] == 18'd262143 ||
	      !SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[0]) ;
  assign SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347 =
	     x__h9523 | addrLSB__h9512 ;
  assign SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317 =
	     x__h9295 | addrLSB__h9284 ;
  assign SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278 =
	     x__h8976 | addrLSB__h8965 ;
  assign SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250 =
	     x__h8771 | addrLSB__h8760 ;
  assign _0b0_CONCAT_mav_scr_write_cap_BITS_149_TO_100_3_ETC___d1405 =
	     ret__h27238[64:63] -
	     { 1'b0,
	       (mav_scr_write_cap[33:28] == 6'd50) ?
		 mav_scr_write_cap[13] :
		 mav_scr_write_cap_BITS_149_TO_100_PLUS_SEXT_x8_ETC__q2[49] } ;
  assign _theResult_____2__h32772 =
	     csr_trap_actions_interrupt_AND_NOT_csr_trap_ac_ETC___d1857 ?
	       exc_pc___1__h32871 :
	       exc_pc__h32770 ;
  assign _theResult____h52085 = rg_mideleg[11] ? 2'b01 : 2'b11 ;
  assign _theResult____h52297 = rg_mideleg[3] ? 2'b01 : 2'b11 ;
  assign _theResult____h52509 = rg_mideleg[7] ? 2'b01 : 2'b11 ;
  assign _theResult____h52721 = rg_mideleg[9] ? 2'b01 : 2'b11 ;
  assign _theResult____h52933 = rg_mideleg[1] ? 2'b01 : 2'b11 ;
  assign _theResult____h53145 = rg_mideleg[5] ? 2'b01 : 2'b11 ;
  assign _theResult____h53357 = rg_mideleg[8] ? 2'b01 : 2'b11 ;
  assign _theResult____h53569 = rg_mideleg[0] ? 2'b01 : 2'b11 ;
  assign _theResult____h53781 = rg_mideleg[4] ? 2'b01 : 2'b11 ;
  assign _theResult___fst__h31336 =
	     (csr_trap_actions_interrupt ?
		deleg_bit___1__h31345 :
		deleg_bit___1__h31360) ?
	       2'b01 :
	       2'b11 ;
  assign _theResult___fst__h36158 =
	     { csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082[63:13],
	       2'd0,
	       csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082[10:0] } ;
  assign _theResult___fst__h36359 =
	     { csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082[63:9],
	       1'd0,
	       csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082[7:0] } ;
  assign a_capFat_addrBits__h36925 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       rg_mepcc[85:72] :
	       rg_sepcc[85:72] ;
  assign a_capFat_address__h36924 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       rg_mepcc[149:86] :
	       rg_sepcc[149:86] ;
  assign a_capFat_flags__h36927 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       rg_mepcc[55] :
	       rg_sepcc[55] ;
  assign a_capFat_otype__h36929 =
	     (x__h36862 == 18'd262142) ? 18'd262143 : x__h36862 ;
  assign a_capFat_reserved__h36928 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       rg_mepcc[54:53] :
	       rg_sepcc[54:53] ;
  assign access_permitted_1_csr_addr_ULE_0xC1F___d2156 =
	     access_permitted_1_csr_addr <= 12'hC1F ;
  assign access_permitted_1_csr_addr_ULT_0xC03_154_OR_N_ETC___d2283 =
	     (access_permitted_1_csr_addr_ULT_0xC03___d2154 ||
	      !access_permitted_1_csr_addr_ULE_0xC1F___d2156 ||
	      !access_permitted_1_read_not_write) &&
	     access_permitted_1_csr_addr != 12'h001 &&
	     access_permitted_1_csr_addr != 12'h002 &&
	     access_permitted_1_csr_addr != 12'h003 &&
	     (access_permitted_1_csr_addr != 12'hC00 ||
	      !access_permitted_1_read_not_write) &&
	     (access_permitted_1_csr_addr != 12'hC01 ||
	      !access_permitted_1_read_not_write) ;
  assign access_permitted_1_csr_addr_ULT_0xC03___d2154 =
	     access_permitted_1_csr_addr < 12'hC03 ;
  assign access_permitted_2_csr_addr_ULE_0xC1F___d2289 =
	     access_permitted_2_csr_addr <= 12'hC1F ;
  assign access_permitted_2_csr_addr_ULT_0xC03_287_OR_N_ETC___d2414 =
	     (access_permitted_2_csr_addr_ULT_0xC03___d2287 ||
	      !access_permitted_2_csr_addr_ULE_0xC1F___d2289 ||
	      !access_permitted_2_read_not_write) &&
	     access_permitted_2_csr_addr != 12'h001 &&
	     access_permitted_2_csr_addr != 12'h002 &&
	     access_permitted_2_csr_addr != 12'h003 &&
	     (access_permitted_2_csr_addr != 12'hC00 ||
	      !access_permitted_2_read_not_write) &&
	     (access_permitted_2_csr_addr != 12'hC01 ||
	      !access_permitted_2_read_not_write) ;
  assign access_permitted_2_csr_addr_ULT_0xC03___d2287 =
	     access_permitted_2_csr_addr < 12'hC03 ;
  assign addBase__h16065 =
	     { {48{x__h16116[15]}}, x__h16116 } << rg_stcc[33:28] ;
  assign addBase__h17027 =
	     { {48{x__h17078[15]}}, x__h17078 } << rg_sepcc[33:28] ;
  assign addBase__h19399 =
	     { {48{x__h19450[15]}}, x__h19450 } << rg_mtcc[33:28] ;
  assign addBase__h20433 =
	     { {48{x__h20484[15]}}, x__h20484 } << rg_mepcc[33:28] ;
  assign addBase__h27120 =
	     { {48{x__h27171[15]}}, x__h27171 } << mav_scr_write_cap[33:28] ;
  assign addBase__h35148 =
	     { {48{x__h35209[15]}}, x__h35209 } <<
	     IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018 ;
  assign addTop__h27236 =
	     { {49{x__h27296[15]}}, x__h27296 } << mav_scr_write_cap[33:28] ;
  assign addrLSB__h27976 = mav_scr_write_cap[149:86] & y__h28067 ;
  assign addrLSB__h29874 = csr_trap_actions_pcc[159:96] & y__h30005 ;
  assign addrLSB__h8760 = rg_stcc[149:86] & y__h8901 ;
  assign addrLSB__h8965 = rg_sepcc[149:86] & y__h9103 ;
  assign addrLSB__h9284 = rg_mtcc[149:86] & y__h9422 ;
  assign addrLSB__h9512 = rg_mepcc[149:86] & y__h9650 ;
  assign b__h31423 = csr_mstatus_rg_mstatus[ie_to_x__h31324] ;
  assign b__h36195 = csr_mstatus_rg_mstatus[pie_from_x__h36143] ;
  assign base__h29872 =
	     { csr_trap_actions_pcc[1:0], csr_trap_actions_pcc[23:10] } ;
  assign cap_unpacked_capFat_addrBits__h24397 =
	     { mask__h23090, 12'd4095 } & newAddrBits__h24375 ;
  assign cap_unpacked_capFat_addrBits__h25486 =
	     { mask__h23090, 12'd4095 } & newAddrBits__h25464 ;
  assign cap_unpacked_capFat_address__h24396 =
	     mav_scr_write_cap_BITS_149_TO_100_312_AND_1125_ETC___d1317 +
	     new_csr__h23520 ;
  assign cap_unpacked_capFat_address__h25485 =
	     mav_scr_write_cap_BITS_149_TO_100_312_AND_1125_ETC___d1317 +
	     new_offset__h24624 ;
  assign csr_counter_read_fault_csr_addr_EQ_0xC00_447_A_ETC___d2471 =
	     csr_counter_read_fault_csr_addr == 12'hC00 &&
	     !rg_mcounteren[0] ||
	     csr_counter_read_fault_csr_addr == 12'hC01 &&
	     !rg_mcounteren[1] ||
	     csr_counter_read_fault_csr_addr == 12'hC02 &&
	     !rg_mcounteren[2] ||
	     csr_counter_read_fault_csr_addr >= 12'hC03 &&
	     csr_counter_read_fault_csr_addr <= 12'hC1F &&
	     !rg_mcounteren_BITS_31_TO_3__q10[i__h51872[4:0]] ;
  assign csr_mip_mv_read__53_BIT_0_588_AND_csr_mie_mv_r_ETC___d2620 =
	     csr_mip$mv_read[0] && csr_mie$mv_read[0] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2595 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2597 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_1_543_AND_csr_mie_mv_r_ETC___d2635 =
	     csr_mip$mv_read[1] && csr_mie$mv_read[1] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2550 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2552 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_3_498_AND_csr_mie_mv_r_ETC___d2650 =
	     csr_mip$mv_read[3] && csr_mie$mv_read[3] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2505 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2507 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_4_603_AND_csr_mie_mv_r_ETC___d2615 =
	     csr_mip$mv_read[4] && csr_mie$mv_read[4] &&
	     (interrupt_pending_cur_priv < _theResult____h53781 ||
	      interrupt_pending_cur_priv == _theResult____h53781 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_5_558_AND_csr_mie_mv_r_ETC___d2630 =
	     csr_mip$mv_read[5] && csr_mie$mv_read[5] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2565 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2567 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_7_513_AND_csr_mie_mv_r_ETC___d2645 =
	     csr_mip$mv_read[7] && csr_mie$mv_read[7] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2520 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2522 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_8_573_AND_csr_mie_mv_r_ETC___d2625 =
	     csr_mip$mv_read[8] && csr_mie$mv_read[8] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2580 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2582 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mip_mv_read__53_BIT_9_528_AND_csr_mie_mv_r_ETC___d2640 =
	     csr_mip$mv_read[9] && csr_mie$mv_read[9] &&
	     (interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2535 ||
	      interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2537 &&
	      IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612) ;
  assign csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082 =
	     x__h36191 | mask__h36179 ;
  assign csr_mstatus_rg_mstatus_11_AND_INV_1_SL_1_CONCA_ETC___d1812 =
	     x__h31419 | val__h31408 ;
  assign csr_trap_actions_interrupt_AND_NOT_csr_trap_ac_ETC___d1857 =
	     csr_trap_actions_interrupt && !csr_trap_actions_nmi &&
	     CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q3 ;
  assign csr_trap_actions_nmi_OR_NOT_csr_trap_actions_i_ETC___d2010 =
	     (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	     exc_code__h33582 != 6'd0 &&
	     exc_code__h33582 != 6'd1 &&
	     exc_code__h33582 != 6'd2 &&
	     exc_code__h33582 != 6'd3 &&
	     exc_code__h33582 != 6'd4 &&
	     exc_code__h33582 != 6'd5 &&
	     exc_code__h33582 != 6'd6 &&
	     exc_code__h33582 != 6'd7 &&
	     exc_code__h33582 != 6'd8 &&
	     exc_code__h33582 != 6'd9 &&
	     exc_code__h33582 != 6'd11 &&
	     exc_code__h33582 != 6'd12 &&
	     exc_code__h33582 != 6'd13 &&
	     exc_code__h33582 != 6'd15 ;
  assign deleg_bit___1__h31345 = rg_mideleg[csr_trap_actions_exc_code[3:0]] ;
  assign deleg_bit___1__h31360 = rg_medeleg[csr_trap_actions_exc_code[4:0]] ;
  assign exc_code__h33582 =
	     csr_trap_actions_nmi ? 6'd0 : csr_trap_actions_exc_code ;
  assign exc_pc___1__h32871 = exc_pc__h32770 + vector_offset__h32771 ;
  assign exc_pc__h32770 =
	     csr_trap_actions_nmi ?
	       rg_nmi_vector :
	       y_avValue_snd_snd_snd__h32833 ;
  assign fixed_up_val_23__h14041 =
	     { csr_mstatus_rg_mstatus[22:15],
	       2'd3,
	       IF_csr_mstatus_rg_mstatus_11_BITS_12_TO_11_84__ETC___d786,
	       csr_mstatus_rg_mstatus[10:5],
	       1'd0,
	       csr_mstatus_rg_mstatus[3:1],
	       1'd0 } ;
  assign fixed_up_val_23__h14667 =
	     { csr_mstatus_rg_mstatus[22:20],
	       mav_csr_write_word[19:18],
	       csr_mstatus_rg_mstatus[17],
	       mav_csr_write_word[16:13],
	       IF_csr_mstatus_rg_mstatus_11_BITS_12_TO_11_84__ETC___d786,
	       csr_mstatus_rg_mstatus[10:9],
	       mav_csr_write_word[8],
	       csr_mstatus_rg_mstatus[7:6],
	       mav_csr_write_word[5],
	       1'd0,
	       csr_mstatus_rg_mstatus[3:2],
	       mav_csr_write_word[1],
	       1'd0 } ;
  assign fixed_up_val_23__h18036 =
	     { mav_csr_write_word[22:13],
	       (mav_csr_write_word[12:11] == 2'b10) ?
		 2'b01 :
		 mav_csr_write_word[12:11],
	       mav_csr_write_word[10:5],
	       1'd0,
	       mav_csr_write_word[3:1],
	       1'd0 } ;
  assign fixed_up_val_23__h28551 =
	     { csr_mstatus_rg_mstatus[22:15],
	       mv_update_mstatus_fs_fs,
	       IF_csr_mstatus_rg_mstatus_11_BITS_12_TO_11_84__ETC___d786,
	       csr_mstatus_rg_mstatus[10:5],
	       1'd0,
	       csr_mstatus_rg_mstatus[3:1],
	       1'd0 } ;
  assign fixed_up_val_23__h29142 =
	     { csr_mstatus_rg_mstatus[22:15],
	       ma_update_mstatus_fs_fs,
	       IF_csr_mstatus_rg_mstatus_11_BITS_12_TO_11_84__ETC___d786,
	       csr_mstatus_rg_mstatus[10:5],
	       1'd0,
	       csr_mstatus_rg_mstatus[3:1],
	       1'd0 } ;
  assign fixed_up_val_23__h31247 =
	     { IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[22:13],
	       (IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[12:11] ==
		2'b10) ?
		 2'b01 :
		 IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[12:11],
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[10:5],
	       1'd0,
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[3:1],
	       1'd0 } ;
  assign fixed_up_val_23__h36065 =
	     { IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[22:13],
	       (IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[12:11] ==
		2'b10) ?
		 2'b01 :
		 IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[12:11],
	       IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[10:5],
	       1'd0,
	       IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[3:1],
	       1'd0 } ;
  assign highBitsfilter__h15303 = 50'h3FFFFFFFFFFFF << rg_stcc[33:28] ;
  assign highBitsfilter__h16287 = 50'h3FFFFFFFFFFFF << rg_sepcc[33:28] ;
  assign highBitsfilter__h18643 = 50'h3FFFFFFFFFFFF << rg_mtcc[33:28] ;
  assign highBitsfilter__h19693 = 50'h3FFFFFFFFFFFF << rg_mepcc[33:28] ;
  assign highBitsfilter__h33755 =
	     50'h3FFFFFFFFFFFF <<
	     IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018 ;
  assign highOffsetBits__h15304 = x__h19721 & highBitsfilter__h15303 ;
  assign highOffsetBits__h16288 = x__h19721 & highBitsfilter__h16287 ;
  assign highOffsetBits__h18644 = x__h19721 & highBitsfilter__h18643 ;
  assign highOffsetBits__h19694 = x__h19721 & highBitsfilter__h19693 ;
  assign highOffsetBits__h24651 = x__h24678 & mask__h27121 ;
  assign highOffsetBits__h33756 = x__h33783 & highBitsfilter__h33755 ;
  assign i__h51872 = csr_counter_read_fault_csr_addr - 12'hC03 ;
  assign idx__h11619 = mav_read_csr_csr_addr - 12'hC03 ;
  assign idx__h11642 = mav_read_csr_csr_addr - 12'hB03 ;
  assign idx__h11665 = mav_read_csr_csr_addr - 12'h323 ;
  assign idx__h5853 = read_csr_csr_addr - 12'hC03 ;
  assign idx__h5876 = read_csr_csr_addr - 12'hB03 ;
  assign idx__h5899 = read_csr_csr_addr - 12'h323 ;
  assign idx__h9758 = read_csr_port2_csr_addr - 12'hC03 ;
  assign idx__h9781 = read_csr_port2_csr_addr - 12'hB03 ;
  assign idx__h9804 = read_csr_port2_csr_addr - 12'h323 ;
  assign ie_from_x__h36142 = { 4'd0, csr_ret_actions_from_priv } ;
  assign ie_to_x__h31324 = { 4'd0, new_priv__h31189 } ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2481 =
	     interrupt_pending_cur_priv == _theResult____h52085 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2507 =
	     interrupt_pending_cur_priv == _theResult____h52297 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2522 =
	     interrupt_pending_cur_priv == _theResult____h52509 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2537 =
	     interrupt_pending_cur_priv == _theResult____h52721 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2552 =
	     interrupt_pending_cur_priv == _theResult____h52933 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2567 =
	     interrupt_pending_cur_priv == _theResult____h53145 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2582 =
	     interrupt_pending_cur_priv == _theResult____h53357 ;
  assign interrupt_pending_cur_priv_EQ_IF_rg_mideleg_88_ETC___d2597 =
	     interrupt_pending_cur_priv == _theResult____h53569 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2479 =
	     interrupt_pending_cur_priv < _theResult____h52085 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2505 =
	     interrupt_pending_cur_priv < _theResult____h52297 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2520 =
	     interrupt_pending_cur_priv < _theResult____h52509 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2535 =
	     interrupt_pending_cur_priv < _theResult____h52721 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2550 =
	     interrupt_pending_cur_priv < _theResult____h52933 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2565 =
	     interrupt_pending_cur_priv < _theResult____h53145 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2580 =
	     interrupt_pending_cur_priv < _theResult____h53357 ;
  assign interrupt_pending_cur_priv_ULT_IF_rg_mideleg_8_ETC___d2595 =
	     interrupt_pending_cur_priv < _theResult____h53569 ;
  assign length__h27883 = { 49'd0, x__h27888 } << mav_scr_write_cap[33:28] ;
  assign mask__h27121 = 50'h3FFFFFFFFFFFF << mav_scr_write_cap[33:28] ;
  assign mask__h27237 = 51'h7FFFFFFFFFFFF << mav_scr_write_cap[33:28] ;
  assign mask__h31407 = 64'd1 << ie_to_x__h31324 ;
  assign mask__h31424 = 64'd1 << pie_to_x__h31325 ;
  assign mask__h36179 = 64'd1 << pie_from_x__h36143 ;
  assign mask__h36196 = 64'd1 << ie_from_x__h36142 ;
  assign mav_csr_write_csr_addr_ULE_0x33F___d758 =
	     mav_csr_write_csr_addr <= 12'h33F ;
  assign mav_csr_write_csr_addr_ULE_0xB1F___d750 =
	     mav_csr_write_csr_addr <= 12'hB1F ;
  assign mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d1179 =
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr != 12'h001 &&
	     mav_csr_write_csr_addr != 12'h002 &&
	     mav_csr_write_csr_addr != 12'h003 &&
	     mav_csr_write_csr_addr != 12'h100 &&
	     mav_csr_write_csr_addr != 12'h102 &&
	     mav_csr_write_csr_addr != 12'h103 &&
	     mav_csr_write_csr_addr != 12'h104 &&
	     mav_csr_write_csr_addr != 12'h105 &&
	     mav_csr_write_csr_addr != 12'h106 &&
	     mav_csr_write_csr_addr != 12'h140 &&
	     mav_csr_write_csr_addr != 12'h141 &&
	     mav_csr_write_csr_addr != 12'h142 &&
	     mav_csr_write_csr_addr != 12'h143 &&
	     mav_csr_write_csr_addr != 12'h144 &&
	     mav_csr_write_csr_addr != 12'h180 &&
	     mav_csr_write_csr_addr != 12'h302 &&
	     mav_csr_write_csr_addr != 12'h303 &&
	     mav_csr_write_csr_addr != 12'hF11 &&
	     mav_csr_write_csr_addr != 12'hF12 &&
	     mav_csr_write_csr_addr != 12'hF13 &&
	     mav_csr_write_csr_addr != 12'hF14 &&
	     mav_csr_write_csr_addr != 12'h300 &&
	     mav_csr_write_csr_addr != 12'h301 &&
	     mav_csr_write_csr_addr != 12'h304 &&
	     mav_csr_write_csr_addr != 12'h305 &&
	     mav_csr_write_csr_addr != 12'h306 &&
	     mav_csr_write_csr_addr != 12'h340 &&
	     mav_csr_write_csr_addr != 12'h341 &&
	     mav_csr_write_csr_addr != 12'h342 &&
	     mav_csr_write_csr_addr != 12'h343 &&
	     mav_csr_write_csr_addr != 12'h344 &&
	     mav_csr_write_csr_addr != 12'hB00 &&
	     mav_csr_write_csr_addr != 12'hB02 &&
	     mav_csr_write_csr_addr != 12'h320 &&
	     mav_csr_write_csr_addr != 12'h7A0 &&
	     mav_csr_write_csr_addr != 12'h7A1 &&
	     mav_csr_write_csr_addr != 12'h7A2 &&
	     mav_csr_write_csr_addr != 12'h7A3 ;
  assign mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d779 =
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     (mav_csr_write_csr_addr == 12'h001 ||
	      mav_csr_write_csr_addr == 12'h002 ||
	      mav_csr_write_csr_addr == 12'h003 ||
	      mav_csr_write_csr_addr == 12'h100 ||
	      mav_csr_write_csr_addr == 12'h300) ;
  assign mav_csr_write_csr_addr_ULT_0x323___d756 =
	     mav_csr_write_csr_addr < 12'h323 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1014 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h306 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1018 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h340 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1021 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h341 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1064 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h342 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1067 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h343 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1070 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h344 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1073 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'hB00 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1076 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'hB02 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1079 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h320 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1085 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h7A0 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1088 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h7A1 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1093 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h7A2 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1096 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h7A3 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d1252 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     (mav_csr_write_csr_addr == 12'h001 ||
	      mav_csr_write_csr_addr == 12'h002 ||
	      mav_csr_write_csr_addr == 12'h003) ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d770 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     (mav_csr_write_csr_addr == 12'h001 ||
	      mav_csr_write_csr_addr == 12'h003) ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d832 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     (mav_csr_write_csr_addr == 12'h002 ||
	      mav_csr_write_csr_addr == 12'h003) ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d838 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h104 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d841 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h105 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d892 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h140 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d895 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h141 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d940 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h142 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d945 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h143 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d948 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h144 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d951 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h180 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d954 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h302 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d964 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h303 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d968 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h304 ;
  assign mav_csr_write_csr_addr_ULT_0xB03_48_OR_NOT_mav_ETC___d971 =
	     (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	      !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	     (mav_csr_write_csr_addr_ULT_0x323___d756 ||
	      !mav_csr_write_csr_addr_ULE_0x33F___d758) &&
	     mav_csr_write_csr_addr == 12'h305 ;
  assign mav_csr_write_csr_addr_ULT_0xB03___d748 =
	     mav_csr_write_csr_addr < 12'hB03 ;
  assign mav_csr_write_word_BITS_14_TO_13_93_EQ_0x3_94__ETC___d827 =
	     { sd__h18035,
	       40'd5120,
	       (mav_csr_write_csr_addr == 12'h100) ?
		 fixed_up_val_23__h14667 :
		 fixed_up_val_23__h18036 } ;
  assign mav_scr_write_cap_BITS_13_TO_11_262_ULT_mav_sc_ETC___d1264 =
	     mav_scr_write_cap[13:11] < repBound__h28108 ;
  assign mav_scr_write_cap_BITS_149_TO_100_312_AND_1125_ETC___d1317 =
	     { mav_scr_write_cap[149:100] & mask__h27121, 14'd0 } +
	     addBase__h27120 ;
  assign mav_scr_write_cap_BITS_149_TO_100_PLUS_SEXT_x8_ETC__q2 =
	     mav_scr_write_cap[149:100] +
	     ({ {48{x__h28188[1]}}, x__h28188 } << mav_scr_write_cap[33:28]) ;
  assign mav_scr_write_cap_BITS_27_TO_25_386_ULT_mav_sc_ETC___d1387 =
	     mav_scr_write_cap[27:25] < repBound__h28108 ;
  assign mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266 =
	     mav_scr_write_cap[85:83] < repBound__h28108 ;
  assign newAddrBits__h16024 = rg_stcc[13:0] + x__h15900[13:0] ;
  assign newAddrBits__h16986 = rg_sepcc[13:0] + x__h16868[13:0] ;
  assign newAddrBits__h19358 = rg_mtcc[13:0] + x__h19240[13:0] ;
  assign newAddrBits__h20392 = rg_mepcc[13:0] + x__h20274[13:0] ;
  assign newAddrBits__h24375 = mav_scr_write_cap[13:0] + x__h24231[13:0] ;
  assign newAddrBits__h25464 = mav_scr_write_cap[13:0] + x__h25345[13:0] ;
  assign newAddrBits__h35093 =
	     x1_avValue_snd_fst_capFat_bounds_baseBits__h34454 +
	     x__h35018[13:0] ;
  assign new_csr__h23520 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[63:1],
	       1'd0 } ;
  assign new_csr_value__h18599 =
	     { mav_csr_write_word[63:2], 1'd0, mav_csr_write_word[0] } ;
  assign new_csr_value__h19649 = { mav_csr_write_word[63:1], 1'd0 } ;
  assign new_csr_value__h21354 = { 4'd0, mav_csr_write_word[59:0] } ;
  assign new_offset__h24624 =
	     { SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[63:2],
	       1'b0,
	       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[0] } ;
  assign new_priv__h31189 =
	     csr_trap_actions_nmi ?
	       2'b11 :
	       ((csr_trap_actions_from_priv == 2'b11) ?
		  csr_trap_actions_from_priv :
		  _theResult___fst__h31336) ;
  assign offset__h23579 = { 2'b0, mav_scr_write_cap[85:72] } - x__h27171 ;
  assign offset__h29873 =
	     { 2'b0, csr_trap_actions_pcc[95:82] } - base__h29872 ;
  assign offset__h8759 = { 2'b0, rg_stcc[85:72] } - x__h16116 ;
  assign offset__h8964 = { 2'b0, rg_sepcc[85:72] } - x__h17078 ;
  assign offset__h9283 = { 2'b0, rg_mtcc[85:72] } - x__h19450 ;
  assign offset__h9511 = { 2'b0, rg_mepcc[85:72] } - x__h20484 ;
  assign pie_from_x__h36143 = { 4'd1, csr_ret_actions_from_priv } ;
  assign pie_to_x__h31325 = { 4'd1, new_priv__h31189 } ;
  assign repBound__h28108 = mav_scr_write_cap[13:11] - 3'b001 ;
  assign repBound__h8806 = rg_stcc[13:11] - 3'b001 ;
  assign repBound__h9011 = rg_sepcc[13:11] - 3'b001 ;
  assign repBound__h9330 = rg_mtcc[13:11] - 3'b001 ;
  assign repBound__h9558 = rg_mepcc[13:11] - 3'b001 ;
  assign result__h27824 = { ~ret__h27238[64], ret__h27238[63:0] } ;
  assign result_d_addrBits__h35106 =
	     { mask__h35094, 12'd4095 } & newAddrBits__h35093 ;
  assign result_d_address__h35105 =
	     { x__h35151[63:14] & highBitsfilter__h33755, 14'd0 } +
	     addBase__h35148 +
	     _theResult_____2__h32772 ;
  assign ret__h27238 =
	     { { 1'b0, mav_scr_write_cap[149:100] } & mask__h27237, 14'd0 } +
	     addTop__h27236 ;
  assign rg_mcounteren_BITS_31_TO_3__q10 = rg_mcounteren[31:3] ;
  assign rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_24_B_ETC___d329 =
	     rg_mepcc[13:11] < repBound__h9558 ;
  assign rg_mepcc_24_BITS_27_TO_25_129_ULT_rg_mepcc_24__ETC___d2130 =
	     rg_mepcc[27:25] < repBound__h9558 ;
  assign rg_mepcc_24_BITS_85_TO_83_30_ULT_rg_mepcc_24_B_ETC___d331 =
	     rg_mepcc[85:83] < repBound__h9558 ;
  assign rg_mtcc_94_BITS_13_TO_11_97_ULT_rg_mtcc_94_BIT_ETC___d299 =
	     rg_mtcc[13:11] < repBound__h9330 ;
  assign rg_mtcc_94_BITS_85_TO_83_00_ULT_rg_mtcc_94_BIT_ETC___d301 =
	     rg_mtcc[85:83] < repBound__h9330 ;
  assign rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_55_B_ETC___d260 =
	     rg_sepcc[13:11] < repBound__h9011 ;
  assign rg_sepcc_55_BITS_27_TO_25_138_ULT_rg_sepcc_55__ETC___d2139 =
	     rg_sepcc[27:25] < repBound__h9011 ;
  assign rg_sepcc_55_BITS_85_TO_83_61_ULT_rg_sepcc_55_B_ETC___d262 =
	     rg_sepcc[85:83] < repBound__h9011 ;
  assign rg_stcc_27_BITS_13_TO_11_30_ULT_rg_stcc_27_BIT_ETC___d232 =
	     rg_stcc[13:11] < repBound__h8806 ;
  assign rg_stcc_27_BITS_85_TO_83_33_ULT_rg_stcc_27_BIT_ETC___d234 =
	     rg_stcc[85:83] < repBound__h8806 ;
  assign sd__h18035 =
	     mav_csr_write_word[14:13] == 2'h3 ||
	     mav_csr_write_word[16:15] == 2'h3 ;
  assign sd__h28550 =
	     mv_update_mstatus_fs_fs == 2'h3 ||
	     csr_mstatus_rg_mstatus[16:15] == 2'h3 ;
  assign sd__h29141 =
	     ma_update_mstatus_fs_fs == 2'h3 ||
	     csr_mstatus_rg_mstatus[16:15] == 2'h3 ;
  assign sd__h31246 =
	     IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[14:13] ==
	     2'h3 ||
	     IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[16:15] ==
	     2'h3 ;
  assign sd__h36064 =
	     IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[14:13] ==
	     2'h3 ||
	     IF_csr_ret_actions_from_priv_EQ_0b11_069_THEN__ETC___d2089[16:15] ==
	     2'h3 ;
  assign signBits__h19691 = {50{mav_csr_write_word[63]}} ;
  assign signBits__h24648 =
	     {50{SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[63]}} ;
  assign signBits__h33753 = {50{_theResult_____2__h32772[63]}} ;
  assign toBoundsM1__h15314 = { 3'b110, ~rg_stcc[10:0] } ;
  assign toBoundsM1__h16298 = { 3'b110, ~rg_sepcc[10:0] } ;
  assign toBoundsM1__h18654 = { 3'b110, ~rg_mtcc[10:0] } ;
  assign toBoundsM1__h19704 = { 3'b110, ~rg_mepcc[10:0] } ;
  assign toBoundsM1__h25854 = { 3'b110, ~mav_scr_write_cap[10:0] } ;
  assign toBoundsM1__h33766 =
	     { 3'b110,
	       ~x1_avValue_snd_fst_capFat_bounds_baseBits__h34454[10:0] } ;
  assign toBounds__h15313 = 14'd14336 - { 3'b0, rg_stcc[10:0] } ;
  assign toBounds__h16297 = 14'd14336 - { 3'b0, rg_sepcc[10:0] } ;
  assign toBounds__h18653 = 14'd14336 - { 3'b0, rg_mtcc[10:0] } ;
  assign toBounds__h19703 = 14'd14336 - { 3'b0, rg_mepcc[10:0] } ;
  assign toBounds__h25853 = 14'd14336 - { 3'b0, mav_scr_write_cap[10:0] } ;
  assign toBounds__h33765 =
	     14'd14336 -
	     { 3'b0,
	       x1_avValue_snd_fst_capFat_bounds_baseBits__h34454[10:0] } ;
  assign to_y__h36358 =
	     { 1'b0,
	       csr_mstatus_rg_mstatus_11_AND_INV_1_SL_0_CONCA_ETC___d2082[8] } ;
  assign v__h12278 = { 57'd0, mav_csr_write_word[6:0] } ;
  assign v__h14607 =
	     { sd__h18035,
	       43'd8192,
	       mav_csr_write_word[19:18],
	       1'd0,
	       mav_csr_write_word[16:13],
	       4'd0,
	       mav_csr_write_word[8],
	       2'd0,
	       mav_csr_write_word[5],
	       3'd0,
	       mav_csr_write_word[1],
	       1'd0 } ;
  assign v__h17809 =
	     { 35'd0,
	       mav_csr_write_word[28:26],
	       10'd0,
	       mav_csr_write_word[15],
	       1'd0,
	       mav_csr_write_word[13:12],
	       2'd0,
	       mav_csr_write_word[9:0] } ;
  assign v__h17930 = { 52'd0, mav_csr_write_word[11:0] } ;
  assign v__h19535 = { 32'd0, mav_csr_write_word[31:0] } ;
  assign v__h20569 =
	     { mav_csr_write_word[63], 57'd0, mav_csr_write_word[5:0] } ;
  assign v__h21229 = { 32'd0, x__h21300 } ;
  assign v__h31194 = { sd__h31246, 40'd5120, fixed_up_val_23__h31247 } ;
  assign val__h31408 = 64'd0 << ie_to_x__h31324 ;
  assign val__h31425 = { 63'd0, b__h31423 } << pie_to_x__h31325 ;
  assign val__h36197 = { 63'd0, b__h36195 } << ie_from_x__h36142 ;
  assign vector_offset__h32771 = { 56'd0, csr_trap_actions_exc_code, 2'd0 } ;
  assign wordxl1__h13991 = { 41'h10000001400, fixed_up_val_23__h14041 } ;
  assign wordxl1__h17986 = { sd__h18035, 40'd5120, fixed_up_val_23__h18036 } ;
  assign x1_avValue_addrBits__h25710 =
	     (x__h24632 == 2'd0) ?
	       cap_unpacked_capFat_addrBits__h25486 :
	       14'd0 ;
  assign x1_avValue_address__h25709 =
	     (x__h24632 == 2'd0) ?
	       cap_unpacked_capFat_address__h25485 :
	       64'd0 ;
  assign x1_avValue_flags__h25712 =
	     x__h24632 == 2'd0 && mav_scr_write_cap[55] ;
  assign x1_avValue_otype__h25714 =
	     (x__h24632 == 2'd0) ? mav_scr_write_cap[52:35] : 18'd262143 ;
  assign x1_avValue_perms_soft__h28270 =
	     (x__h24632 == 2'd0) ? mav_scr_write_cap[71:68] : 4'd0 ;
  assign x1_avValue_reserved__h25713 =
	     (x__h24632 == 2'd0) ? mav_scr_write_cap[54:53] : 2'd0 ;
  assign x1_avValue_snd_fst_capFat_bounds_baseBits__h34454 =
	     (new_priv__h31189 == 2'b11) ? rg_mtcc[13:0] : rg_stcc[13:0] ;
  assign x__h12232 = mav_csr_write_csr_addr - 12'hB03 ;
  assign x__h12301 = mav_csr_write_csr_addr - 12'h323 ;
  assign x__h15900 = new_csr_value__h18599 >> rg_stcc[33:28] ;
  assign x__h16116 =
	     { (rg_stcc_27_BITS_13_TO_11_30_ULT_rg_stcc_27_BIT_ETC___d232 ==
		rg_stcc_27_BITS_85_TO_83_33_ULT_rg_stcc_27_BIT_ETC___d234) ?
		 2'd0 :
		 ((rg_stcc_27_BITS_13_TO_11_30_ULT_rg_stcc_27_BIT_ETC___d232 &&
		   !rg_stcc_27_BITS_85_TO_83_33_ULT_rg_stcc_27_BIT_ETC___d234) ?
		    2'd1 :
		    2'd3),
	       rg_stcc[13:0] } ;
  assign x__h16868 = new_csr_value__h19649 >> rg_sepcc[33:28] ;
  assign x__h17078 =
	     { IF_rg_sepcc_55_BITS_13_TO_11_58_ULT_rg_sepcc_5_ETC___d267,
	       rg_sepcc[13:0] } ;
  assign x__h19240 = new_csr_value__h18599 >> rg_mtcc[33:28] ;
  assign x__h19450 =
	     { (rg_mtcc_94_BITS_13_TO_11_97_ULT_rg_mtcc_94_BIT_ETC___d299 ==
		rg_mtcc_94_BITS_85_TO_83_00_ULT_rg_mtcc_94_BIT_ETC___d301) ?
		 2'd0 :
		 ((rg_mtcc_94_BITS_13_TO_11_97_ULT_rg_mtcc_94_BIT_ETC___d299 &&
		   !rg_mtcc_94_BITS_85_TO_83_00_ULT_rg_mtcc_94_BIT_ETC___d301) ?
		    2'd1 :
		    2'd3),
	       rg_mtcc[13:0] } ;
  assign x__h19721 = mav_csr_write_word[63:14] ^ signBits__h19691 ;
  assign x__h20274 = new_csr_value__h19649 >> rg_mepcc[33:28] ;
  assign x__h20484 =
	     { IF_rg_mepcc_24_BITS_13_TO_11_27_ULT_rg_mepcc_2_ETC___d336,
	       rg_mepcc[13:0] } ;
  assign x__h21300 =
	     { mav_csr_write_word[31:2], 1'd0, mav_csr_write_word[0] } ;
  assign x__h23591 = x__h23593 << mav_scr_write_cap[33:28] ;
  assign x__h23593 = { {48{offset__h23579[15]}}, offset__h23579 } ;
  assign x__h24231 = new_csr__h23520 >> mav_scr_write_cap[33:28] ;
  assign x__h24632 =
	     (mav_scr_write_cap[33:28] == 6'd0) ?
	       mav_scr_write_cap[1:0] :
	       2'b0 ;
  assign x__h24678 =
	     SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281[63:14] ^
	     signBits__h24648 ;
  assign x__h25345 = new_offset__h24624 >> mav_scr_write_cap[33:28] ;
  assign x__h27171 = { x__h28188, mav_scr_write_cap[13:0] } ;
  assign x__h27296 = { x__h28169, mav_scr_write_cap[27:14] } ;
  assign x__h27888 = x__h27296 - x__h27171 ;
  assign x__h28068 = 64'hFFFFFFFFFFFFFFFF << mav_scr_write_cap[33:28] ;
  assign x__h28169 =
	     (mav_scr_write_cap_BITS_27_TO_25_386_ULT_mav_sc_ETC___d1387 ==
	      mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266) ?
	       2'd0 :
	       ((mav_scr_write_cap_BITS_27_TO_25_386_ULT_mav_sc_ETC___d1387 &&
		 !mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266) ?
		  2'd1 :
		  2'd3) ;
  assign x__h28188 =
	     (mav_scr_write_cap_BITS_13_TO_11_262_ULT_mav_sc_ETC___d1264 ==
	      mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266) ?
	       2'd0 :
	       ((mav_scr_write_cap_BITS_13_TO_11_262_ULT_mav_sc_ETC___d1264 &&
		 !mav_scr_write_cap_BITS_85_TO_83_265_ULT_mav_sc_ETC___d1266) ?
		  2'd1 :
		  2'd3) ;
  assign x__h29885 = x__h29887 << csr_trap_actions_pcc[43:38] ;
  assign x__h29887 = { {48{offset__h29873[15]}}, offset__h29873 } ;
  assign x__h30006 = 64'hFFFFFFFFFFFFFFFF << csr_trap_actions_pcc[43:38] ;
  assign x__h31406 = x__h31436 | val__h31425 ;
  assign x__h31419 = x__h31406 & y__h31420 ;
  assign x__h31436 = csr_mstatus_rg_mstatus & y__h31437 ;
  assign x__h33783 = _theResult_____2__h32772[63:14] ^ signBits__h33753 ;
  assign x__h35018 =
	     _theResult_____2__h32772 >>
	     IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018 ;
  assign x__h35151 =
	     (new_priv__h31189 == 2'b11) ? rg_mtcc[149:86] : rg_stcc[149:86] ;
  assign x__h35209 = (new_priv__h31189 == 2'b11) ? x__h19450 : x__h16116 ;
  assign x__h35993 =
	     (csr_trap_actions_nmi || new_priv__h31189 == 2'b11) ?
	       v__h31194 :
	       y_avValue_fst__h32742 ;
  assign x__h35994 =
	     { !csr_trap_actions_nmi && csr_trap_actions_interrupt,
	       57'd0,
	       exc_code__h33582 } ;
  assign x__h36178 = x__h36208 | val__h36197 ;
  assign x__h36191 = x__h36178 & y__h36192 ;
  assign x__h36208 = csr_mstatus_rg_mstatus & y__h36209 ;
  assign x__h36862 =
	     (csr_ret_actions_from_priv == 2'b11) ?
	       rg_mepcc[52:35] :
	       rg_sepcc[52:35] ;
  assign x__h5495 = rg_mcycle + 64'd1 ;
  assign x__h8771 = x__h8773 << rg_stcc[33:28] ;
  assign x__h8773 = { {48{offset__h8759[15]}}, offset__h8759 } ;
  assign x__h8902 = 64'hFFFFFFFFFFFFFFFF << rg_stcc[33:28] ;
  assign x__h8976 = x__h8978 << rg_sepcc[33:28] ;
  assign x__h8978 = { {48{offset__h8964[15]}}, offset__h8964 } ;
  assign x__h9104 = 64'hFFFFFFFFFFFFFFFF << rg_sepcc[33:28] ;
  assign x__h9295 = x__h9297 << rg_mtcc[33:28] ;
  assign x__h9297 = { {48{offset__h9283[15]}}, offset__h9283 } ;
  assign x__h9423 = 64'hFFFFFFFFFFFFFFFF << rg_mtcc[33:28] ;
  assign x__h9523 = x__h9525 << rg_mepcc[33:28] ;
  assign x__h9525 = { {48{offset__h9511[15]}}, offset__h9511 } ;
  assign x__h9651 = 64'hFFFFFFFFFFFFFFFF << rg_mepcc[33:28] ;
  assign x__h9708 =
	     { perf_counters$read_ctr_inhibit__read,
	       rg_ctr_inhib_ir_cy[1],
	       1'd0,
	       rg_ctr_inhib_ir_cy[0] } ;
  assign x_addrBits__h16046 =
	     { mask__h16025, 12'd4095 } & newAddrBits__h16024 ;
  assign x_addrBits__h17008 =
	     { mask__h16987, 12'd4095 } & newAddrBits__h16986 ;
  assign x_addrBits__h19380 =
	     { mask__h19359, 12'd4095 } & newAddrBits__h19358 ;
  assign x_addrBits__h20414 =
	     { mask__h20393, 12'd4095 } & newAddrBits__h20392 ;
  assign x_address__h16045 =
	     { rg_stcc[149:100] & highBitsfilter__h15303, 14'd0 } +
	     addBase__h16065 +
	     new_csr_value__h18599 ;
  assign x_address__h17007 =
	     { rg_sepcc[149:100] & highBitsfilter__h16287, 14'd0 } +
	     addBase__h17027 +
	     new_csr_value__h19649 ;
  assign x_address__h19379 =
	     { rg_mtcc[149:100] & highBitsfilter__h18643, 14'd0 } +
	     addBase__h19399 +
	     new_csr_value__h18599 ;
  assign x_address__h20413 =
	     { rg_mepcc[149:100] & highBitsfilter__h19693, 14'd0 } +
	     addBase__h20433 +
	     new_csr_value__h19649 ;
  assign y__h28067 = ~x__h28068 ;
  assign y__h30005 = ~x__h30006 ;
  assign y__h31420 = ~mask__h31407 ;
  assign y__h31437 = ~mask__h31424 ;
  assign y__h36192 = ~mask__h36179 ;
  assign y__h36209 = ~mask__h36196 ;
  assign y__h8901 = ~x__h8902 ;
  assign y__h9103 = ~x__h9104 ;
  assign y__h9422 = ~x__h9423 ;
  assign y__h9650 = ~x__h9651 ;
  assign y_avValue_fst__h21523 = { 59'd0, mav_csr_write_word[4:0] } ;
  assign y_avValue_fst__h21528 = { 61'd0, mav_csr_write_word[2:0] } ;
  assign y_avValue_fst__h21533 = { 56'd0, mav_csr_write_word[7:0] } ;
  assign y_avValue_fst__h21789 =
	     (!mav_csr_write_csr_addr_ULT_0x323___d756 &&
	      mav_csr_write_csr_addr_ULE_0x33F___d758) ?
	       v__h12278 :
	       y_avValue_fst__h21773 ;
  assign y_avValue_fst__h32724 =
	     { sd__h31246,
	       43'd8192,
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[19:18],
	       1'd0,
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[16:13],
	       4'd0,
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[8],
	       2'd0,
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[5],
	       3'd0,
	       IF_IF_csr_trap_actions_nmi_THEN_0b11_ELSE_IF_c_ETC___d1820[1],
	       1'd0 } ;
  assign y_avValue_fst__h32742 =
	     (new_priv__h31189 == 2'b01) ? y_avValue_fst__h32724 : v__h31194 ;
  assign y_avValue_new_csr_value__h21940 =
	     (!mav_csr_write_csr_addr_ULT_0xB03___d748 &&
	      mav_csr_write_csr_addr_ULE_0xB1F___d750) ?
	       mav_csr_write_word :
	       y_avValue_fst__h21789 ;
  assign y_avValue_snd_snd_snd__h32833 =
	     { CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q1,
	       2'd0 } ;
  always@(rg_stcc)
  begin
    case (rg_stcc[33:28])
      6'd51: mask__h16025 = 2'b01;
      6'd52: mask__h16025 = 2'b0;
      default: mask__h16025 = 2'b11;
    endcase
  end
  always@(rg_sepcc)
  begin
    case (rg_sepcc[33:28])
      6'd51: mask__h16987 = 2'b01;
      6'd52: mask__h16987 = 2'b0;
      default: mask__h16987 = 2'b11;
    endcase
  end
  always@(rg_mtcc)
  begin
    case (rg_mtcc[33:28])
      6'd51: mask__h19359 = 2'b01;
      6'd52: mask__h19359 = 2'b0;
      default: mask__h19359 = 2'b11;
    endcase
  end
  always@(rg_mepcc)
  begin
    case (rg_mepcc[33:28])
      6'd51: mask__h20393 = 2'b01;
      6'd52: mask__h20393 = 2'b0;
      default: mask__h20393 = 2'b11;
    endcase
  end
  always@(mav_scr_write_cap)
  begin
    case (mav_scr_write_cap[33:28])
      6'd51: mask__h23090 = 2'b01;
      6'd52: mask__h23090 = 2'b0;
      default: mask__h23090 = 2'b11;
    endcase
  end
  always@(mav_csr_write_csr_addr or
	  mav_csr_write_word or
	  y_avValue_fst__h21523 or
	  y_avValue_fst__h21528 or
	  y_avValue_fst__h21533 or
	  v__h14607 or
	  csr_mie$mav_sie_write or
	  new_csr_value__h18599 or
	  new_csr_value__h19649 or
	  v__h20569 or
	  csr_mip$mav_sip_write or
	  wordxl1__h17986 or
	  v__h17809 or
	  v__h17930 or
	  csr_mie$mav_write or
	  v__h19535 or
	  v__h21229 or csr_mip$mav_write or new_csr_value__h21354)
  begin
    case (mav_csr_write_csr_addr)
      12'h001: y_avValue_fst__h21773 = y_avValue_fst__h21523;
      12'h002: y_avValue_fst__h21773 = y_avValue_fst__h21528;
      12'h003: y_avValue_fst__h21773 = y_avValue_fst__h21533;
      12'h100: y_avValue_fst__h21773 = v__h14607;
      12'h102, 12'h103, 12'h106, 12'h7A0, 12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  y_avValue_fst__h21773 = 64'd0;
      12'h104: y_avValue_fst__h21773 = csr_mie$mav_sie_write;
      12'h105, 12'h305: y_avValue_fst__h21773 = new_csr_value__h18599;
      12'h140, 12'h143, 12'h180, 12'h340, 12'h343, 12'hB00, 12'hB02:
	  y_avValue_fst__h21773 = mav_csr_write_word;
      12'h141, 12'h341: y_avValue_fst__h21773 = new_csr_value__h19649;
      12'h142, 12'h342: y_avValue_fst__h21773 = v__h20569;
      12'h144: y_avValue_fst__h21773 = csr_mip$mav_sip_write;
      12'h300: y_avValue_fst__h21773 = wordxl1__h17986;
      12'h301: y_avValue_fst__h21773 = 64'h800000000094112D;
      12'h302: y_avValue_fst__h21773 = v__h17809;
      12'h303: y_avValue_fst__h21773 = v__h17930;
      12'h304: y_avValue_fst__h21773 = csr_mie$mav_write;
      12'h306: y_avValue_fst__h21773 = v__h19535;
      12'h320: y_avValue_fst__h21773 = v__h21229;
      12'h344: y_avValue_fst__h21773 = csr_mip$mav_write;
      12'h7A1: y_avValue_fst__h21773 = new_csr_value__h21354;
      default: y_avValue_fst__h21773 = mav_csr_write_word;
    endcase
  end
  always@(idx__h5899 or
	  perf_counters$read_ctr_sels_0__read or
	  perf_counters$read_ctr_sels_1__read or
	  perf_counters$read_ctr_sels_2__read or
	  perf_counters$read_ctr_sels_3__read or
	  perf_counters$read_ctr_sels_4__read or
	  perf_counters$read_ctr_sels_5__read or
	  perf_counters$read_ctr_sels_6__read or
	  perf_counters$read_ctr_sels_7__read or
	  perf_counters$read_ctr_sels_8__read or
	  perf_counters$read_ctr_sels_9__read or
	  perf_counters$read_ctr_sels_10__read or
	  perf_counters$read_ctr_sels_11__read or
	  perf_counters$read_ctr_sels_12__read or
	  perf_counters$read_ctr_sels_13__read or
	  perf_counters$read_ctr_sels_14__read or
	  perf_counters$read_ctr_sels_15__read or
	  perf_counters$read_ctr_sels_16__read or
	  perf_counters$read_ctr_sels_17__read or
	  perf_counters$read_ctr_sels_18__read or
	  perf_counters$read_ctr_sels_19__read or
	  perf_counters$read_ctr_sels_20__read or
	  perf_counters$read_ctr_sels_21__read or
	  perf_counters$read_ctr_sels_22__read or
	  perf_counters$read_ctr_sels_23__read or
	  perf_counters$read_ctr_sels_24__read or
	  perf_counters$read_ctr_sels_25__read or
	  perf_counters$read_ctr_sels_26__read or
	  perf_counters$read_ctr_sels_27__read or
	  perf_counters$read_ctr_sels_28__read)
  begin
    case (idx__h5899)
      12'd0: x__h7424 = perf_counters$read_ctr_sels_0__read;
      12'd1: x__h7424 = perf_counters$read_ctr_sels_1__read;
      12'd2: x__h7424 = perf_counters$read_ctr_sels_2__read;
      12'd3: x__h7424 = perf_counters$read_ctr_sels_3__read;
      12'd4: x__h7424 = perf_counters$read_ctr_sels_4__read;
      12'd5: x__h7424 = perf_counters$read_ctr_sels_5__read;
      12'd6: x__h7424 = perf_counters$read_ctr_sels_6__read;
      12'd7: x__h7424 = perf_counters$read_ctr_sels_7__read;
      12'd8: x__h7424 = perf_counters$read_ctr_sels_8__read;
      12'd9: x__h7424 = perf_counters$read_ctr_sels_9__read;
      12'd10: x__h7424 = perf_counters$read_ctr_sels_10__read;
      12'd11: x__h7424 = perf_counters$read_ctr_sels_11__read;
      12'd12: x__h7424 = perf_counters$read_ctr_sels_12__read;
      12'd13: x__h7424 = perf_counters$read_ctr_sels_13__read;
      12'd14: x__h7424 = perf_counters$read_ctr_sels_14__read;
      12'd15: x__h7424 = perf_counters$read_ctr_sels_15__read;
      12'd16: x__h7424 = perf_counters$read_ctr_sels_16__read;
      12'd17: x__h7424 = perf_counters$read_ctr_sels_17__read;
      12'd18: x__h7424 = perf_counters$read_ctr_sels_18__read;
      12'd19: x__h7424 = perf_counters$read_ctr_sels_19__read;
      12'd20: x__h7424 = perf_counters$read_ctr_sels_20__read;
      12'd21: x__h7424 = perf_counters$read_ctr_sels_21__read;
      12'd22: x__h7424 = perf_counters$read_ctr_sels_22__read;
      12'd23: x__h7424 = perf_counters$read_ctr_sels_23__read;
      12'd24: x__h7424 = perf_counters$read_ctr_sels_24__read;
      12'd25: x__h7424 = perf_counters$read_ctr_sels_25__read;
      12'd26: x__h7424 = perf_counters$read_ctr_sels_26__read;
      12'd27: x__h7424 = perf_counters$read_ctr_sels_27__read;
      12'd28: x__h7424 = perf_counters$read_ctr_sels_28__read;
      default: x__h7424 = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(idx__h9804 or
	  perf_counters$read_ctr_sels_0__read or
	  perf_counters$read_ctr_sels_1__read or
	  perf_counters$read_ctr_sels_2__read or
	  perf_counters$read_ctr_sels_3__read or
	  perf_counters$read_ctr_sels_4__read or
	  perf_counters$read_ctr_sels_5__read or
	  perf_counters$read_ctr_sels_6__read or
	  perf_counters$read_ctr_sels_7__read or
	  perf_counters$read_ctr_sels_8__read or
	  perf_counters$read_ctr_sels_9__read or
	  perf_counters$read_ctr_sels_10__read or
	  perf_counters$read_ctr_sels_11__read or
	  perf_counters$read_ctr_sels_12__read or
	  perf_counters$read_ctr_sels_13__read or
	  perf_counters$read_ctr_sels_14__read or
	  perf_counters$read_ctr_sels_15__read or
	  perf_counters$read_ctr_sels_16__read or
	  perf_counters$read_ctr_sels_17__read or
	  perf_counters$read_ctr_sels_18__read or
	  perf_counters$read_ctr_sels_19__read or
	  perf_counters$read_ctr_sels_20__read or
	  perf_counters$read_ctr_sels_21__read or
	  perf_counters$read_ctr_sels_22__read or
	  perf_counters$read_ctr_sels_23__read or
	  perf_counters$read_ctr_sels_24__read or
	  perf_counters$read_ctr_sels_25__read or
	  perf_counters$read_ctr_sels_26__read or
	  perf_counters$read_ctr_sels_27__read or
	  perf_counters$read_ctr_sels_28__read)
  begin
    case (idx__h9804)
      12'd0: x__h10178 = perf_counters$read_ctr_sels_0__read;
      12'd1: x__h10178 = perf_counters$read_ctr_sels_1__read;
      12'd2: x__h10178 = perf_counters$read_ctr_sels_2__read;
      12'd3: x__h10178 = perf_counters$read_ctr_sels_3__read;
      12'd4: x__h10178 = perf_counters$read_ctr_sels_4__read;
      12'd5: x__h10178 = perf_counters$read_ctr_sels_5__read;
      12'd6: x__h10178 = perf_counters$read_ctr_sels_6__read;
      12'd7: x__h10178 = perf_counters$read_ctr_sels_7__read;
      12'd8: x__h10178 = perf_counters$read_ctr_sels_8__read;
      12'd9: x__h10178 = perf_counters$read_ctr_sels_9__read;
      12'd10: x__h10178 = perf_counters$read_ctr_sels_10__read;
      12'd11: x__h10178 = perf_counters$read_ctr_sels_11__read;
      12'd12: x__h10178 = perf_counters$read_ctr_sels_12__read;
      12'd13: x__h10178 = perf_counters$read_ctr_sels_13__read;
      12'd14: x__h10178 = perf_counters$read_ctr_sels_14__read;
      12'd15: x__h10178 = perf_counters$read_ctr_sels_15__read;
      12'd16: x__h10178 = perf_counters$read_ctr_sels_16__read;
      12'd17: x__h10178 = perf_counters$read_ctr_sels_17__read;
      12'd18: x__h10178 = perf_counters$read_ctr_sels_18__read;
      12'd19: x__h10178 = perf_counters$read_ctr_sels_19__read;
      12'd20: x__h10178 = perf_counters$read_ctr_sels_20__read;
      12'd21: x__h10178 = perf_counters$read_ctr_sels_21__read;
      12'd22: x__h10178 = perf_counters$read_ctr_sels_22__read;
      12'd23: x__h10178 = perf_counters$read_ctr_sels_23__read;
      12'd24: x__h10178 = perf_counters$read_ctr_sels_24__read;
      12'd25: x__h10178 = perf_counters$read_ctr_sels_25__read;
      12'd26: x__h10178 = perf_counters$read_ctr_sels_26__read;
      12'd27: x__h10178 = perf_counters$read_ctr_sels_27__read;
      12'd28: x__h10178 = perf_counters$read_ctr_sels_28__read;
      default: x__h10178 = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(idx__h11665 or
	  perf_counters$read_ctr_sels_0__read or
	  perf_counters$read_ctr_sels_1__read or
	  perf_counters$read_ctr_sels_2__read or
	  perf_counters$read_ctr_sels_3__read or
	  perf_counters$read_ctr_sels_4__read or
	  perf_counters$read_ctr_sels_5__read or
	  perf_counters$read_ctr_sels_6__read or
	  perf_counters$read_ctr_sels_7__read or
	  perf_counters$read_ctr_sels_8__read or
	  perf_counters$read_ctr_sels_9__read or
	  perf_counters$read_ctr_sels_10__read or
	  perf_counters$read_ctr_sels_11__read or
	  perf_counters$read_ctr_sels_12__read or
	  perf_counters$read_ctr_sels_13__read or
	  perf_counters$read_ctr_sels_14__read or
	  perf_counters$read_ctr_sels_15__read or
	  perf_counters$read_ctr_sels_16__read or
	  perf_counters$read_ctr_sels_17__read or
	  perf_counters$read_ctr_sels_18__read or
	  perf_counters$read_ctr_sels_19__read or
	  perf_counters$read_ctr_sels_20__read or
	  perf_counters$read_ctr_sels_21__read or
	  perf_counters$read_ctr_sels_22__read or
	  perf_counters$read_ctr_sels_23__read or
	  perf_counters$read_ctr_sels_24__read or
	  perf_counters$read_ctr_sels_25__read or
	  perf_counters$read_ctr_sels_26__read or
	  perf_counters$read_ctr_sels_27__read or
	  perf_counters$read_ctr_sels_28__read)
  begin
    case (idx__h11665)
      12'd0: x__h12039 = perf_counters$read_ctr_sels_0__read;
      12'd1: x__h12039 = perf_counters$read_ctr_sels_1__read;
      12'd2: x__h12039 = perf_counters$read_ctr_sels_2__read;
      12'd3: x__h12039 = perf_counters$read_ctr_sels_3__read;
      12'd4: x__h12039 = perf_counters$read_ctr_sels_4__read;
      12'd5: x__h12039 = perf_counters$read_ctr_sels_5__read;
      12'd6: x__h12039 = perf_counters$read_ctr_sels_6__read;
      12'd7: x__h12039 = perf_counters$read_ctr_sels_7__read;
      12'd8: x__h12039 = perf_counters$read_ctr_sels_8__read;
      12'd9: x__h12039 = perf_counters$read_ctr_sels_9__read;
      12'd10: x__h12039 = perf_counters$read_ctr_sels_10__read;
      12'd11: x__h12039 = perf_counters$read_ctr_sels_11__read;
      12'd12: x__h12039 = perf_counters$read_ctr_sels_12__read;
      12'd13: x__h12039 = perf_counters$read_ctr_sels_13__read;
      12'd14: x__h12039 = perf_counters$read_ctr_sels_14__read;
      12'd15: x__h12039 = perf_counters$read_ctr_sels_15__read;
      12'd16: x__h12039 = perf_counters$read_ctr_sels_16__read;
      12'd17: x__h12039 = perf_counters$read_ctr_sels_17__read;
      12'd18: x__h12039 = perf_counters$read_ctr_sels_18__read;
      12'd19: x__h12039 = perf_counters$read_ctr_sels_19__read;
      12'd20: x__h12039 = perf_counters$read_ctr_sels_20__read;
      12'd21: x__h12039 = perf_counters$read_ctr_sels_21__read;
      12'd22: x__h12039 = perf_counters$read_ctr_sels_22__read;
      12'd23: x__h12039 = perf_counters$read_ctr_sels_23__read;
      12'd24: x__h12039 = perf_counters$read_ctr_sels_24__read;
      12'd25: x__h12039 = perf_counters$read_ctr_sels_25__read;
      12'd26: x__h12039 = perf_counters$read_ctr_sels_26__read;
      12'd27: x__h12039 = perf_counters$read_ctr_sels_27__read;
      12'd28: x__h12039 = perf_counters$read_ctr_sels_28__read;
      default: x__h12039 = 7'b0101010 /* unspecified value */ ;
    endcase
  end
  always@(new_priv__h31189 or
	  SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317 or
	  SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250)
  begin
    case (new_priv__h31189)
      2'b01:
	  CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q1 =
	      SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[63:2];
      2'b11:
	  CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q1 =
	      SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[63:2];
      default: CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q1 =
		   SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[63:2];
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  mav_scr_write_cap or
	  cap_unpacked_capFat_addrBits__h24397 or x1_avValue_addrBits__h25710)
  begin
    case (mav_scr_write_scr_addr)
      5'd13, 5'd14, 5'd29, 5'd30:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1497 =
	      mav_scr_write_cap[85:72];
      5'd15, 5'd31:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1497 =
	      cap_unpacked_capFat_addrBits__h24397;
      5'd28:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1497 =
	      x1_avValue_addrBits__h25710;
      default: IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1497 =
		   14'd0;
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  mav_scr_write_cap or
	  SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1343 or
	  x__h24632 or
	  SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1309)
  begin
    case (mav_scr_write_scr_addr)
      5'd13, 5'd14, 5'd29:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1483 =
	      mav_scr_write_cap[150];
      5'd15, 5'd31:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1483 =
	      SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1343 &&
	      mav_scr_write_cap[150];
      5'd28:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1483 =
	      x__h24632 == 2'd0 &&
	      SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1309 &&
	      mav_scr_write_cap[150];
      default: IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1483 =
		   mav_scr_write_scr_addr == 5'd30 && mav_scr_write_cap[150];
    endcase
  end
  always@(new_priv__h31189 or
	  SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317 or
	  SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250)
  begin
    case (new_priv__h31189)
      2'b01:
	  CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q3 =
	      SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[0];
      2'b11:
	  CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q3 =
	      SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[0];
      default: CASE_new_priv1189_0b1_SEXT__0b0_CONCAT_rg_stcc_ETC__q3 =
		   SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[0];
    endcase
  end
  always@(IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018)
  begin
    case (IF_csr_trap_actions_nmi_THEN_DONTCARE_ELSE_IF__ETC___d2018)
      6'd51: mask__h35094 = 2'b01;
      6'd52: mask__h35094 = 2'b0;
      default: mask__h35094 = 2'b11;
    endcase
  end
  always@(interrupt_pending_cur_priv or csr_mstatus_rg_mstatus)
  begin
    case (interrupt_pending_cur_priv)
      2'b0:
	  IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494 =
	      !csr_mstatus_rg_mstatus[0];
      2'b01:
	  IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494 =
	      !csr_mstatus_rg_mstatus[1];
      default: IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2494 =
		   interrupt_pending_cur_priv != 2'b11 ||
		   !csr_mstatus_rg_mstatus[3];
    endcase
  end
  always@(interrupt_pending_cur_priv or csr_mstatus_rg_mstatus)
  begin
    case (interrupt_pending_cur_priv)
      2'b0:
	  IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612 =
	      csr_mstatus_rg_mstatus[0];
      2'b01:
	  IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612 =
	      csr_mstatus_rg_mstatus[1];
      default: IF_interrupt_pending_cur_priv_EQ_0b0_483_THEN__ETC___d2612 =
		   interrupt_pending_cur_priv == 2'b11 &&
		   csr_mstatus_rg_mstatus[3];
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q4 =
	      mav_scr_write_cap[71:68];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q4 = 4'd0;
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5 =
	      mav_scr_write_cap[55];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5 =
		   mav_scr_write_scr_addr == 5'd30 && mav_scr_write_cap[55];
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6 =
	      mav_scr_write_cap[54:53];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6 = 2'd0;
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7 =
	      mav_scr_write_cap[52:35];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7 =
		   18'd262143;
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8 =
	      mav_scr_write_cap[34];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8 =
		   mav_scr_write_scr_addr != 5'd30 || mav_scr_write_cap[34];
    endcase
  end
  always@(mav_scr_write_scr_addr or mav_scr_write_cap)
  begin
    case (mav_scr_write_scr_addr)
      5'd29, 5'd30, 5'd31:
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 =
	      mav_scr_write_cap[33:0];
      default: CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 =
		   34'h344000000;
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q4 or
	  mav_scr_write_cap or
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5 or
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6 or
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7 or
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8 or
	  CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 or
	  x1_avValue_perms_soft__h28270 or
	  x__h24632 or
	  x1_avValue_flags__h25712 or
	  IF_IF_mav_scr_write_cap_BITS_33_TO_28_254_EQ_0_ETC___d1473)
  begin
    case (mav_scr_write_scr_addr)
      5'd13, 5'd14, 5'd15:
	  IF_mav_scr_write_scr_addr_EQ_13_329_OR_mav_scr_ETC___d1533 =
	      mav_scr_write_cap[71:0];
      5'd28:
	  IF_mav_scr_write_scr_addr_EQ_13_329_OR_mav_scr_ETC___d1533 =
	      { x1_avValue_perms_soft__h28270,
		x__h24632 == 2'd0 && mav_scr_write_cap[67],
		x__h24632 == 2'd0 && mav_scr_write_cap[66],
		x__h24632 == 2'd0 && mav_scr_write_cap[65],
		x__h24632 == 2'd0 && mav_scr_write_cap[64],
		x__h24632 == 2'd0 && mav_scr_write_cap[63],
		x__h24632 == 2'd0 && mav_scr_write_cap[62],
		x__h24632 == 2'd0 && mav_scr_write_cap[61],
		x__h24632 == 2'd0 && mav_scr_write_cap[60],
		x__h24632 == 2'd0 && mav_scr_write_cap[59],
		x__h24632 == 2'd0 && mav_scr_write_cap[58],
		x__h24632 == 2'd0 && mav_scr_write_cap[57],
		x__h24632 == 2'd0 && mav_scr_write_cap[56],
		x1_avValue_flags__h25712,
		IF_IF_mav_scr_write_cap_BITS_33_TO_28_254_EQ_0_ETC___d1473 };
      default: IF_mav_scr_write_scr_addr_EQ_13_329_OR_mav_scr_ETC___d1533 =
		   { CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q4,
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[67],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[66],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[65],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[64],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[63],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[62],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[61],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[60],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[59],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[58],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[57],
		     (mav_scr_write_scr_addr == 5'd29 ||
		      mav_scr_write_scr_addr == 5'd31 ||
		      mav_scr_write_scr_addr == 5'd30) &&
		     mav_scr_write_cap[56],
		     CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q5,
		     CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q6,
		     CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q7,
		     CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q8,
		     CASE_mav_scr_write_scr_addr_29_mav_scr_write_c_ETC__q9 };
    endcase
  end
  always@(mav_scr_write_scr_addr or
	  mav_scr_write_cap or
	  cap_unpacked_capFat_address__h24396 or x1_avValue_address__h25709)
  begin
    case (mav_scr_write_scr_addr)
      5'd13, 5'd14, 5'd29, 5'd30:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1490 =
	      mav_scr_write_cap[149:86];
      5'd15, 5'd31:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1490 =
	      cap_unpacked_capFat_address__h24396;
      5'd28:
	  IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1490 =
	      x1_avValue_address__h25709;
      default: IF_mav_scr_write_scr_addr_EQ_13_329_THEN_mav_s_ETC___d1490 =
		   64'd0;
    endcase
  end
  always@(read_csr_csr_addr or
	  rg_tdata3 or
	  rg_fflags or
	  rg_frm or
	  csr_mstatus_rg_mstatus or
	  csr_mie$mv_sie_read or
	  SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250 or
	  rg_sscratch or
	  SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278 or
	  rg_scause or
	  rg_stval or
	  csr_mip$mv_sip_read or
	  rg_satp or
	  rg_medeleg or
	  rg_mideleg or
	  csr_mie$mv_read or
	  SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317 or
	  rg_mcounteren or
	  x__h9708 or
	  rg_mscratch or
	  SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347 or
	  rg_mcause or
	  rg_mtval or
	  csr_mip$mv_read or
	  rg_tselect or
	  rg_tdata1 or rg_tdata2 or rg_mcycle or rg_minstret or rg_mtime)
  begin
    case (read_csr_csr_addr)
      12'h001:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 59'd0, rg_fflags };
      12'h002:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 61'd0, rg_frm };
      12'h003:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 56'd0, rg_frm, rg_fflags };
      12'h100:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { csr_mstatus_rg_mstatus[63],
		29'd0,
		csr_mstatus_rg_mstatus[33:32],
		12'd0,
		csr_mstatus_rg_mstatus[19:18],
		1'd0,
		csr_mstatus_rg_mstatus[16:13],
		4'd0,
		csr_mstatus_rg_mstatus[8],
		2'd0,
		csr_mstatus_rg_mstatus[5:4],
		2'd0,
		csr_mstatus_rg_mstatus[1:0] };
      12'h102, 12'h103, 12'h106, 12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 = 64'd0;
      12'h104:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      csr_mie$mv_sie_read;
      12'h105:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[63:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[0] };
      12'h140:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_sscratch;
      12'h141:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278;
      12'h142:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { rg_scause[6], 57'd0, rg_scause[5:0] };
      12'h143:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_stval;
      12'h144:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      csr_mip$mv_sip_read;
      12'h180:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 = rg_satp;
      12'h300:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      csr_mstatus_rg_mstatus;
      12'h301:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      64'h800000000094112D;
      12'h302:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 35'd0, rg_medeleg };
      12'h303:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 52'd0, rg_mideleg };
      12'h304:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      csr_mie$mv_read;
      12'h305:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[63:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[0] };
      12'h306:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 32'd0, rg_mcounteren };
      12'h320:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { 32'd0, x__h9708 };
      12'h340:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_mscratch;
      12'h341:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347;
      12'h342:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      { rg_mcause[6], 57'd0, rg_mcause[5:0] };
      12'h343:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_mtval;
      12'h344:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      csr_mip$mv_read;
      12'h7A0:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_tselect;
      12'h7A1:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_tdata1;
      12'h7A2:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_tdata2;
      12'h9C0, 12'hBC0:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      64'h0000000080000001;
      12'hB00, 12'hC00:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_mcycle;
      12'hB02, 12'hC02:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_minstret;
      12'hC01:
	  IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
	      rg_mtime;
      default: IF_read_csr_csr_addr_EQ_0x1_5_THEN_0_CONCAT_rg_ETC___d400 =
		   rg_tdata3;
    endcase
  end
  always@(idx__h5876 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h5876)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d169 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(idx__h5853 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h5853)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d165 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(read_csr_port2_csr_addr or
	  rg_tdata3 or
	  rg_fflags or
	  rg_frm or
	  csr_mstatus_rg_mstatus or
	  csr_mie$mv_sie_read or
	  SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250 or
	  rg_sscratch or
	  SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278 or
	  rg_scause or
	  rg_stval or
	  csr_mip$mv_sip_read or
	  rg_satp or
	  rg_medeleg or
	  rg_mideleg or
	  csr_mie$mv_read or
	  SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317 or
	  rg_mcounteren or
	  x__h9708 or
	  rg_mscratch or
	  SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347 or
	  rg_mcause or
	  rg_mtval or
	  csr_mip$mv_read or
	  rg_tselect or
	  rg_tdata1 or rg_tdata2 or rg_mcycle or rg_minstret or rg_mtime)
  begin
    case (read_csr_port2_csr_addr)
      12'h001:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 59'd0, rg_fflags };
      12'h002:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 61'd0, rg_frm };
      12'h003:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 56'd0, rg_frm, rg_fflags };
      12'h100:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { csr_mstatus_rg_mstatus[63],
		29'd0,
		csr_mstatus_rg_mstatus[33:32],
		12'd0,
		csr_mstatus_rg_mstatus[19:18],
		1'd0,
		csr_mstatus_rg_mstatus[16:13],
		4'd0,
		csr_mstatus_rg_mstatus[8],
		2'd0,
		csr_mstatus_rg_mstatus[5:4],
		2'd0,
		csr_mstatus_rg_mstatus[1:0] };
      12'h102, 12'h103, 12'h106, 12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 = 64'd0;
      12'h104:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      csr_mie$mv_sie_read;
      12'h105:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[63:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[0] };
      12'h140:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_sscratch;
      12'h141:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278;
      12'h142:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { rg_scause[6], 57'd0, rg_scause[5:0] };
      12'h143:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_stval;
      12'h144:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      csr_mip$mv_sip_read;
      12'h180:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 = rg_satp;
      12'h300:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      csr_mstatus_rg_mstatus;
      12'h301:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      64'h800000000094112D;
      12'h302:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 35'd0, rg_medeleg };
      12'h303:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 52'd0, rg_mideleg };
      12'h304:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      csr_mie$mv_read;
      12'h305:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[63:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[0] };
      12'h306:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 32'd0, rg_mcounteren };
      12'h320:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { 32'd0, x__h9708 };
      12'h340:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_mscratch;
      12'h341:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347;
      12'h342:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      { rg_mcause[6], 57'd0, rg_mcause[5:0] };
      12'h343:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_mtval;
      12'h344:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      csr_mip$mv_read;
      12'h7A0:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_tselect;
      12'h7A1:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_tdata1;
      12'h7A2:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_tdata2;
      12'h9C0, 12'hBC0:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      64'h0000000080000001;
      12'hB00, 12'hC00:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_mcycle;
      12'hB02, 12'hC02:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_minstret;
      12'hC01:
	  IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
	      rg_mtime;
      default: IF_read_csr_port2_csr_addr_EQ_0x1_16_THEN_0_CO_ETC___d559 =
		   rg_tdata3;
    endcase
  end
  always@(idx__h9781 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h9781)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d510 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(idx__h9758 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h9758)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d506 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(mav_read_csr_csr_addr or
	  rg_tdata3 or
	  rg_fflags or
	  rg_frm or
	  csr_mstatus_rg_mstatus or
	  csr_mie$mv_sie_read or
	  SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250 or
	  rg_sscratch or
	  SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278 or
	  rg_scause or
	  rg_stval or
	  csr_mip$mv_sip_read or
	  rg_satp or
	  rg_medeleg or
	  rg_mideleg or
	  csr_mie$mv_read or
	  SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317 or
	  rg_mcounteren or
	  x__h9708 or
	  rg_mscratch or
	  SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347 or
	  rg_mcause or
	  rg_mtval or
	  csr_mip$mv_read or
	  rg_tselect or
	  rg_tdata1 or rg_tdata2 or rg_mcycle or rg_minstret or rg_mtime)
  begin
    case (mav_read_csr_csr_addr)
      12'h001:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 59'd0, rg_fflags };
      12'h002:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 61'd0, rg_frm };
      12'h003:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 56'd0, rg_frm, rg_fflags };
      12'h100:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { csr_mstatus_rg_mstatus[63],
		29'd0,
		csr_mstatus_rg_mstatus[33:32],
		12'd0,
		csr_mstatus_rg_mstatus[19:18],
		1'd0,
		csr_mstatus_rg_mstatus[16:13],
		4'd0,
		csr_mstatus_rg_mstatus[8],
		2'd0,
		csr_mstatus_rg_mstatus[5:4],
		2'd0,
		csr_mstatus_rg_mstatus[1:0] };
      12'h102, 12'h103, 12'h106, 12'hF11, 12'hF12, 12'hF13, 12'hF14:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 = 64'd0;
      12'h104:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      csr_mie$mv_sie_read;
      12'h105:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[63:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[0] };
      12'h140:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_sscratch;
      12'h141:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278;
      12'h142:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { rg_scause[6], 57'd0, rg_scause[5:0] };
      12'h143:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_stval;
      12'h144:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      csr_mip$mv_sip_read;
      12'h180:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 = rg_satp;
      12'h300:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      csr_mstatus_rg_mstatus;
      12'h301:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      64'h800000000094112D;
      12'h302:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 35'd0, rg_medeleg };
      12'h303:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 52'd0, rg_mideleg };
      12'h304:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      csr_mie$mv_read;
      12'h305:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[63:2],
		1'b0,
		SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[0] };
      12'h306:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 32'd0, rg_mcounteren };
      12'h320:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { 32'd0, x__h9708 };
      12'h340:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_mscratch;
      12'h341:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347;
      12'h342:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      { rg_mcause[6], 57'd0, rg_mcause[5:0] };
      12'h343:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_mtval;
      12'h344:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      csr_mip$mv_read;
      12'h7A0:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_tselect;
      12'h7A1:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_tdata1;
      12'h7A2:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_tdata2;
      12'h9C0, 12'hBC0:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      64'h0000000080000001;
      12'hB00, 12'hC00:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_mcycle;
      12'hB02, 12'hC02:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_minstret;
      12'hC01:
	  IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
	      rg_mtime;
      default: IF_mav_read_csr_csr_addr_EQ_0x1_01_THEN_0_CONC_ETC___d744 =
		   rg_tdata3;
    endcase
  end
  always@(idx__h11642 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h11642)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d695 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(idx__h11619 or
	  perf_counters$read_counters_0__read or
	  perf_counters$read_counters_1__read or
	  perf_counters$read_counters_2__read or
	  perf_counters$read_counters_3__read or
	  perf_counters$read_counters_4__read or
	  perf_counters$read_counters_5__read or
	  perf_counters$read_counters_6__read or
	  perf_counters$read_counters_7__read or
	  perf_counters$read_counters_8__read or
	  perf_counters$read_counters_9__read or
	  perf_counters$read_counters_10__read or
	  perf_counters$read_counters_11__read or
	  perf_counters$read_counters_12__read or
	  perf_counters$read_counters_13__read or
	  perf_counters$read_counters_14__read or
	  perf_counters$read_counters_15__read or
	  perf_counters$read_counters_16__read or
	  perf_counters$read_counters_17__read or
	  perf_counters$read_counters_18__read or
	  perf_counters$read_counters_19__read or
	  perf_counters$read_counters_20__read or
	  perf_counters$read_counters_21__read or
	  perf_counters$read_counters_22__read or
	  perf_counters$read_counters_23__read or
	  perf_counters$read_counters_24__read or
	  perf_counters$read_counters_25__read or
	  perf_counters$read_counters_26__read or
	  perf_counters$read_counters_27__read or
	  perf_counters$read_counters_28__read)
  begin
    case (idx__h11619)
      12'd0:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_0__read;
      12'd1:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_1__read;
      12'd2:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_2__read;
      12'd3:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_3__read;
      12'd4:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_4__read;
      12'd5:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_5__read;
      12'd6:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_6__read;
      12'd7:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_7__read;
      12'd8:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_8__read;
      12'd9:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_9__read;
      12'd10:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_10__read;
      12'd11:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_11__read;
      12'd12:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_12__read;
      12'd13:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_13__read;
      12'd14:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_14__read;
      12'd15:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_15__read;
      12'd16:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_16__read;
      12'd17:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_17__read;
      12'd18:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_18__read;
      12'd19:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_19__read;
      12'd20:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_20__read;
      12'd21:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_21__read;
      12'd22:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_22__read;
      12'd23:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_23__read;
      12'd24:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_24__read;
      12'd25:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_25__read;
      12'd26:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_26__read;
      12'd27:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_27__read;
      12'd28:
	  SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
	      perf_counters$read_counters_28__read;
      default: SEL_ARR_perf_counters_read_counters_0__read__3_ETC___d691 =
		   64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(read_scr_scr_addr or
	  rg_mepcc or
	  rg_stcc or
	  rg_stdc or
	  rg_sscratchc or rg_sepcc or rg_mtcc or rg_mtdc or rg_mscratchc)
  begin
    case (read_scr_scr_addr)
      5'd12:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 = rg_stcc;
      5'd13:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 = rg_stdc;
      5'd14:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 =
	      rg_sscratchc;
      5'd15:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 =
	      rg_sepcc;
      5'd28:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 = rg_mtcc;
      5'd29:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 = rg_mtdc;
      5'd30:
	  IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 =
	      rg_mscratchc;
      default: IF_read_scr_scr_addr_EQ_12_63_THEN_rg_stcc_27__ETC___d588 =
		   rg_mepcc;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	csr_mstatus_rg_mstatus <= `BSV_ASSIGNMENT_DELAY 64'h0000000A00002000;
	rg_ctr_inhib_ir_cy <= `BSV_ASSIGNMENT_DELAY 2'd0;
	rg_mcycle <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_mepcc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_minstret <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_mscratchc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_mtcc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_mtdc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_mtime <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_nmi <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_sepcc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_sscratchc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_state <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_stcc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
	rg_stdc <= `BSV_ASSIGNMENT_DELAY
	    151'h0000000000000000000000001FFFFF44000000;
      end
    else
      begin
        if (cfg_verbosity$EN)
	  cfg_verbosity <= `BSV_ASSIGNMENT_DELAY cfg_verbosity$D_IN;
	if (csr_mstatus_rg_mstatus$EN)
	  csr_mstatus_rg_mstatus <= `BSV_ASSIGNMENT_DELAY
	      csr_mstatus_rg_mstatus$D_IN;
	if (rg_ctr_inhib_ir_cy$EN)
	  rg_ctr_inhib_ir_cy <= `BSV_ASSIGNMENT_DELAY rg_ctr_inhib_ir_cy$D_IN;
	if (rg_mcycle$EN) rg_mcycle <= `BSV_ASSIGNMENT_DELAY rg_mcycle$D_IN;
	if (rg_mepcc$EN) rg_mepcc <= `BSV_ASSIGNMENT_DELAY rg_mepcc$D_IN;
	if (rg_minstret$EN)
	  rg_minstret <= `BSV_ASSIGNMENT_DELAY rg_minstret$D_IN;
	if (rg_mscratchc$EN)
	  rg_mscratchc <= `BSV_ASSIGNMENT_DELAY rg_mscratchc$D_IN;
	if (rg_mtcc$EN) rg_mtcc <= `BSV_ASSIGNMENT_DELAY rg_mtcc$D_IN;
	if (rg_mtdc$EN) rg_mtdc <= `BSV_ASSIGNMENT_DELAY rg_mtdc$D_IN;
	if (rg_mtime$EN) rg_mtime <= `BSV_ASSIGNMENT_DELAY rg_mtime$D_IN;
	if (rg_nmi$EN) rg_nmi <= `BSV_ASSIGNMENT_DELAY rg_nmi$D_IN;
	if (rg_sepcc$EN) rg_sepcc <= `BSV_ASSIGNMENT_DELAY rg_sepcc$D_IN;
	if (rg_sscratchc$EN)
	  rg_sscratchc <= `BSV_ASSIGNMENT_DELAY rg_sscratchc$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
	if (rg_stcc$EN) rg_stcc <= `BSV_ASSIGNMENT_DELAY rg_stcc$D_IN;
	if (rg_stdc$EN) rg_stdc <= `BSV_ASSIGNMENT_DELAY rg_stdc$D_IN;
      end
    if (rg_dcsr$EN) rg_dcsr <= `BSV_ASSIGNMENT_DELAY rg_dcsr$D_IN;
    if (rg_dpcc$EN) rg_dpcc <= `BSV_ASSIGNMENT_DELAY rg_dpcc$D_IN;
    if (rg_dscratch0$EN)
      rg_dscratch0 <= `BSV_ASSIGNMENT_DELAY rg_dscratch0$D_IN;
    if (rg_dscratch1$EN)
      rg_dscratch1 <= `BSV_ASSIGNMENT_DELAY rg_dscratch1$D_IN;
    if (rg_fflags$EN) rg_fflags <= `BSV_ASSIGNMENT_DELAY rg_fflags$D_IN;
    if (rg_frm$EN) rg_frm <= `BSV_ASSIGNMENT_DELAY rg_frm$D_IN;
    if (rg_mcause$EN) rg_mcause <= `BSV_ASSIGNMENT_DELAY rg_mcause$D_IN;
    if (rg_mccsr$EN) rg_mccsr <= `BSV_ASSIGNMENT_DELAY rg_mccsr$D_IN;
    if (rg_mcounteren$EN)
      rg_mcounteren <= `BSV_ASSIGNMENT_DELAY rg_mcounteren$D_IN;
    if (rg_medeleg$EN) rg_medeleg <= `BSV_ASSIGNMENT_DELAY rg_medeleg$D_IN;
    if (rg_mideleg$EN) rg_mideleg <= `BSV_ASSIGNMENT_DELAY rg_mideleg$D_IN;
    if (rg_mscratch$EN) rg_mscratch <= `BSV_ASSIGNMENT_DELAY rg_mscratch$D_IN;
    if (rg_mtval$EN) rg_mtval <= `BSV_ASSIGNMENT_DELAY rg_mtval$D_IN;
    if (rg_nmi_vector$EN)
      rg_nmi_vector <= `BSV_ASSIGNMENT_DELAY rg_nmi_vector$D_IN;
    if (rg_satp$EN) rg_satp <= `BSV_ASSIGNMENT_DELAY rg_satp$D_IN;
    if (rg_scause$EN) rg_scause <= `BSV_ASSIGNMENT_DELAY rg_scause$D_IN;
    if (rg_sccsr$EN) rg_sccsr <= `BSV_ASSIGNMENT_DELAY rg_sccsr$D_IN;
    if (rg_sscratch$EN) rg_sscratch <= `BSV_ASSIGNMENT_DELAY rg_sscratch$D_IN;
    if (rg_stval$EN) rg_stval <= `BSV_ASSIGNMENT_DELAY rg_stval$D_IN;
    if (rg_tdata1$EN) rg_tdata1 <= `BSV_ASSIGNMENT_DELAY rg_tdata1$D_IN;
    if (rg_tdata2$EN) rg_tdata2 <= `BSV_ASSIGNMENT_DELAY rg_tdata2$D_IN;
    if (rg_tdata3$EN) rg_tdata3 <= `BSV_ASSIGNMENT_DELAY rg_tdata3$D_IN;
    if (rg_tselect$EN) rg_tselect <= `BSV_ASSIGNMENT_DELAY rg_tselect$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cfg_verbosity = 4'hA;
    csr_mstatus_rg_mstatus = 64'hAAAAAAAAAAAAAAAA;
    rg_ctr_inhib_ir_cy = 2'h2;
    rg_dcsr = 32'hAAAAAAAA;
    rg_dpcc = 161'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_dscratch0 = 64'hAAAAAAAAAAAAAAAA;
    rg_dscratch1 = 64'hAAAAAAAAAAAAAAAA;
    rg_fflags = 5'h0A;
    rg_frm = 3'h2;
    rg_mcause = 7'h2A;
    rg_mccsr = 11'h2AA;
    rg_mcounteren = 32'hAAAAAAAA;
    rg_mcycle = 64'hAAAAAAAAAAAAAAAA;
    rg_medeleg = 29'h0AAAAAAA;
    rg_mepcc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_mideleg = 12'hAAA;
    rg_minstret = 64'hAAAAAAAAAAAAAAAA;
    rg_mscratch = 64'hAAAAAAAAAAAAAAAA;
    rg_mscratchc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_mtcc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_mtdc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_mtime = 64'hAAAAAAAAAAAAAAAA;
    rg_mtval = 64'hAAAAAAAAAAAAAAAA;
    rg_nmi = 1'h0;
    rg_nmi_vector = 64'hAAAAAAAAAAAAAAAA;
    rg_satp = 64'hAAAAAAAAAAAAAAAA;
    rg_scause = 7'h2A;
    rg_sccsr = 11'h2AA;
    rg_sepcc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_sscratch = 64'hAAAAAAAAAAAAAAAA;
    rg_sscratchc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_state = 1'h0;
    rg_stcc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_stdc = 151'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_stval = 64'hAAAAAAAAAAAAAAAA;
    rg_tdata1 = 64'hAAAAAAAAAAAAAAAA;
    rg_tdata2 = 64'hAAAAAAAAAAAAAAAA;
    rg_tdata3 = 64'hAAAAAAAAAAAAAAAA;
    rg_tselect = 64'hAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("mstatus = 0x%0h", csr_mstatus_rg_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug)
	$display("sstatus = 0x%0h",
		 { csr_mstatus_rg_mstatus[63],
		   29'd0,
		   csr_mstatus_rg_mstatus[33:32],
		   12'd0,
		   csr_mstatus_rg_mstatus[19:18],
		   1'd0,
		   csr_mstatus_rg_mstatus[16:13],
		   4'd0,
		   csr_mstatus_rg_mstatus[8],
		   2'd0,
		   csr_mstatus_rg_mstatus[5:4],
		   2'd0,
		   csr_mstatus_rg_mstatus[1:0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("mip     = 0x%0h", csr_mip$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("sip     = 0x%0h", csr_mip$mv_sip_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("mie     = 0x%0h", csr_mie$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_debug) $display("sie     = 0x%0h", csr_mie$mv_sie_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_csr_write &&
	  (mav_csr_write_csr_addr_ULT_0xB03___d748 ||
	   !mav_csr_write_csr_addr_ULE_0xB1F___d750) &&
	  mav_csr_write_csr_addr_ULT_0x323_56_OR_NOT_mav_ETC___d1179 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("%0d: ERROR: CSR-write addr 0x%0h val 0x%0h not successful",
		 rg_mcycle,
		 mav_csr_write_csr_addr,
		 mav_csr_write_word);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("%0d: CSR_Regfile.csr_trap_actions:", rg_mcycle);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("    from priv %0d  pc 0x%0h  interrupt %0d  exc_code %0d  xtval 0x%0h",
		 csr_trap_actions_from_priv,
		 x__h29885 | addrLSB__h29874,
		 csr_trap_actions_interrupt,
		 csr_trap_actions_exc_code,
		 csr_trap_actions_xtval);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("    priv %0d: ", 2'b01);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ip: 0x%0h", csr_mip$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ie: 0x%0h", csr_mie$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" edeleg: 0x%0h", 29'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ideleg: 0x%0h", 12'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" cause:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd0)
	$write("USER_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd1)
	$write("SUPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd2)
	$write("HYPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd3)
	$write("MACHINE_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd4)
	$write("USER_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd5)
	$write("SUPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd6)
	$write("HYPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd7)
	$write("MACHINE_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd8)
	$write("USER_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd9)
	$write("SUPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd10)
	$write("HYPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] == 6'd11)
	$write("MACHINE_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_scause[6] &&
	  rg_scause[5:0] != 6'd0 &&
	  rg_scause[5:0] != 6'd1 &&
	  rg_scause[5:0] != 6'd2 &&
	  rg_scause[5:0] != 6'd3 &&
	  rg_scause[5:0] != 6'd4 &&
	  rg_scause[5:0] != 6'd5 &&
	  rg_scause[5:0] != 6'd6 &&
	  rg_scause[5:0] != 6'd7 &&
	  rg_scause[5:0] != 6'd8 &&
	  rg_scause[5:0] != 6'd9 &&
	  rg_scause[5:0] != 6'd10 &&
	  rg_scause[5:0] != 6'd11)
	$write("unknown interrupt Exc_Code %d", rg_scause[5:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd0)
	$write("INSTRUCTION_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd1)
	$write("INSTRUCTION_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd2)
	$write("ILLEGAL_INSTRUCTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd3)
	$write("BREAKPOINT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd4)
	$write("LOAD_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd5)
	$write("LOAD_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd6)
	$write("STORE_AMO_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd7)
	$write("STORE_AMO_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd8)
	$write("ECALL_FROM_U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd9)
	$write("ECALL_FROM_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd11)
	$write("ECALL_FROM_M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd12)
	$write("INSTRUCTION_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd13)
	$write("LOAD_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] == 6'd15)
	$write("STORE_AMO_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_scause[6] &&
	  rg_scause[5:0] != 6'd0 &&
	  rg_scause[5:0] != 6'd1 &&
	  rg_scause[5:0] != 6'd2 &&
	  rg_scause[5:0] != 6'd3 &&
	  rg_scause[5:0] != 6'd4 &&
	  rg_scause[5:0] != 6'd5 &&
	  rg_scause[5:0] != 6'd6 &&
	  rg_scause[5:0] != 6'd7 &&
	  rg_scause[5:0] != 6'd8 &&
	  rg_scause[5:0] != 6'd9 &&
	  rg_scause[5:0] != 6'd11 &&
	  rg_scause[5:0] != 6'd12 &&
	  rg_scause[5:0] != 6'd13 &&
	  rg_scause[5:0] != 6'd15)
	$write("unknown trap Exc_Code %d", rg_scause[5:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" status: 0x%0h",
	       { csr_mstatus_rg_mstatus[63],
		 29'd0,
		 csr_mstatus_rg_mstatus[33:32],
		 12'd0,
		 csr_mstatus_rg_mstatus[19:18],
		 1'd0,
		 csr_mstatus_rg_mstatus[16:13],
		 4'd0,
		 csr_mstatus_rg_mstatus[8],
		 2'd0,
		 csr_mstatus_rg_mstatus[5:4],
		 2'd0,
		 csr_mstatus_rg_mstatus[1:0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tvec: 0x%0h",
	       { SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[63:2],
		 1'b0,
		 SEXT__0b0_CONCAT_rg_stcc_27_BITS_85_TO_72_28_2_ETC___d250[0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" epc: 0x%0h",
	       SEXT__0b0_CONCAT_rg_sepcc_55_BITS_85_TO_72_56__ETC___d278);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tval: 0x%0h", rg_stval);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("    priv %0d: ", 2'b11);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ip: 0x%0h", csr_mip$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ie: 0x%0h", csr_mie$mv_read);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" edeleg: 0x%0h", rg_medeleg);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ideleg: 0x%0h", rg_mideleg);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" cause:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd0)
	$write("USER_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd1)
	$write("SUPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd2)
	$write("HYPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd3)
	$write("MACHINE_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd4)
	$write("USER_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd5)
	$write("SUPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd6)
	$write("HYPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd7)
	$write("MACHINE_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd8)
	$write("USER_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd9)
	$write("SUPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd10)
	$write("HYPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd11)
	$write("MACHINE_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  rg_mcause[6] &&
	  rg_mcause[5:0] != 6'd0 &&
	  rg_mcause[5:0] != 6'd1 &&
	  rg_mcause[5:0] != 6'd2 &&
	  rg_mcause[5:0] != 6'd3 &&
	  rg_mcause[5:0] != 6'd4 &&
	  rg_mcause[5:0] != 6'd5 &&
	  rg_mcause[5:0] != 6'd6 &&
	  rg_mcause[5:0] != 6'd7 &&
	  rg_mcause[5:0] != 6'd8 &&
	  rg_mcause[5:0] != 6'd9 &&
	  rg_mcause[5:0] != 6'd10 &&
	  rg_mcause[5:0] != 6'd11)
	$write("unknown interrupt Exc_Code %d", rg_mcause[5:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd0)
	$write("INSTRUCTION_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd1)
	$write("INSTRUCTION_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd2)
	$write("ILLEGAL_INSTRUCTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd3)
	$write("BREAKPOINT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd4)
	$write("LOAD_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd5)
	$write("LOAD_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd6)
	$write("STORE_AMO_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd7)
	$write("STORE_AMO_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd8)
	$write("ECALL_FROM_U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd9)
	$write("ECALL_FROM_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd11)
	$write("ECALL_FROM_M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd12)
	$write("INSTRUCTION_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd13)
	$write("LOAD_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] == 6'd15)
	$write("STORE_AMO_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !rg_mcause[6] &&
	  rg_mcause[5:0] != 6'd0 &&
	  rg_mcause[5:0] != 6'd1 &&
	  rg_mcause[5:0] != 6'd2 &&
	  rg_mcause[5:0] != 6'd3 &&
	  rg_mcause[5:0] != 6'd4 &&
	  rg_mcause[5:0] != 6'd5 &&
	  rg_mcause[5:0] != 6'd6 &&
	  rg_mcause[5:0] != 6'd7 &&
	  rg_mcause[5:0] != 6'd8 &&
	  rg_mcause[5:0] != 6'd9 &&
	  rg_mcause[5:0] != 6'd11 &&
	  rg_mcause[5:0] != 6'd12 &&
	  rg_mcause[5:0] != 6'd13 &&
	  rg_mcause[5:0] != 6'd15)
	$write("unknown trap Exc_Code %d", rg_mcause[5:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" status: 0x%0h", csr_mstatus_rg_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tvec: 0x%0h",
	       { SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[63:2],
		 1'b0,
		 SEXT__0b0_CONCAT_rg_mtcc_94_BITS_85_TO_72_95_9_ETC___d317[0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" epc: 0x%0h",
	       SEXT__0b0_CONCAT_rg_mepcc_24_BITS_85_TO_72_25__ETC___d347);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tval: 0x%0h", rg_mtval);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("    Return: new pc 0x%0h  ", _theResult_____2__h32772);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" new mstatus:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("MStatus{",
	       "sd:%0d",
	       x__h35993[14:13] == 2'h3 || x__h35993[16:15] == 2'h3);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" sxl:%0d uxl:%0d", x__h35993[35:34], x__h35993[33:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tsr:%0d", x__h35993[22]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tw:%0d", x__h35993[21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" tvm:%0d", x__h35993[20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" mxr:%0d", x__h35993[19]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" sum:%0d", x__h35993[18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" mprv:%0d", x__h35993[17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" xs:%0d", x__h35993[16:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" fs:%0d", x__h35993[14:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" mpp:%0d", x__h35993[12:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" spp:%0d", x__h35993[8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" pies:%0d_%0d%0d", x__h35993[7], x__h35993[5], x__h35993[4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" ies:%0d_%0d%0d", x__h35993[3], x__h35993[1], x__h35993[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" new xcause:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd0)
	$write("USER_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd1)
	$write("SUPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd2)
	$write("HYPERVISOR_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd3)
	$write("MACHINE_SW_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd4)
	$write("USER_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd5)
	$write("SUPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd6)
	$write("HYPERVISOR_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd7)
	$write("MACHINE_TIMER_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd8)
	$write("USER_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd9)
	$write("SUPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd10)
	$write("HYPERVISOR_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  !csr_trap_actions_nmi &&
	  csr_trap_actions_interrupt &&
	  exc_code__h33582 == 6'd11)
	$write("MACHINE_EXTERNAL_INTERRUPT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  NOT_csr_trap_actions_nmi_844_AND_csr_trap_acti_ETC___d1959)
	$write("unknown interrupt Exc_Code %d", exc_code__h33582);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd0)
	$write("INSTRUCTION_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd1)
	$write("INSTRUCTION_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd2)
	$write("ILLEGAL_INSTRUCTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd3)
	$write("BREAKPOINT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd4)
	$write("LOAD_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd5)
	$write("LOAD_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd6)
	$write("STORE_AMO_ADDR_MISALIGNED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd7)
	$write("STORE_AMO_ACCESS_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd8)
	$write("ECALL_FROM_U");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd9)
	$write("ECALL_FROM_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd11)
	$write("ECALL_FROM_M");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd12)
	$write("INSTRUCTION_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd13)
	$write("LOAD_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  (csr_trap_actions_nmi || !csr_trap_actions_interrupt) &&
	  exc_code__h33582 == 6'd15)
	$write("STORE_AMO_PAGE_FAULT");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183 &&
	  csr_trap_actions_nmi_OR_NOT_csr_trap_actions_i_ETC___d2010)
	$write("unknown trap Exc_Code %d", exc_code__h33582);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" new priv %0d", new_priv__h31189);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_csr_trap_actions &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("%0d: ERROR: SCR-write addr 0x%0h val ",
	       rg_mcycle,
	       mav_scr_write_scr_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("valid:%b",
	       mav_scr_write_cap[150],
	       " perms:0x%x",
	       { 15'd0, mav_scr_write_cap[71:56] });
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" reserved:0x%x", mav_scr_write_cap[54:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" format:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1376)
	$write("EmbeddedExp");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1378)
	$write("Exp0");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" bounds:");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("Bounds { ", "exp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("%d", $unsigned(mav_scr_write_cap[33:28]));
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "topBits: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("'h%h", mav_scr_write_cap[27:14]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "baseBits: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("'h%h", mav_scr_write_cap[13:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" address:0x%x", mav_scr_write_cap[149:86]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" addrBits:0x%x", mav_scr_write_cap[85:72]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" {bot:0x%x top:0x%x len:0x%x offset:0x%x}",
	       mav_scr_write_cap_BITS_149_TO_100_312_AND_1125_ETC___d1317,
	       IF_mav_scr_write_cap_BITS_33_TO_28_254_ULT_51__ETC___d1413,
	       (mav_scr_write_cap[33:28] < 6'd52) ?
		 length__h27883 :
		 65'h1FFFFFFFFFFFFFFFF,
	       SEXT__0b0_CONCAT_mav_scr_write_cap_BITS_85_TO__ETC___d1281);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" (TempFields: {");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("MetaInfo { ", "repBoundTopBits: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("'h%h", repBound__h28108);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "topHi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1419)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1421)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "baseHi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1422)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1424)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "addrHi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1425)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write &&
	  NOT_mav_scr_write_scr_addr_EQ_12_253_356_AND_N_ETC___d1426)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "topCorrection: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("%d", $signed(x__h28169));
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(", ", "baseCorrection: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("%d", $signed(x__h28188), " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write("})");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_scr_write && mav_scr_write_scr_addr != 5'd12 &&
	  mav_scr_write_scr_addr != 5'd13 &&
	  mav_scr_write_scr_addr != 5'd15 &&
	  mav_scr_write_scr_addr != 5'd14 &&
	  mav_scr_write_scr_addr != 5'd28 &&
	  mav_scr_write_scr_addr != 5'd29 &&
	  mav_scr_write_scr_addr != 5'd31 &&
	  mav_scr_write_scr_addr != 5'd30 &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$write(" not successful", "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_m_external_interrupt_req &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("%0d: CSR_RegFile: m_external_interrupt_req: %x",
		 rg_mcycle,
		 m_external_interrupt_req_set_not_clear);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_s_external_interrupt_req &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("%0d: CSR_RegFile: s_external_interrupt_req: %x",
		 rg_mcycle,
		 s_external_interrupt_req_set_not_clear);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_timer_interrupt_req &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("%0d: CSR_RegFile: timer_interrupt_req: %x",
		 rg_mcycle,
		 timer_interrupt_req_set_not_clear);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_software_interrupt_req &&
	  NOT_cfg_verbosity_read__181_ULE_1_182___d1183)
	$display("%0d: CSR_RegFile: software_interrupt_req: %x",
		 rg_mcycle,
		 software_interrupt_req_set_not_clear);
  end
  // synopsys translate_on
endmodule  // mkCSR_RegFile

